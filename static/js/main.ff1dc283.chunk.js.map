{"version":3,"sources":["config.js","useAuth.js","components/signin/signin.js","redux/employee.feature.js","components/signup/employeesignup.js","firebaseini.js","employeeserver.js","Individual.js","cards.js","viewemployees.js","Welcome.js","task/progressbar.js","task/handlesubmit.js","task/createtask.js","task/createsubtask.js","task/taskserver.js","task/displaytask.js","task/viewfeedback.js","task/singletask.js","payroll/payroll.js","display.js","Home.js","components/signup/employersignup.js","NavBar.jsx","employees/employeeprogressbar.js","employees/employeefeedback.js","employees/employeesingletask.js","employees/employeedisplaytask.js","employees/employeewelcome.js","employees/salary.js","employees/employeenavbar.js","App.jsx","reportWebVitals.js","redux/store.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","firebaseConfig","firebaseAuth","getAuth","authContext","GoogleAuthProvider","createContext","db","getFirestore","ProvideAuth","_ref","children","auth","_useState","useState","_useState2","Object","slicedToArray","user","setUser","signin","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","email","password","wrap","_context","prev","next","preventDefault","abrupt","signInWithEmailAndPassword","then","response","stop","_x","_x2","_x3","apply","this","arguments","registerWithEmailAndPassword","_ref3","_callee2","fullname","username","_auth","res","_user","_context2","getDatabase","createUserWithEmailAndPassword","sent","addDoc","collection","uid","authProvider","t0","_x4","_x5","_x6","signInWithGoogle","_ref4","_callee3","googleProvider","_user2","q","_context3","signInWithPopup","query","where","getDocs","docs","length","name","displayName","console","error","alert","message","useEffect","unsubscribe","onAuthStateChanged","signup","signout","signOut","signOutWithGoogle","catch","sendPasswordResetEmail","confirmPasswordReset","code","useProvideAuth","react_default","a","createElement","Provider","value","useAuth","useContext","theme","styled","div","_templateObject","taggedTemplateLiteral","createTheme","Signin","navigate","useNavigate","setName","_useState3","_useState4","setPassword","react","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","type","Button","mb","Grid","container","item","xs","SignInUser","userSlice","createSlice","initialState","reducers","login","state","action","payload","logout","actions","employeesignup_templateObject","Submit","firstName","setFirstName","lastName","setLastName","_useState5","_useState6","secretcode","setSecretCode","_useState7","_useState8","_useState9","_useState10","dob","setDob","_useState11","_useState12","workExp","setWorkExp","_useState13","_useState14","location","setLocation","_useState15","_useState16","title","setTitle","_useState17","_useState18","phoneNum","setphoneNum","_useState19","_useState20","_useState21","_useState22","loginerror","setError","_useState23","_useState24","_useState25","_useState26","retypepassword","setRetypepassword","dispatch","useDispatch","_register","employeesignup_regeneratorRuntime","event","call","userAuth","updateProfile","log","err","fetch","json","register","InputLabelProps","shrink","CreateForm","employeesignup_Submit","employeeCollectionRef","employeeserver","addEmployee","newEmployee","updatedEmployee","bookDoc","doc","updateDoc","deleteEmployee","employeeDoc","deleteDoc","getALLEmployee","getEmployee","EmployeeDoc","getDoc","BootstrapDialog","Dialog","& .MuiDialogContent-root","padding","spacing","& .MuiDialogActions-root","BootstrapDialogTitle","props","onClose","other","objectWithoutProperties","DialogTitle","assign","p","IconButton","aria-label","onClick","position","right","top","color","palette","grey","Close_default","Individual","employees","setEmployees","useParams","_React$useState","React","_React$useState2","open","setOpen","rate","setRate","hourly","setHourly","days","setDays","overtime","setOvertime","deductions","setDeductions","overall","setOverall","getEmployees","handleClose","sendPayroll","Individual_regeneratorRuntime","dailySalary","daysAttended","overtimeHourlyRate","overtimeHours","overallSalary","employeeName","employerName","result","reason","_x7","_x8","data","EmployeeDataService","_document","mapValue","fields","stringValue","_x9","employeename","className","rowspacing","style","backgroundImage","src","alt","height","width","AddIcCall_default","AddLocation_default","Cake_default","Work_default","Paid_default","aria-labelledby","Individual_BootstrapDialogTitle","DialogContent","dividers","Box_Box","Number","DialogActions","Item","Paper","objectSpread","backgroundColor","mode","typography","body2","textAlign","text","secondary","Cards","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","EmployeesList","getEmployeeId","viewemployees_regeneratorRuntime","call1","returned","body","map","rowSpacing","columns","columnSpacing","sm","md","index","key","react_router_dom","to","textDecoration","employer","Welcome","fontFamily","join","currentUser","setUsername","FindUserType","Welcome_regeneratorRuntime","List","ListItem","ListItemIcon","Send_default","ProgressBar","completed","fillerStyles","concat","borderRadius","fontWeight","handleSubmit","handlesubmit_regeneratorRuntime","taskname","description","people","CreateTask","useTheme","employername","setEmployername","createtask_regeneratorRuntime","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","names","employee","getStyles","personName","indexOf","fontWeightRegular","fontWeightMedium","calltask","callresult","setPersonName","_React$useState3","_React$useState4","task","setTask","setDescription","fontSize","createtask_BootstrapDialog","createtask_BootstrapDialogTitle","FormControl","fullwidth","ml","InputLabel","Select","labelId","multiple","split","input","OutlinedInput","MenuItem","undefined","CreateSubtask","setIsupdated","isUpdated","maintask","feedback","setFeedback","goal","setGoal","createsubtask_regeneratorRuntime","subtaskSubmit","subTaskName","subTaskDesc","mainTaskName","workerArray","left","createsubtask_BootstrapDialog","createsubtask_BootstrapDialogTitle","InputProps","inputProps","min","taskCollectionRef","addTask","newTask","deleteTask","getALLTask","printRef","getTask","OutlinedCard","window","onload","hash","reload","tasks","setTasks","progress","setProgress","displaytask_regeneratorRuntime","call2","result2","_loop","i","_loop2","_i","toConsumableArray","resulttask","delegateYield","progressbar","Math","round","CardActions","Transition","ref","Slide","direction","FullScreenDialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","flex","button","ListItemText","primary","Divider","BasicCard","subtasks","setSubTasks","subtasktemp","mainworkers","setMainWorkers","workers","setWorkers","mainprogress","setMainProgress","status","setStatus","mainstatus","setMainStatus","maindescription","setMainDescription","useLocation","_useState27","_useState28","tempprogress","progresstemp","_useState29","_useState30","newValue","setnewValue","mainTaskProgress","singletask_regeneratorRuntime","result1","viewMainTask","viewMainTaskFeedback","_context4","subTaskProgress","_callee4","_context5","_x10","_x11","completeSubTask","_ref5","_callee5","_context6","_x12","_x13","_x14","_x15","completeMainTask","_ref6","_callee6","_context7","_x16","_x17","_x18","minWidth","worker","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","AccordionDetails","existingItems","slice","subTaskCounter","calculateprogress","Showpayroll","setEmployeenames","payroll_regeneratorRuntime","subheader","ListSubheader","ListItemButton","element","reduce","b","Home","setEmployeeId","flexGrow","borderColor","react_router","path","viewemployees","employName","payroll","employersignup_templateObject","employersignup_regeneratorRuntime","EmployerSignup","employersignup_Submit","ButtonAppBar","Home_Home","CreateFeedback","setReturned","anonymousCheck","setAnonymousCheck","feedbackSubmit","employeefeedback_regeneratorRuntime","employeefeedback_BootstrapDialog","employeefeedback_BootstrapDialogTitle","FormLabel","RadioGroup","FormControlLabel","control","Radio","Employeesingletask","setEmployeename","employeesingletask_regeneratorRuntime","employeeprogressbar","choose","Array","isArray","Employeetasklist","displayTask","employeedisplaytask_regeneratorRuntime","EmployeeWelcome","employeewelcome_regeneratorRuntime","Salary","salary_regeneratorRuntime","EmployeeBar","App","App_regeneratorRuntime","setUsertype","usertype","employeenavbar","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userReducer","ReactDOM","createRoot","document","getElementById","render","es","App_App"],"mappings":"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","file":"static/js/main.ff1dc283.chunk.js","sourcesContent":["export const config = {\n  apiKey: \"AIzaSyACSUS80qgqEzuQQmo_hMJbEJDwqsIf1ns\",\n  authDomain: \"businessaide-fab48.firebaseapp.com\",\n  projectId: \"businessaide-fab48\",\n  storageBucket: \"businessaide-fab48.appspot.com\",\n  messagingSenderId: \"440207297304\",\n  appId: \"1:440207297304:web:1ee77efcf3f79a1e09ec6d\",\n  measurementId: \"G-V4KJ4B5E32\",\n};\n","import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport {getDatabase ,ref, set} from \"firebase/database\"\n\nimport { config as firebaseConfig } from \"./config\";\n\n// Code edited from https://usehooks.com/useAuth/ and\n// https://firebase.google.com/docs/auth/web/start#add-initialize-sdk\n// Not my original work.\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nconst firebaseAuth = getAuth(app);\n\nconst googleAuthProvider = new GoogleAuthProvider();\n\nconst authContext = createContext();\nconst db = getFirestore(app);\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n  const signin = async(e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return signInWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n      \n    );\n\n  };\n  const registerWithEmailAndPassword = async (fullname, username, password) => {\n   const database = getDatabase(app);\n    try {\n      const auth = getAuth(app);\n      const res = await createUserWithEmailAndPassword(\n        auth,\n        username,\n        password\n      );\n      const user = res.user;\n\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        fullname,\n        authProvider: \"local\",\n        username,\n      });\n      /*set(ref(database, 'employers/' + fullname), {\n       \n      });*/\n      /*db.collection(\"employers\").doc(fullname).set({\n        uid: user.uid,\n        email: username,\n        fullname: fullname,\n        authProvider:\"local\"\n      })*/\n    } catch (err) {\n      //console.error(err);\n      //alert(err.message);\n    }\n    \n      \n  };\n\n  const signup = (e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return createUserWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n    );\n  };\n\n  const signout = () => {\n    return firebaseAuth.signOut().then(() => {\n      setUser(false);\n    });\n  };\n\n  const sendPasswordResetEmail = (email) => {\n    return firebaseAuth.sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebaseAuth.confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithGoogle = async () => {\n    const googleProvider = new GoogleAuthProvider();\n    try {\n      const res = await signInWithPopup(auth, googleProvider);\n      const user = res.user;\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n      const docs = await getDocs(q);\n      if (docs.docs.length === 0) {\n        await addDoc(collection(db, \"users\"), {\n          uid: user.uid,\n          name: user.displayName,\n          authProvider: \"google\",\n          email: user.email,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  const auth = getAuth();\n\n  const signOutWithGoogle = () => {\n    return signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  //const registeruser = createUserWithEmailAndPassword(auth, email, password)\n  //.then((userCredential) => {\n  // Signed in\n  //user = userCredential.user;\n  // ...\n  //})\n  //.catch((error) => {\n  // const errorCode = error.code;\n  //const errorMessage = error.message;\n  // ..\n  //});\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    const unsubscribe = firebaseAuth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  // Return the user object and auth methods\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    signOutWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    registerWithEmailAndPassword,\n  };\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\n\nimport styled from \"styled-components\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport {\n  Link,\n  Route,\n  Routes,\n  BrowserRouter,\n  useNavigate,\n} from \"react-router-dom\";\n\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\nconst theme = createTheme();\nexport function Signin() {\n  const { user } = useAuth();\n  let navigate = useNavigate();\n  const { signin } = useAuth();\n  const [username, setName] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.username] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  const handlesignin = (event) => {};\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              signin(e, username, password);\n              navigate(\"/\");\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\nexport default function SignInUser() {\n  return <Signin></Signin>;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// selectors\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\nimport { useNavigate } from \"react-router-dom\";\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const { user } = useAuth();\n  const { signOutWithGoogle } = useAuth();\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [secretcode, setSecretCode] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [workExp, setWorkExp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNum, setphoneNum] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [loginerror, setError] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n  async function register(event) {\n    event.preventDefault();\n\n    if (firstName == \"\") {\n      return alert(\"Please enter a full name\");\n    } else if (username === \"\") {\n      alert(\"please enter an email\");\n    } else if (password !== retypepassword) {\n      alert(\"passwords do not match\");\n    } else {\n      // Create a new user with Firebase\n      let call = \"https://businessaide-backend.herokuapp.com/SendEmployee/?\";\n      call = call + \"firstName=\" + firstName + \"&\";\n      call = call + \"lastName=\" + lastName + \"&\";\n      call = call + \"secretCode=\" + secretcode + \"&\";\n      call = call + \"dob=\" + dob + \"&\";\n      call = call + \"workExp=\" + workExp + \"&\";\n      call = call + \"location=\" + location + \"&\";\n      call = call + \"title=\" + title + \"&\";\n      call = call + \"phoneNum=\" + phoneNum + \"&\";\n      call = call + \"dailySalary=\" + \"0\" + \"&\";\n      call = call + \"daysAttended=\" + \"0\" + \"&\";\n      call = call + \"overtimeHourlyRate=\" + \"0\" + \"&\";\n      call = call + \"overtimeHours=\" + \"0\" + \"&\";\n      call = call + \"deductions=\" + \"0\" + \"&\";\n      call = call + \"overallSalary=\" + \"0\";\n      await registerWithEmailAndPassword(\n        firstName + \" \" + lastName,\n        username,\n        password\n      )\n        .then((userAuth) => {\n          // Update the newly created user with a display name and a picture\n          updateProfile(userAuth.user, {\n            displayName: firstName + \" \" + lastName,\n          })\n            .then(\n              // Dispatch the user information for persistence in the redux state\n              dispatch(\n                login({\n                  email: userAuth.user.email,\n                  uid: userAuth.user.uid,\n                  displayName: firstName + \" \" + lastName,\n                })\n              )\n            )\n            .catch((error) => {\n              console.log(error);\n              setError(error);\n            });\n        })\n        .catch((err) => {\n          //alert(err);\n        })\n        .then(signOutWithGoogle);\n      navigate(\"/\");\n      await (await fetch(call)).json();\n    }\n  }\n\n  /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              register(e);\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={firstName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"firstname\"\n              label=\"Firstname\"\n              id=\"firstname\"\n              autoComplete=\"firstname\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <TextField\n              value={lastName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"lastname\"\n              label=\"Lastname\"\n              id=\"lastname\"\n              autoComplete=\"lastname\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={secretcode}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"secretcode\"\n              label=\"Secretcode\"\n              id=\"secretcode\"\n              onChange={(e) => setSecretCode(e.target.value)}\n            />\n            <TextField\n              InputLabelProps={{ shrink: true }}\n              value={dob}\n              type=\"date\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"dob\"\n              label=\"Date of Birth\"\n              id=\"dob\"\n              onChange={(e) => setDob(e.target.value)}\n            />\n            <TextField\n              value={workExp}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"workExp\"\n              label=\"Work Experience\"\n              id=\"workExp\"\n              onChange={(e) => setWorkExp(e.target.value)}\n            />\n            <TextField\n              value={location}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"location\"\n              label=\"Location\"\n              id=\"location\"\n              onChange={(e) => setLocation(e.target.value)}\n            />\n            <TextField\n              value={title}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"title\"\n              label=\"Title\"\n              id=\"title\"\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <TextField\n              value={phoneNum}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"phoneNum\"\n              label=\"Phone Number\"\n              id=\"phoneNum\"\n              onChange={(e) => setphoneNum(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              value={retypepassword}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"retypepassword\"\n              label=\"Re-enter Password\"\n              type=\"password\"\n              id=\"retypepassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setRetypepassword(e.target.value)}\n            />\n            <Typography component=\"h3\" variant=\"h5\">\n              {loginerror}\n            </Typography>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default function CreateForm() {\n  return <Submit></Submit>;\n}\n","import { config as firebaseConfig } from \"./config\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n","import { db } from \"./firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst employeeCollectionRef = collection(db, \"employees\");\nclass EmployeeDataService {\n  addEmployee = (newEmployee) => {\n    return addDoc(employeeCollectionRef, newEmployee);\n  };\n\n  updatedEmployee = (id, updatedEmployee) => {\n    const bookDoc = doc(db, \"employees\", id);\n    return updateDoc(bookDoc, updatedEmployee);\n  };\n\n  deleteEmployee = (id) => {\n    const employeeDoc = doc(db, \"employees\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLEmployee = () => {\n    return getDocs(employeeCollectionRef);\n  };\n\n  getEmployee = (id) => {\n    const EmployeeDoc = doc(db, \"employees\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new EmployeeDataService();\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeDataService from \"./employeeserver\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { IconButton } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function Individual() {\n  const [employees, setEmployees] = useState([]);\n  const { id } = useParams();\n  const [open, setOpen] = React.useState(false);\n  const [rate, setRate] = useState(0);\n  const [hourly, setHourly] = useState(0);\n  const [days, setDays] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n  const [deductions, setDeductions] = useState(0);\n  const [overall, setOverall] = useState(0);\n  let feedback;\n\n  useEffect(() => {\n    getEmployees(id);\n  }, [id]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const sendPayroll = async (\n    dailySalary,\n    daysAttended,\n    overtimeHourlyRate,\n    overtimeHours,\n    deductions,\n    overallSalary,\n    employeeName,\n    employerName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendPayroll/?\";\n    call = call + \"dailySalary=\" + dailySalary + \"&\";\n    call = call + \"daysAttended=\" + daysAttended + \"&\";\n    call = call + \"overtimeHourlyRate=\" + overtimeHourlyRate + \"&\";\n    call = call + \"overtimeHours=\" + overtimeHours + \"&\";\n    call = call + \"deductions=\" + deductions + \"&\";\n    call = call + \"overallSalary=\" + overallSalary + \"&\";\n    call = call + \"employeeName=\" + employeeName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    feedback = result;\n    alert(feedback.reason);\n  };\n\n  const getEmployees = async (id) => {\n    const data = await EmployeeDataService.getEmployee(id);\n    console.log(\n      data._document.data.value.mapValue.fields.firstName.stringValue\n    );\n    setEmployees(data);\n  };\n\n  console.log(employees);\n\n  if (employees.length === 0) {\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  } else {\n    const employeename =\n      employees._document.data.value.mapValue.fields.firstName.stringValue +\n      \" \" +\n      employees._document.data.value.mapValue.fields.lastName.stringValue;\n    console.log(employeename + \" hello\" + employeename);\n    return (\n      <div className=\"list\" rowspacing={3}>\n        <div\n          style={{\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\n          }}\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n            alt=\"\"\n            height={200}\n            width={200}\n          />\n          <h1>\n            {\n              employees._document.data.value.mapValue.fields.firstName\n                .stringValue\n            }{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.lastName\n                .stringValue\n            }\n          </h1>\n        </div>\n        <div>\n          <h3>\n            <AddIcCallIcon></AddIcCallIcon> Phone number:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.phoneNum\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <AddLocationIcon></AddLocationIcon> Location:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.location\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <CakeIcon></CakeIcon> Date of Birth:{\" \"}\n            {employees._document.data.value.mapValue.fields.dob.stringValue}\n          </h3>\n          <h3>\n            <WorkIcon></WorkIcon> Work Experience:{\" \"}\n            {employees._document.data.value.mapValue.fields.workExp.stringValue}\n          </h3>\n          <h3>\n            <PaidIcon></PaidIcon> Salary for the Month:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overallSalary\n                .stringValue\n            }\n          </h3>\n          <Button variant=\"outlined\" onClick={handleClickOpen}>\n            add new payroll\n          </Button>\n          <BootstrapDialog\n            onClose={handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={open}\n          >\n            <BootstrapDialogTitle\n              id=\"customized-dialog-title\"\n              onClose={handleClose}\n            >\n              Add a Payroll\n            </BootstrapDialogTitle>\n            <DialogContent dividers>\n              <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                <TextField\n                  value={rate}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"rate\"\n                  label=\"Daily Salary\"\n                  name=\"rate\"\n                  autoComplete=\"rate\"\n                  autoFocus\n                  onChange={(e) => {\n                    setRate(Number(e.target.value));\n                    setOverall(e.target.value * days + overtime - deductions);\n                  }}\n                />\n\n                <TextField\n                  value={days}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"days\"\n                  label=\"Number of Days Attended\"\n                  name=\"days\"\n                  autoComplete=\"days\"\n                  autoFocus\n                  onChange={(e) => {\n                    setDays(Number(e.target.value));\n                    setOverall(\n                      rate * e.target.value + overtime * hourly - deductions\n                    );\n                  }}\n                />\n                <TextField\n                  value={hourly}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"hourly\"\n                  label=\"Hourly Salary for Overtime\"\n                  name=\"hourly\"\n                  autoComplete=\"hourly\"\n                  autoFocus\n                  onChange={(e) => {\n                    setHourly(Number(e.target.value));\n                    setOverall(\n                      rate * days + overtime * e.target.value - deductions\n                    );\n                  }}\n                />\n                <TextField\n                  value={overtime}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"overtime\"\n                  label=\"Overtime Hours\"\n                  name=\"overtime\"\n                  autoComplete=\"overtime\"\n                  autoFocus\n                  onChange={(e) => {\n                    setOvertime(Number(e.target.value));\n                    setOverall(\n                      rate * days + Number(e.target.value) * hourly - deductions\n                    );\n                  }}\n                />\n                <TextField\n                  value={deductions}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"deductions\"\n                  label=\"Deductions\"\n                  id=\"deductions\"\n                  onChange={(e) => {\n                    setDeductions(Number(e.target.value));\n                    setOverall(\n                      rate * days + overtime * hourly - e.target.value\n                    );\n                  }}\n                />\n                <h3>The overall monthly salary is: {overall}</h3>\n              </Box>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  console.log(employeename);\n                  sendPayroll(\n                    rate,\n                    days,\n                    hourly,\n                    overtime,\n                    deductions,\n                    overall,\n                    employeename,\n                    \"adam jerry\"\n                  );\n                  handleClose();\n                }}\n              >\n                SUBMIT\n              </Button>\n            </DialogActions>\n          </BootstrapDialog>\n        </div>\n      </div>\n    );\n  }\n\n  //console.log(employees);\n}\n\n/*const mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const Employees = state.firestore.data.Employees;\n  const employee = Employees[id];\n  return { employee: employee };\n};*/\n\n/*export default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"Employees\" }])\n)(Individual);*/\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Individual from \"./Individual\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Cards(props) {\n  return (\n    <div>\n      <Item>\n        <Card sx={{ maxWidth: 345 }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n              alt=\"\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {props.fullname}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Item>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport Cards from \"./cards\";\nimport { useAuth } from \"./useAuth\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"./employeeserver\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\nconst EmployeesList = ({ getEmployeeId }) => {\n  const { user } = useAuth();\n  const [employees, setEmployees] = useState([]);\n  const [name, setName] = useState([]);\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const getEmployees = async () => {\n    if (user) {\n      let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n      console.log(user.email);\n      call1 = call1 + \"email=\" + user.email;\n      let result = await (await fetch(call1)).json();\n      console.log(result.name);\n      let call =\n        \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n      setName(result.name);\n      call = call + \"employerName=\" + result.name;\n      let returned = await (await fetch(call)).json();\n      setEmployees(returned.body.map((doc) => ({ ...doc, id: doc })));\n    }\n  };\n  /* \n  const deleteHandler = async (id) => {\n    await deleteEmployee(id);\n    getEmployees();\n  }; */\n\n  return (\n    /*   {namecards.map(({ id, data: { Firstname, Lastname, TeamLeader } }) => (\n        <Cards\n          key={id}\n          Firstname={Firstname}\n          Lastname={Lastname}\n          TeamLeader={TeamLeader}\n        />\n      ))} */\n    <div>\n      <Grid\n        container\n        rowSpacing={1}\n        columns={12}\n        columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n      >\n        {employees.map((doc, index) => {\n          console.log(doc);\n          return (\n            <Grid item xs={3} key={doc.name}>\n              <Link\n                to={\"/Individual/\" + doc.name}\n                style={{ textDecoration: \"none\", color: \"black\" }}\n                key={doc.name}\n              >\n                <Cards\n                  key={doc.name}\n                  id={doc.name}\n                  index={index + 1}\n                  fullname={doc.name}\n                  employer={name}\n                />\n              </Link>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default EmployeesList;\n","import React from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport { createTheme } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { config as firebaseConfig } from \"./config\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nexport default function Welcome() {\n  const theme = createTheme({\n    typography: {\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n    },\n  });\n\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n  const auth = getAuth();\n  const user = auth.currentUser;\n  //const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n  // const docs = await getDocs(q);\n  const [username, setUsername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n  };\n  useEffect(() => {\n    FindUserType(user.email);\n  }, []);\n  //console.log(user.uid);\n  return username ? (\n    <ThemeProvider theme={theme}>\n      <div>\n        <h1>Welcome {username}!</h1>\n        <List>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography\n                sx={{\n                  fontFamily: '\"Segoe UI\"',\n                }}\n                variant=\"h6\"\n              >\n                To view or add payroll, please go to the \"payroll\" page and\n                click on each salary. You will be able to create new payroll\n                there\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To create a task, please go to the \"add task\" page and fill in\n                all the fields\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To view each individual task, please to go to the \"view task\"\n                page and click on each of the task\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To create a subtask, please set the goal as a number\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To increase the task progress, please enter a number and click\n                \"increase progress by\"\n              </Typography>\n            </Card>\n          </ListItem>\n        </List>\n      </div>\n    </ThemeProvider>\n  ) : (\n    <div>loading...</div>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\n\nconst handleSubmit = async (taskname, description, employer, people) => {\n  if (taskname !== \"\") {\n    let call = \"https://businessaide-backend.herokuapp.com/createMainTask/?\";\n    call = call + \"taskname=\" + taskname + \"&\"; // do this for each parameter you want to send\n    call = call + \"description=\" + description + \"&\";\n    call = call + \"employer=\" + employer + \"&\";\n    call = call + \"people=\" + people;\n    await (await fetch(call)).json();\n  } else {\n    alert(\"please enter a taskname\");\n  }\n};\nexport default handleSubmit;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useEffect } from \"react\";\nimport EmployeeDataService from \"../employeeserver\";\nimport { useAuth } from \"../useAuth\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nimport Select from \"@mui/material/Select\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateTask() {\n  const [employees, setEmployees] = useState([]);\n  const theme = useTheme();\n  const [employername, setEmployername] = useState();\n  const { user } = useAuth();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployername(result.name);\n  };\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n    getEmployees();\n  }, []);\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  const names = employees.map(function (employee) {\n    return employee.name;\n  });\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n  const getEmployees = async () => {\n    let calltask =\n      \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n    calltask = calltask + \"employerName=\" + employername;\n    let callresult = await (await fetch(calltask)).json();\n    console.log(callresult.body);\n    setEmployees(callresult.body);\n  };\n  const [personName, setPersonName] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [people, setPeople] = useState();\n  const [description, setDescription] = useState();\n  const [employer, setEmployer] = useState([]);\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\n            Add New Task\n          </Typography>\n          <Typography variant=\"body2\">\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n              New Task\n            </Button>\n            <BootstrapDialog\n              onClose={handleClose}\n              aria-labelledby=\"customized-dialog-title\"\n              open={open}\n            >\n              <BootstrapDialogTitle\n                id=\"customized-dialog-title\"\n                onClose={handleClose}\n              >\n                Create a New Task\n              </BootstrapDialogTitle>\n              <DialogContent dividers>\n                <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                  <TextField\n                    value={task}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"task\"\n                    label=\"Task Name\"\n                    name=\"task\"\n                    autoComplete=\"task\"\n                    autoFocus\n                    onChange={(e) => setTask(e.target.value)}\n                  />\n                  <TextField\n                    value={description}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"description\"\n                    label=\"Task Description\"\n                    name=\"description\"\n                    autoComplete=\"description\"\n                    autoFocus\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                  {console.log(employees)}\n                  <FormControl\n                    required\n                    fullwidth\n                    sx={{\n                      ml: 0,\n                      mt: 2,\n                      width: 568,\n                    }}\n                  >\n                    <InputLabel id=\"demo-multiple-name-label\">\n                      Employees Assigned\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-multiple-name-label\"\n                      id=\"demo-multiple-name\"\n                      multiple\n                      value={personName}\n                      onChange={handleChange}\n                      input={<OutlinedInput label=\"Name\" />}\n                      MenuProps={MenuProps}\n                    >\n                      {names.map((name) => (\n                        <MenuItem\n                          key={name}\n                          value={name}\n                          style={getStyles(name, personName, theme)}\n                        >\n                          {name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  {console.log(personName)}\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  autoFocus\n                  onClick={() => {\n                    console.log(task);\n                    task === undefined ||\n                    description === undefined ||\n                    employername === undefined ||\n                    personName === undefined\n                      ? alert(\"please complete all required fields\")\n                      : handleSubmit(\n                          task,\n                          description,\n                          employername,\n                          personName\n                        );\n                    handleClose();\n                  }}\n                >\n                  Create Task\n                </Button>\n              </DialogActions>\n            </BootstrapDialog>\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\n//import subtaskSubmit from \"./subtasksubmit\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateSubtask({\n  setIsupdated,\n  isUpdated,\n  maintask,\n  people,\n}) {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  const [personName, setPersonName] = React.useState([]);\n  const names = people;\n  console.log(names);\n  const theme = useTheme();\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n    console.log(personName);\n  };\n  let localerror = -2;\n\n  const [feedback, setFeedback] = useState(-2);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [description, setDescription] = useState();\n  const [goal, setGoal] = useState();\n  const [employername, setEmployername] = useState();\n  const { user } = useAuth();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployername(result.name);\n  };\n\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n  const subtaskSubmit = async (\n    subTaskName,\n    subTaskDesc,\n    goal,\n    mainTaskName,\n    employerName,\n    workerArray\n  ) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    console.log(workerArray);\n    let call = \"https://businessaide-backend.herokuapp.com/createSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\"; // do this for each parameter you want to send\n    call = call + \"subTaskDesc=\" + subTaskDesc + \"&\";\n    call = call + \"goal=\" + goal + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"workerArray=\" + workerArray;\n    let result = await (await fetch(call)).json();\n    setFeedback(result);\n    localerror = result;\n  };\n  //useEffect(()=>{\n  //console.log(props.people)\n  //setNames(props.people);\n  // },[])\n  return (\n    <div>\n      <span style={{ color: \"white\" }}> hahahahahahaa </span>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 633,\n        }}\n      >\n        New Subtask\n      </Button>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Create a New Subtask\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={task}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"task\"\n              label=\"Task Name\"\n              name=\"task\"\n              autoComplete=\"task\"\n              autoFocus\n              onChange={(e) => setTask(e.target.value)}\n            />\n            <TextField\n              value={description}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"description\"\n              label=\"Task Description\"\n              name=\"description\"\n              autoComplete=\"description\"\n              autoFocus\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <FormControl required fullwidth sx={{ ml: 0, mt: 2, width: 568 }}>\n              <InputLabel id=\"demo-multiple-name-label\">\n                Employees Assigned\n              </InputLabel>\n              <Select\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<OutlinedInput label=\"Name\" />}\n                MenuProps={MenuProps}\n              >\n                {names.length === 0\n                  ? \"loading\"\n                  : names.map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        style={getStyles(name, personName, theme)}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n              </Select>\n            </FormControl>\n            {console.log(personName)}\n            <TextField\n              InputProps={{\n                inputProps: { min: 1 },\n              }}\n              value={goal}\n              type=\"number\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"goal\"\n              label=\"Task Goal\"\n              id=\"goal\"\n              onChange={(e) =>\n                e.target.value > 0\n                  ? setGoal(e.target.value)\n                  : alert(\"please enter a positive integer\")\n              }\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              task === undefined ||\n              description === undefined ||\n              goal === undefined ||\n              employername === undefined ||\n              personName === undefined\n                ? alert(\"please complete all required fields\")\n                : subtaskSubmit(\n                    task,\n                    description,\n                    goal,\n                    maintask,\n                    employername,\n                    personName\n                  );\n\n              console.log(personName);\n              console.log(feedback);\n              feedback === -1\n                ? alert(\"the employee is not found\")\n                : console.log(\"subtask added\");\n              handleClose();\n            }}\n          >\n            Create Task\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import { db } from \"../firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst taskCollectionRef = collection(db, \"employers/adam jerry/tasks\");\nclass TaskDataService {\n  addTask = (newTask) => {\n    return addDoc(taskCollectionRef, newTask);\n  };\n\n  deleteTask = (id) => {\n    const employeeDoc = doc(db, \"employers\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLTask = () => {\n    return getDocs(taskCollectionRef);\n  };\n\n  printRef = () => {\n    return taskCollectionRef;\n  };\n\n  getTask = (id) => {\n    const EmployeeDoc = doc(db, \"employers\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new TaskDataService();\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./progressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport CreateTask from \"./createtask\";\nimport CreateSubtask from \"./createsubtask\";\nimport TaskDataService from \"./taskserver\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function OutlinedCard() {\n  window.onload = function () {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  var username;\n  var task = [];\n  const { user } = useAuth();\n  const [employerName, setEmployername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result.name;\n    setEmployername(result.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/displayTask/?\";\n    call2 = call2 + \"employerName=\" + username;\n    let result2 = await (await fetch(call2)).json();\n    for (let i = 0; i < result2.body.length; i++) {\n      task[i] = result2.body[i];\n      setTasks((tasks) => [...tasks, result2.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + username;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n\n  const displayTask = async (employerName) => {\n    let call = \"https://businessaide-backend.herokuapp.com/displayTask/?\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    for (let i = 0; i < result.body.length; i++) {\n      task[i] = result.body[i];\n      setTasks((tasks) => [...tasks, result.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask =\n        \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + employerName;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n  /* const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n */\n\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n\n  //useEffect(() => {\n  //console.log(task.length);\n  //for (let i = 0; i < task.length; i++) {\n  // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n  //}\n  //}, []);\n\n  //useEffect(()=>{\n  // console.log(tasks);\n\n  //}, [tasks]);\n\n  useEffect(() => {\n    console.log(tasks);\n    console.log(progress);\n  }, [tasks]);\n\n  if (tasks.length === null) {\n    return <div>loading...</div>;\n  }\n  return tasks === [] ? (\n    <div>loading...</div>\n  ) : (\n    <div>\n      <h1>Task Page</h1>\n\n      <Grid\n        container\n        rowSpacing={20}\n        columns={12}\n        columnSpacing={{\n          xs: 2,\n          sm: 2,\n          md: 3,\n        }}\n      >\n        {tasks === [] ? (\n          <h2>loading...</h2>\n        ) : (\n          tasks.map((doc, index) => {\n            return (\n              <Grid item xs={3}>\n                <Card sx={{ maxWidth: 345 }}>\n                  <CardContent>\n                    <Typography\n                      sx={{\n                        fontSize: 20,\n                      }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      Current Task\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {doc ? doc : \"loading\"}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {progress[index] ? (\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={Math.round((progress[index] / 1) * 100)}\n                        />\n                      ) : (\n                        <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />\n                      )}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link\n                      to=\"/task/singletask\"\n                      state={doc}\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"blue\",\n                      }}\n                    >\n                      View Task\n                    </Link>\n                    <span\n                      style={{\n                        color: \"white\",\n                      }}\n                    >\n                      hahahaha\n                    </span>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItem from \"@mui/material/ListItem\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Slide from \"@mui/material/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  console.log(props.feedback);\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 555,\n        }}\n      >\n        View Feedback from Employees\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar sx={{ position: \"relative\" }}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n              Feedback\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <List>\n          {props.feedback.map((doc) => {\n            return (\n              <div>\n                <ListItem button>\n                  <ListItemText\n                    primary={doc.feedback}\n                    secondary={doc.employee}\n                  />\n                </ListItem>\n                <Divider />\n              </div>\n            );\n          })}\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./progressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Divider, Grid, List, ListItem, TextField } from \"@mui/material\";\nimport CreateSubtask from \"./createsubtask\";\nimport FullScreenDialog from \"./viewfeedback\";\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function BasicCard(props) {\n  const [feedback, setFeedback] = useState([]);\n  const [subtasks, setSubTasks] = useState([]);\n  let subtasktemp = [];\n  const [employername, setEmployername] = useState();\n  const [description, setDescription] = useState([]);\n  const [mainworkers, setMainWorkers] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  const [isUpdated, setIsupdated] = useState(false);\n  var tempprogress = 0;\n  var progresstemp = [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    setEmployername(result1.name);\n    console.log(username);\n    let call = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + username;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainProgress(result.body);\n    console.log(mainprogress);\n  };\n\n  const calculateprogress = (subtasks, status, progress, goal) => {\n    var subTaskProgress = 0;\n    var subTaskCounter = 0;\n    tempprogress = mainprogress;\n    for (let i = 0; i < subtasks.length; i++) {\n      if (status[i] == \"finished\") {\n        subTaskProgress += 1;\n        subTaskCounter += 1;\n      } else {\n        subTaskProgress += progress[i] / goal[i];\n        subTaskCounter += 1;\n      }\n    }\n    tempprogress = subTaskProgress / subTaskCounter;\n    if (tempprogress === 0) {\n      tempprogress = 0;\n    }\n    setMainProgress(tempprogress);\n  };\n\n  var username;\n  const viewMainTask = async (mainTaskName, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    setEmployername(result1.name);\n    viewMainTaskFeedback(mainTaskName, result1.name);\n    let call = \"https://businessaide-backend.herokuapp.com/getMainTaskData/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + username;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainDescription(result.body.description);\n    setMainStatus(result.body.status);\n    setSubTasks(result.body.subtasks);\n    setMainWorkers(result.body.workers);\n    subtasktemp = result.body.subtasks;\n    console.log(subtasktemp);\n    setDescription([]);\n    setWorkers([]);\n    setGoal([]);\n    setStatus([]);\n    setProgress([]);\n    for (let i = 0; i < subtasktemp.length; i++) {\n      let call = \"https://businessaide-backend.herokuapp.com/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subtasktemp[i] + \"&\";\n      call = call + \"mainTaskName=\" + maintask + \"&\";\n      call = call + \"employerName=\" + result1.name;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [\n        ...description,\n        result.body.description,\n      ]);\n      setWorkers((workers) => [...workers, result.body.workers]);\n      setGoal((goal) => [...goal, result.body.goal]);\n      setProgress((progress) => [...progress, result.body.progress]);\n      setStatus((status) => [...status, result.body.status]);\n      console.log(subtasks);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      viewMainTask(maintask, user.email);\n      mainTaskProgress(maintask, user.email);\n    }\n  }, [isUpdated]);\n\n  useEffect(() => {\n    console.log(mainprogress);\n    console.log(mainworkers);\n  }, [mainprogress, mainworkers]);\n\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n\n  /*useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n      \n    };\n   // for (let i = 0; i < subtasks.length; i++) {\n     // viewSubTask(subtasks[i],maintask,\"adam jerry\")\n      \n    //}\n    //console.log(progress);\n    \n  }, [maintask, subtasks]);*/\n\n  useEffect(() => {\n    //progresstemp = progress;\n    console.log(progress);\n  }, [progress]);\n\n  const viewMainTaskFeedback = async (mainTaskName, employerName) => {\n    let call =\n      \"https://businessaide-backend.herokuapp.com/viewMainTaskFeedback/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setFeedback(result.body);\n\n    //setProgress(progress[index]+1);\n  };\n  const subTaskProgress = async (\n    subTaskName,\n    value,\n    mainTaskName,\n    employerName,\n    index\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n\n    //setProgress(progress[index]+1);\n  };\n\n  const completeSubTask = async (\n    subTaskName,\n    mainTaskName,\n    employerName,\n    email\n  ) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n    viewMainTask(mainTaskName, email);\n    mainTaskProgress(mainTaskName, email);\n  };\n\n  const completeMainTask = async (mainTaskName, employerName, email) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    console.log(email);\n    let call = \"https://businessaide-backend.herokuapp.com/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    viewMainTask(mainTaskName, email);\n    mainTaskProgress(mainTaskName, email);\n  };\n\n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Workers Allocated\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainworkers.length === 0\n            ? \"loading\"\n            : mainworkers.map((worker) => worker + \"  \")}\n        </Typography>\n        <ProgressBar\n          bgcolor={\"#1976d2\"}\n          completed={\n            mainprogress > 1 ? 100 : Math.round((mainprogress / 1) * 100)\n          }\n        />\n        <Button\n          onClick={() => {\n            completeMainTask(maintask, employername, user.email);\n          }}\n        >\n          Mark as Finished\n        </Button>\n        {mainworkers.length === 0 ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <List>\n              <ListItem>\n                <CreateSubtask\n                  setIsupdated={setIsupdated}\n                  isUpdated={isUpdated}\n                  maintask={maintask}\n                  people={mainworkers}\n                />\n              </ListItem>\n              <ListItem>\n                <FullScreenDialog feedback={feedback} />\n              </ListItem>\n            </List>\n          </div>\n        )}\n        <div style={{ color: \"white\" }}>hahahah</div>\n        <Grid>\n          {subtasks.map((task, index) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>{task}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    <div>Task Description: {description[index]}</div>\n                    <div>workers allocated: {workers[index]}</div>\n                    <div>goal: {goal[index]}</div>\n\n                    <div>\n                      {\"progress\"}\n                      <ProgressBar\n                        bgcolor={\"#6a1b9a\"}\n                        completed={\n                          (progress[index] / goal[index]) * 100 >= 100\n                            ? 100\n                            : (progress[index] / goal[index]) * 100\n                        }\n                      ></ProgressBar>\n                    </div>\n                    <div>\n                      <TextField\n                        value={Number(newValue)}\n                        type=\"text\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Increase New Progress by\"\n                        autoFocus\n                        onChange={(e) => {\n                          setnewValue(e.target.value);\n                        }}\n                      />\n\n                      <Button\n                        onClick={() => {\n                          setProgress((existingItems) => {\n                            return [\n                              ...existingItems.slice(0, index),\n                              existingItems[index] + Number(newValue),\n                              ...existingItems.slice(index + 1),\n                            ];\n                          });\n                          console.log(username);\n                          subTaskProgress(\n                            task,\n                            newValue,\n                            maintask,\n                            employername,\n                            index\n                          );\n                          progresstemp = progress;\n                          progresstemp[index] += Number(newValue);\n                          {\n                            if (progresstemp[index] >= goal[index]) {\n                              setStatus((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  \"finished\",\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n                            }\n                          }\n                          calculateprogress(\n                            subtasks,\n                            status,\n                            progresstemp,\n                            goal\n                          );\n                          setMainProgress(tempprogress);\n                          console.log(tempprogress);\n\n                          // mainTaskProgress(maintask, \"adam jerry\")\n                        }}\n                      >\n                        Increase Progress\n                      </Button>\n                    </div>\n                    <div>status: {status[index]}</div>\n                  </Typography>\n                  <Button\n                    onClick={() => {\n                      completeSubTask(task, maintask, employername, user.email);\n                      setStatus((existingItems) => {\n                        return [\n                          ...existingItems.slice(0, index),\n                          \"finished\",\n                          ...existingItems.slice(index + 1),\n                        ];\n                      });\n                    }}\n                  >\n                    Mark as Finished\n                  </Button>\n                </AccordionDetails>\n              </Accordion>\n            );\n          })}\n        </Grid>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport DraftsIcon from \"@mui/icons-material/Drafts\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport StarBorder from \"@mui/icons-material/StarBorder\";\nimport { useEffect } from \"react\";\nimport { db } from \"../firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"../employeeserver\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { IconButton } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\nimport { TextField } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  arrayRemove,\n} from \"firebase/firestore\";\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Showpayroll = (props) => {\n  let [employeenames, setEmployeenames] = useState([]);\n  const [rate, setRate] = useState(0);\n  const [hourly, setHourly] = useState(0);\n  const [days, setDays] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n  const [deductions, setDeductions] = useState(0);\n  const [overall, setOverall] = useState(0);\n\n  let feedback;\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  let totalsalary = 0;\n  const [total, setTotal] = useState(0);\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    getEmployees(props.name);\n  }, []);\n  useEffect(() => {\n    console.log(employees);\n  }, [employees]);\n  const sendPayroll = async (\n    dailySalary,\n    daysAttended,\n    overtimeHourlyRate,\n    overtimeHours,\n    deductions,\n    overallSalary,\n    employeeName,\n    employerName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendPayroll/?\";\n    call = call + \"dailySalary=\" + dailySalary + \"&\";\n    call = call + \"daysAttended=\" + daysAttended + \"&\";\n    call = call + \"overtimeHourlyRate=\" + overtimeHourlyRate + \"&\";\n    call = call + \"overtimeHours=\" + overtimeHours + \"&\";\n    call = call + \"deductions=\" + deductions + \"&\";\n    call = call + \"overallSalary=\" + overallSalary + \"&\";\n    call = call + \"employeeName=\" + employeeName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    feedback = result;\n    alert(feedback.reason);\n  };\n  const getEmployees = async (employerName) => {\n    let call =\n      \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    let result = await (await fetch(call)).json();\n    console.log(result.body);\n    setEmployees(\n      result.body.map((doc) => ({\n        ...doc,\n        id: doc.name,\n      }))\n    );\n    setEmployeenames(\n      result.body.map((doc) => ({\n        ...doc.id,\n        id: doc.name,\n      }))\n    );\n  };\n\n  return (\n    <List\n      sx={{\n        width: \"100%\",\n        maxWidth: 1600,\n        bgcolor: \"background.paper\",\n      }}\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          Payroll for the Month\n        </ListSubheader>\n      }\n    >\n      <ListItemButton>\n        <ListItemIcon>\n          <SendIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            employees.length === 0\n              ? \"\"\n              : \"Total salary for the month: \" +\n                employees\n                  .map((element) => Number(element.overallSalary))\n                  .reduce((a, b) => a + b, 0)\n          }\n        />\n      </ListItemButton>\n      {employees.length === 0\n        ? \"\"\n        : employees.map((doc) => {\n            console.log(doc);\n            return (\n              <Link\n                to={\"/Individual/\" + doc.name}\n                style={{\n                  textDecoration: \"none\",\n                  color: \"black\",\n                }}\n                key={doc}\n              >\n                <ListItemButton key={doc.name}>\n                  <ListItemIcon>\n                    <SendIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={doc.name}\n                    secondary={\"salary for the month: \" + doc.overallSalary}\n                  />\n                </ListItemButton>\n              </Link>\n            );\n          })}\n    </List>\n  );\n};\n\nexport default Showpayroll;\n","import { Component } from \"react\";\nimport { useAuth } from \"./useAuth\";\nimport { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/employeesignup.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport EmployeesList from \"./viewemployees\";\nimport Welcome from \"./Welcome\";\nimport { useState, useEffect } from \"react\";\nimport Individual from \"./Individual\";\nimport EmployeeDataService from \"./employeeserver\";\nimport OutlinedCard from \"./task/displaytask\";\nimport BasicCard from \"./task/singletask\";\nimport CreateTask from \"./task/createtask\";\nimport Showpayroll from \"./payroll/payroll\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nfunction Home(props) {\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const { signOutWithGoogle } = useAuth();\n  const auth = getAuth();\n  const [employeeId, setEmployeeId] = useState(\"\");\n\n  const getEmployeeIdHandler = (id) => {\n    console.log(\"The ID of document to be edited: \", id);\n    setEmployeeId(id);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                BusinessAide\n              </Link>\n            </Typography>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/payroll/payroll\"\n              >\n                Payroll\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/viewemployees\"\n              >\n                Employees\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/displaytask\"\n              >\n                View Tasks\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/createtask\"\n              >\n                Add Tasks\n              </Link>\n            </Button>\n            <Button\n              onClick={signOutWithGoogle}\n              variant=\"outlined\"\n              sx={{\n                color: \"yellow\",\n                backgroundColor: \"orange\",\n                borderColor: \"green\",\n              }}\n            >\n              sign out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Routes>\n        <Route path=\"/\" element={<Welcome />} />\n        <Route\n          path=\"/viewemployees/*\"\n          element={<EmployeesList getEmployeeId={getEmployeeIdHandler} />}\n        />\n        <Route path=\"/Individual/:id\" element={<Individual />} />\n        <Route path=\"/task/displaytask\" element={<OutlinedCard />} />\n        <Route\n          path=\"/task/singletask\"\n          element={<BasicCard employName={props.name} />}\n        />\n        <Route path=\"/task/createtask\" element={<CreateTask />} />\n        <Route\n          path=\"/payroll/payroll\"\n          element={<Showpayroll name={props.name} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default Home;\n\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nexport default function Home() {\n  return (\n    <div>\n      <h1>Welcome to BusinessAide</h1>\n      <ListItem>\n        <Card>\n          <ListItemIcon>\n            <SendIcon />\n          </ListItemIcon>\n          <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n            Please go to Login page to sign in after registration\n          </Typography>\n        </Card>\n      </ListItem>\n      <List>\n        <ListItem>\n          <Card>\n            <ListItemIcon>\n              <SendIcon />\n            </ListItemIcon>\n            <Typography\n              sx={{\n                fontFamily: '\"Segoe UI\"',\n              }}\n              variant=\"h6\"\n            >\n              To register as an employer, please create your secret code and\n              advise your employees to key in the same secret code when they\n              sign up\n            </Typography>\n          </Card>\n        </ListItem>\n        <ListItem>\n          <Card>\n            <ListItemIcon>\n              <SendIcon />\n            </ListItemIcon>\n            <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n              To register as an employee, please key in the secret code your\n              employer gives you\n            </Typography>\n          </Card>\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\nimport { useNavigate } from \"react-router-dom\";\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const { user } = useAuth();\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [secretcode, setSecretCode] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [workExp, setWorkExp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNum, setphoneNum] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [loginerror, setError] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n  const { signOutWithGoogle } = useAuth();\n  async function register(event) {\n    event.preventDefault();\n\n    if (firstName == \"\") {\n      return alert(\"Please enter a full name\");\n    } else if (username === \"\") {\n      alert(\"please enter an email\");\n    } else if (password !== retypepassword) {\n      alert(\"passwords do not match\");\n    } else {\n      // Create a new user with Firebase\n      let call = \"https://businessaide-backend.herokuapp.com/SendEmployer/?\";\n      call = call + \"firstName=\" + firstName + \"&\";\n      call = call + \"lastName=\" + lastName + \"&\";\n      call = call + \"secretCode=\" + secretcode;\n      await registerWithEmailAndPassword(\n        firstName + \" \" + lastName,\n        username,\n        password\n      )\n        .then((userAuth) => {\n          // Update the newly created user with a display name and a picture\n          updateProfile(userAuth.user, {\n            displayName: firstName + \" \" + lastName,\n          })\n            .then(\n              // Dispatch the user information for persistence in the redux state\n              dispatch(\n                login({\n                  email: userAuth.user.email,\n                  uid: userAuth.user.uid,\n                  displayName: firstName + \" \" + lastName,\n                })\n              )\n            )\n            .catch((error) => {\n              console.log(error);\n              setError(error);\n            });\n        })\n        .catch((err) => {\n          // alert(err);\n        })\n        .then(signOutWithGoogle);\n      navigate(\"/\");\n      await (await fetch(call)).json();\n    }\n  }\n\n  /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              register(e);\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={firstName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"firstname\"\n              label=\"Firstname\"\n              id=\"firstname\"\n              autoComplete=\"firstname\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <TextField\n              value={lastName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"lastname\"\n              label=\"Lastname\"\n              id=\"lastname\"\n              autoComplete=\"lastname\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={secretcode}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"secretcode\"\n              label=\"Secretcode\"\n              id=\"secretcode\"\n              onChange={(e) => setSecretCode(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              value={retypepassword}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"retypepassword\"\n              label=\"Re-enter Password\"\n              type=\"password\"\n              id=\"retypepassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setRetypepassword(e.target.value)}\n            />\n            <Typography component=\"h3\" variant=\"h5\">\n              {loginerror}\n            </Typography>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default function EmployerSignup() {\n  return <Submit></Submit>;\n}\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/employeesignup.js\";\nimport Home from \"./Home.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport \"./NavBar.css\";\nimport EmployerSignup from \"./components/signup/employersignup.js\";\n\nexport default function ButtonAppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n              BusinessAide\n            </Link>\n          </Typography>\n          <Button color=\"inherit\"></Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/employersignup\"\n            >\n              Employer Register\n            </Link>\n          </Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/employeesignup\"\n            >\n              Employee Register\n            </Link>\n          </Button>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              color: \"yellow\",\n              backgroundColor: \"orange\",\n              borderColor: \"green\",\n            }}\n          >\n            {\" \"}\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signin/signin\"\n            >\n              Login\n            </Link>\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Routes>\n        <Route\n          path=\"/components/signup/employersignup\"\n          element={<EmployerSignup />}\n        />\n        <Route path=\"/\" element={<Home />} />\n        <Route\n          path=\"components/signup/employeesignup\"\n          element={<CreateForm />}\n        />\n        <Route path=\"components/signin/signin\" element={<SignInUser />} />\n      </Routes>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useEffect } from \"react\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormLabel from \"@mui/material/FormLabel\";\n//import subtaskSubmit from \"./subtasksubmit\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateFeedback(props) {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  const [feedback, setFeedback] = React.useState();\n\n  const theme = useTheme();\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let localerror = -2;\n\n  const [returned, setReturned] = useState(-2);\n  const [open, setOpen] = React.useState(false);\n  const [anonymousCheck, setAnonymousCheck] = useState(true);\n  const handleChange = (event) => {\n    setAnonymousCheck(event.target.value);\n  };\n  const feedbackSubmit = async (\n    employeeName,\n    employerName,\n    feedback,\n    anonymousCheck,\n    mainTaskName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendFeedback/?\";\n    call = call + \"employeeName=\" + employeeName + \"&\"; // do this for each parameter you want to send\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"feedback=\" + feedback + \"&\";\n    call = call + \"anonymousCheck=\" + anonymousCheck + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName;\n    let result = await (await fetch(call)).json();\n    setReturned(result.body);\n  };\n  //useEffect(()=>{\n  //console.log(props.people)\n  //setNames(props.people);\n  // },[])\n  return (\n    <div>\n      <span style={{ color: \"white\" }}> hahahahahahaa </span>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 617,\n        }}\n      >\n        Create Feedback\n      </Button>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        fullWidth={true}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Create a Feedback\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={feedback}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"feedback\"\n              label=\"Feedback\"\n              name=\"feedback\"\n              autoComplete=\"feedback\"\n              autoFocus\n              onChange={(e) => setFeedback(e.target.value)}\n            />\n          </Box>\n          <FormControl>\n            <FormLabel id=\"demo-controlled-radio-buttons-group\">\n              Anonymity\n            </FormLabel>\n            <RadioGroup\n              aria-labelledby=\"demo-controlled-radio-buttons-group\"\n              name=\"controlled-radio-buttons-group\"\n              value={anonymousCheck}\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value={true}\n                control={<Radio />}\n                label=\"Anonymous\"\n              />\n              <FormControlLabel\n                value={false}\n                control={<Radio />}\n                label=\"Non-anonymous\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              feedback === undefined ||\n              anonymousCheck === undefined ||\n              props.employeeName === undefined ||\n              props.employerName === [] ||\n              props.mainTaskName === undefined\n                ? alert(\"please complete all required fields\")\n                : feedbackSubmit(\n                    props.employeeName,\n                    props.employerName,\n                    feedback,\n                    anonymousCheck,\n                    props.mainTaskName\n                  );\n              //console.log(returned);\n              //</DialogActions>returned === -1\n              //</BootstrapDialog>? alert(\"the employee is not found\")\n              //: console.log(\"subtask added\");\n              handleClose();\n            }}\n          >\n            Create Feedback\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./employeeprogressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport { Grid, ListItem, TextField } from \"@mui/material\";\nimport CreateSubtask from \"../task/createsubtask\";\nimport CreateFeedback from \"./employeefeedback\";\nimport { List } from \"@mui/material\";\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function Employeesingletask(props) {\n  const [subtasks, setSubTasks] = useState([]);\n  let subtasktemp = [];\n  const [description, setDescription] = useState([]);\n  const [mainworkers, setMainWorkers] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  var employer;\n  var username;\n  var tempprogress = 0;\n  var progresstemp = [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  const [employerName, setEmployername] = useState();\n  const [employeeName, setEmployeename] = useState();\n  const [isUpdated, setIsupdated] = useState(false);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    //setEmployeename(result1.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n    call2 = call2 + \"employeeName=\" + result1.name;\n    let result2 = await (await fetch(call2)).json();\n    employer = result2.employerName;\n    let call = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + employer;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainProgress(result.body);\n    console.log(mainprogress);\n  };\n\n  const calculateprogress = (subtasks, status, progress, goal) => {\n    var subTaskProgress = 0;\n    var subTaskCounter = 0;\n    tempprogress = mainprogress;\n    for (let i = 0; i < subtasks.length; i++) {\n      if (status[i] == \"finished\") {\n        subTaskProgress += 1;\n        subTaskCounter += 1;\n      } else {\n        subTaskProgress += progress[i] / goal[i];\n        subTaskCounter += 1;\n      }\n    }\n    tempprogress = subTaskProgress / subTaskCounter;\n    if (tempprogress === 0) {\n      tempprogress = 0;\n    }\n    setMainProgress(tempprogress);\n  };\n\n  useEffect(() => {\n    const viewMainTask = async (mainTaskName, email) => {\n      /* let call1 = \"/findUserType/?\";\n      call1 = call1 + \"email=\" + email;\n      let result1 = await (await fetch(call1)).json();\n      console.log(result1);\n      //setUsertype(result.body);\n      //setUsername(result.name);\n      username = result1.name;\n      setEmployeename(result1.name);*/\n      let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n      call1 = call1 + \"email=\" + email;\n      let result1 = await (await fetch(call1)).json();\n      console.log(result1);\n      //setUsertype(result.body);\n      //setUsername(result.name);\n      username = result1.name;\n      setEmployeename(result1.name);\n      //setEmployeename(result1.name);\n      let call2 =\n        \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n      call2 = call2 + \"employeeName=\" + result1.name;\n      let result2 = await (await fetch(call2)).json();\n      employer = result2.employerName;\n      setEmployername(result2.employerName);\n      console.log(employer);\n      let call = \"https://businessaide-backend.herokuapp.com/getMainTaskData/?\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employer;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      setMainDescription(result.body.description);\n      setMainStatus(result.body.status);\n      setSubTasks(result.body.subtasks);\n      setMainWorkers(result.body.workers);\n      subtasktemp = result.body.subtasks;\n      console.log(subtasktemp);\n      setDescription([]);\n      setWorkers([]);\n      setGoal([]);\n      setStatus([]);\n      setProgress([]);\n      for (let i = 0; i < subtasktemp.length; i++) {\n        let call =\n          \"https://businessaide-backend.herokuapp.com/getSubTaskData/?\";\n        call = call + \"subTaskName=\" + subtasktemp[i] + \"&\";\n        call = call + \"mainTaskName=\" + maintask + \"&\";\n        call = call + \"employerName=\" + employer;\n        let result = await (await fetch(call)).json();\n        console.log(result);\n        //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n        setDescription((description) => [\n          ...description,\n          result.body.description,\n        ]);\n        setWorkers((workers) => [...workers, result.body.workers]);\n        setGoal((goal) => [...goal, result.body.goal]);\n        setProgress((progress) => [...progress, result.body.progress]);\n        setStatus((status) => [...status, result.body.status]);\n        console.log(subtasks);\n      }\n    };\n    if (user) {\n      viewMainTask(maintask, user.email);\n      mainTaskProgress(maintask, user.email);\n    }\n  }, [isUpdated]);\n\n  useEffect(() => {\n    console.log(mainprogress);\n    console.log(mainworkers);\n  }, [mainprogress, mainworkers]);\n\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n\n  /*useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n      \n    };\n   // for (let i = 0; i < subtasks.length; i++) {\n     // viewSubTask(subtasks[i],maintask,\"adam jerry\")\n      \n    //}\n    //console.log(progress);\n    \n  }, [maintask, subtasks]);*/\n\n  useEffect(() => {\n    //progresstemp = progress;\n    console.log(progress);\n  }, [progress]);\n  const subTaskProgress = async (\n    subTaskName,\n    value,\n    mainTaskName,\n    employerName,\n    index\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n\n    //setProgress(progress[index]+1);\n  };\n\n  const completeSubTask = async (subTaskName, mainTaskName, employerName) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  const completeMainTask = async (mainTaskName, employerName) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Workers Allocated\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainworkers.length === 0\n            ? \"loading\"\n            : mainworkers.map((worker) => worker + \"  \")}\n        </Typography>\n        <ProgressBar\n          bgcolor={\"#1976d2\"}\n          completed={\n            mainprogress > 1 ? 100 : Math.round((mainprogress / 1) * 100)\n          }\n        />\n        <Button\n          onClick={() => {\n            completeMainTask(maintask, employerName);\n          }}\n        >\n          Mark as Finished\n        </Button>\n        {mainworkers.length === 0 ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <List>\n              <ListItem></ListItem>\n              <ListItem>\n                <CreateFeedback\n                  employerName={employerName}\n                  employeeName={employeeName}\n                  mainTaskName={maintask}\n                />\n              </ListItem>\n            </List>\n          </div>\n        )}\n        <div style={{ color: \"white\" }}>hahahah</div>\n        <Grid>\n          {workers.length !== 0 ? (\n            subtasks.map((task, index) => {\n              let choose = false;\n              console.log(index);\n              console.log(workers[index]);\n              if (Array.isArray(workers[index])) {\n                for (let i = 0; i < workers[index].length; i++) {\n                  if (workers[index][i] == employeeName) {\n                    choose = true;\n                  }\n                }\n              } else {\n                if (workers[index] === employeeName) {\n                  choose = true;\n                }\n              }\n\n              console.log(choose);\n              return (\n                <Accordion>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography>{task}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography>\n                      {console.log(workers)}\n                      <div>Task Description: {description[index]}</div>\n                      <div>workers allocated: {workers[index]}</div>\n                      <div>goal: {goal[index]}</div>\n                      <div>status: {status[index]}</div>\n                      <div>\n                        {\"progress\"}\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={\n                            (progress[index] / goal[index]) * 100 >= 100\n                              ? 100\n                              : (progress[index] / goal[index]) * 100\n                          }\n                        ></ProgressBar>\n                      </div>\n                    </Typography>\n                    <div>\n                      {choose ? (\n                        <div>\n                          <TextField\n                            value={Number(newValue)}\n                            type=\"text\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            label=\"Increase New Progress by\"\n                            autoFocus\n                            onChange={(e) => {\n                              setnewValue(e.target.value);\n                            }}\n                          />\n\n                          <Button\n                            onClick={() => {\n                              setProgress((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  existingItems[index] + Number(newValue),\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n\n                              subTaskProgress(\n                                task,\n                                newValue,\n                                maintask,\n                                employerName,\n                                index\n                              );\n                              progresstemp = progress;\n                              progresstemp[index] += Number(newValue);\n                              {\n                                if (progresstemp[index] >= goal[index]) {\n                                  setStatus((existingItems) => {\n                                    return [\n                                      ...existingItems.slice(0, index),\n                                      \"finished\",\n                                      ...existingItems.slice(index + 1),\n                                    ];\n                                  });\n                                }\n                              }\n                              calculateprogress(\n                                subtasks,\n                                status,\n                                progresstemp,\n                                goal\n                              );\n                              setMainProgress(tempprogress);\n                              console.log(tempprogress);\n\n                              // mainTaskProgress(maintask, \"adam jerry\")\n                            }}\n                          >\n                            Increase Progress\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              completeSubTask(task, maintask, employerName);\n\n                              setStatus((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  \"finished\",\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n                            }}\n                          >\n                            Mark as Finished\n                          </Button>\n                        </div>\n                      ) : (\n                        <div>cannot edit this task</div>\n                      )}\n                    </div>\n                  </AccordionDetails>\n                </Accordion>\n              );\n            })\n          ) : (\n            <div>loading...</div>\n          )}\n        </Grid>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./employeeprogressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\nvar username;\n//const [employeeName, setEmployeename] = useState();\n//const [employerName, setEmployerName] = useState();\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n//const { user } = useAuth();\nexport default function Employeetasklist() {\n  window.onload = function () {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n  const { user } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  var task = [];\n  var employer;\n  const displayTask = async (email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    //setEmployeename(result1.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n    call2 = call2 + \"employeeName=\" + result1.name;\n    let result2 = await (await fetch(call2)).json();\n    employer = result2.employerName;\n    console.log(employer);\n    //setEmployerName(result2);\n    let call =\n      \"https://businessaide-backend.herokuapp.com/displayEmployeeTask/?\";\n    call = call + \"employeeName=\" + result1.name;\n    let result = await (await fetch(call)).json();\n    for (let i = 0; i < result.body.length; i++) {\n      task[i] = result.body[i];\n      setTasks((tasks) => [...tasks, result.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask =\n        \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + result2.employerName;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n  /* const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n */\n\n  useEffect(() => {\n    if (user) {\n      displayTask(user.email);\n    }\n  }, []);\n\n  //useEffect(() => {\n  //console.log(task.length);\n  //for (let i = 0; i < task.length; i++) {\n  // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n  //}\n  //}, []);\n\n  //useEffect(()=>{\n  // console.log(tasks);\n\n  //}, [tasks]);\n\n  useEffect(() => {\n    console.log(tasks);\n    console.log(progress);\n  }, [tasks]);\n\n  return tasks === [] ? (\n    <div>loading...</div>\n  ) : (\n    <div>\n      <h1>Task Page</h1>\n\n      <Grid\n        container\n        rowSpacing={20}\n        columns={12}\n        columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n      >\n        {tasks === [] ? (\n          <h2>loading...</h2>\n        ) : (\n          tasks.map((doc, index) => {\n            return (\n              <Grid item xs={3}>\n                <Card sx={{ maxWidth: 345 }}>\n                  <CardContent>\n                    <Typography\n                      sx={{ fontSize: 20 }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      Current Task\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {doc ? doc : \"loading\"}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {progress[index] ? (\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={Math.round((progress[index] / 1) * 100)}\n                        />\n                      ) : (\n                        <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />\n                      )}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link\n                      to=\"/employees/employeesingletask\"\n                      state={doc}\n                      style={{ textDecoration: \"none\", color: \"blue\" }}\n                    >\n                      View Task\n                    </Link>\n                    <span style={{ color: \"white\" }}>hahahaha</span>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport { createTheme } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nexport default function EmployeeWelcome() {\n  const theme = createTheme({\n    typography: {\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n    },\n  });\n\n  const auth = getAuth();\n  const user = auth.currentUser;\n  //const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n  // const docs = await getDocs(q);\n  const [username, setUsername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n  };\n  useEffect(() => {\n    FindUserType(user.email);\n  }, []);\n  //console.log(user.uid);\n  return username ? (\n    <ThemeProvider theme={theme}>\n      <div>\n        <h1>Welcome {username}!</h1>\n        <List>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography\n                sx={{\n                  fontFamily: '\"Segoe UI\"',\n                }}\n                variant=\"h6\"\n              >\n                To view, please go to the \"payroll\" page\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To view each individual task, please to go to \"view task\" page\n                and click on each of the task\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To increase the task progress, enter a number and click on\n                \"increase progress by\"\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To complete a main task/subtask, click on \"mark as complete\n                under the task\"\n              </Typography>\n            </Card>\n          </ListItem>\n        </List>\n      </div>\n    </ThemeProvider>\n  ) : (\n    <div>loading...</div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeDataService from \"../employeeserver\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { IconButton } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function Salary(props) {\n  const [employees, setEmployees] = useState([]);\n\n  const [open, setOpen] = React.useState(false);\n\n  let feedback;\n\n  useEffect(() => {\n    console.log(props.name);\n    getEmployees(props.name);\n  }, []);\n\n  const getEmployees = async (id) => {\n    const data = await EmployeeDataService.getEmployee(id);\n    console.log(\n      data._document.data.value.mapValue.fields.firstName.stringValue\n    );\n    setEmployees(data);\n  };\n\n  console.log(employees);\n\n  if (employees.length === 0) {\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  } else {\n    const employeename =\n      employees._document.data.value.mapValue.fields.firstName.stringValue +\n      \" \" +\n      employees._document.data.value.mapValue.fields.lastName.stringValue;\n    console.log(employeename + \" hello\" + employeename);\n    return (\n      <div className=\"list\" rowspacing={3}>\n        <div\n          style={{\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\n          }}\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n            alt=\"\"\n            height={200}\n            width={200}\n          />\n          <h1>\n            {\n              employees._document.data.value.mapValue.fields.firstName\n                .stringValue\n            }{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.lastName\n                .stringValue\n            }\n          </h1>\n        </div>\n        <div>\n          <h3>\n            Daily Salary:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.dailySalary\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Days Attended:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.daysAttended\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Overtime Hourly Rate:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overtimeHourlyRate\n                .stringValue\n            }\n          </h3>\n\n          <h3>\n            Overtime Hours:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overtimeHours\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Salary for the Month:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overallSalary\n                .stringValue\n            }\n          </h3>\n        </div>\n      </div>\n    );\n  }\n\n  //console.log(employees);\n}\n","import { Component } from \"react\";\nimport { useAuth } from \"../useAuth\";\nimport { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Welcome from \"../Welcome\";\nimport { useState, useEffect } from \"react\";\nimport Employeesingletask from \"./employeesingletask\";\nimport Employeetasklist from \"./employeedisplaytask\";\nimport EmployeeWelcome from \"./employeewelcome\";\nimport Salary from \"./salary\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nfunction EmployeeBar(props) {\n  console.log(props.name);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const { signOutWithGoogle } = useAuth();\n  const auth = getAuth();\n  const [employeeId, setEmployeeId] = useState(\"\");\n  const [username, setUsername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n  };\n\n  const getEmployeeIdHandler = (id) => {\n    console.log(\"The ID of document to be edited: \", id);\n    setEmployeeId(id);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                BusinessAide\n              </Link>\n            </Typography>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/salary\"\n              >\n                Payroll\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/employeedisplaytask\"\n              >\n                View Tasks\n              </Link>\n            </Button>\n            <Button onClick={signOutWithGoogle} color=\"inherit\">\n              sign out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Routes>\n        <Route path=\"/\" element={<EmployeeWelcome />} />\n        <Route\n          path=\"/employees/employeedisplaytask\"\n          element={<Employeetasklist />}\n        />\n        <Route\n          path=\"/employees/employeesingletask\"\n          element={<Employeesingletask />}\n        />\n        <Route\n          path=\"/employees/salary\"\n          element={<Salary name={props.name} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default EmployeeBar;\n","import \"./App.css\";\nimport { useAuth } from \"./useAuth\";\nimport Home from \"./display\";\nimport ButtonAppBar from \"./NavBar\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./redux/employee.feature\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { config as firebaseConfig } from \"./config\";\nimport userEvent from \"@testing-library/user-event\";\nimport { useState } from \"react\";\n\n//import HomePage from \"./components/signin/mainpage\";\nimport EmployeeBar from \"./employees/employeenavbar\";\n\nexport default function App() {\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setUsertype(result.body);\n    setUsername(result.name);\n  };\n\n  const { user } = useAuth();\n  const [usertype, setUsertype] = useState();\n  const [username, setUsername] = useState();\n  if (user) {\n    console.log(user.email);\n    FindUserType(user.email);\n  } else {\n  }\n  return (\n    <div className=\"App\">\n      {user ? (\n        usertype == \"employer\" ? (\n          <Home name={username} />\n        ) : (\n          <EmployeeBar name={username} />\n        )\n      ) : (\n        <ButtonAppBar />\n      )}\n    </div>\n  );\n}\n\n//(docs&&docs.docs[0].metadata._document.data.value.mapValue.fields.position.stringValue===\"employee\"? <div>hello</div>:\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./rootreducer\";\nimport userReducer from \"./employee.feature\";\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ProvideAuth } from \"./useAuth\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { getFirestore } from \"redux-firestore\";\nimport { getFirebase } from \"react-redux-firebase\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <ProvideAuth>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ProvideAuth>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}