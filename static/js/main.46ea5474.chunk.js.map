{"version":3,"sources":["config.js","useAuth.js","components/signin/signin.js","redux/employee.feature.js","components/signup/employeesignup.js","firebaseini.js","employeeserver.js","Individual.js","cards.js","viewemployees.js","Welcome.js","task/progressbar.js","task/handlesubmit.js","task/createtask.js","task/createsubtask.js","task/taskserver.js","task/displaytask.js","task/viewfeedback.js","task/singletask.js","payroll/payroll.js","display.js","Home.js","components/signup/employersignup.js","NavBar.jsx","employees/employeeprogressbar.js","employees/employeefeedback.js","employees/employeesingletask.js","employees/employeedisplaytask.js","employees/employeewelcome.js","employees/salary.js","employees/employeenavbar.js","App.jsx","reportWebVitals.js","redux/store.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","firebaseConfig","firebaseAuth","getAuth","authContext","GoogleAuthProvider","createContext","db","getFirestore","ProvideAuth","_ref","children","auth","_useState","useState","_useState2","Object","slicedToArray","user","setUser","signin","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","email","password","wrap","_context","prev","next","preventDefault","abrupt","signInWithEmailAndPassword","then","response","stop","_x","_x2","_x3","apply","this","arguments","registerWithEmailAndPassword","_ref3","_callee2","fullname","username","_auth","res","_user","_context2","getDatabase","createUserWithEmailAndPassword","sent","addDoc","collection","uid","authProvider","t0","_x4","_x5","_x6","signInWithGoogle","_ref4","_callee3","googleProvider","_user2","q","_context3","signInWithPopup","query","where","getDocs","docs","length","name","displayName","console","error","alert","message","useEffect","unsubscribe","onAuthStateChanged","signup","signout","signOut","signOutWithGoogle","catch","sendPasswordResetEmail","confirmPasswordReset","code","useProvideAuth","react_default","a","createElement","Provider","value","useAuth","useContext","styled","div","_templateObject","taggedTemplateLiteral","theme","createTheme","Signin","nav","useNavigate","_useState3","_useState4","setName","_useState5","_useState6","setPassword","_handleSubmit","signin_regeneratorRuntime","event","result","log","react","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","Typography","variant","onSubmit","handleSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","type","Button","mb","Grid","container","item","xs","SignInUser","userSlice","createSlice","initialState","reducers","login","state","action","payload","logout","actions","employeesignup_templateObject","Submit","firstName","setFirstName","lastName","setLastName","secretcode","setSecretCode","_useState7","_useState8","_useState9","_useState10","dob","setDob","_useState11","_useState12","workExp","setWorkExp","_useState13","_useState14","location","setLocation","_useState15","_useState16","title","setTitle","_useState17","_useState18","phoneNum","setphoneNum","_useState19","_useState20","_useState21","_useState22","loginerror","setError","_useState23","_useState24","_useState25","_useState26","retypepassword","setRetypepassword","dispatch","useDispatch","navigate","_register","employeesignup_regeneratorRuntime","call","userAuth","updateProfile","err","fetch","json","register","InputLabelProps","shrink","CreateForm","employeesignup_Submit","employeeCollectionRef","employeeserver","addEmployee","newEmployee","updatedEmployee","bookDoc","doc","updateDoc","deleteEmployee","employeeDoc","deleteDoc","getALLEmployee","getEmployee","EmployeeDoc","getDoc","BootstrapDialog","Dialog","& .MuiDialogContent-root","padding","spacing","& .MuiDialogActions-root","BootstrapDialogTitle","props","onClose","other","objectWithoutProperties","DialogTitle","assign","p","IconButton","aria-label","onClick","position","right","top","color","palette","grey","Close_default","Individual","employees","setEmployees","employer","setEmployername","useParams","_React$useState","React","_React$useState2","open","setOpen","rate","setRate","hourly","setHourly","days","setDays","overtime","setOvertime","deductions","setDeductions","overall","setOverall","totalsalary","setTotalsalary","FindUserType","Individual_regeneratorRuntime","getEmployees","handleClose","sendPayroll","dailySalary","daysAttended","overtimeHourlyRate","overtimeHours","overallSalary","employeeName","employerName","reason","_x7","_x8","_x9","data","EmployeeDataService","_document","mapValue","fields","stringValue","_x10","employeename","className","rowspacing","style","backgroundImage","src","alt","height","width","AddIcCall_default","AddLocation_default","Cake_default","Work_default","Paid_default","aria-labelledby","Individual_BootstrapDialogTitle","DialogContent","dividers","Box_Box","Number","DialogActions","Item","Paper","objectSpread","backgroundColor","mode","typography","body2","textAlign","text","secondary","Cards","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","EmployeesList","getEmployeeId","viewemployees_regeneratorRuntime","call1","returned","body","map","rowSpacing","columns","columnSpacing","sm","md","index","key","react_router_dom","to","textDecoration","Welcome","fontFamily","join","currentUser","setUsername","Welcome_regeneratorRuntime","List","ListItem","ListItemIcon","Send_default","ProgressBar","completed","fillerStyles","concat","borderRadius","fontWeight","handlesubmit_regeneratorRuntime","taskname","description","people","CreateTask","useTheme","employername","createtask_regeneratorRuntime","employerreturned","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","names","employee","getStyles","personName","indexOf","fontWeightRegular","fontWeightMedium","calltask","callresult","setPersonName","_React$useState3","_React$useState4","task","setTask","setDescription","fontSize","createtask_BootstrapDialog","createtask_BootstrapDialogTitle","FormControl","fullwidth","ml","InputLabel","Select","labelId","multiple","split","input","OutlinedInput","MenuItem","undefined","CreateSubtask","setIsupdated","isUpdated","maintask","feedback","setFeedback","goal","setGoal","createsubtask_regeneratorRuntime","subtaskSubmit","subTaskName","subTaskDesc","mainTaskName","workerArray","left","createsubtask_BootstrapDialog","createsubtask_BootstrapDialogTitle","InputProps","inputProps","min","taskCollectionRef","addTask","newTask","deleteTask","getALLTask","printRef","getTask","OutlinedCard","window","onload","hash","reload","tasks","setTasks","progress","setProgress","displaytask_regeneratorRuntime","call2","result2","_loop","i","_loop2","_i","toConsumableArray","resulttask","delegateYield","progressbar","Math","round","CardActions","Transition","ref","Slide","direction","FullScreenDialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","flex","button","ListItemText","primary","Divider","BasicCard","subtasks","setSubTasks","subtasktemp","mainworkers","setMainWorkers","workers","setWorkers","mainprogress","setMainProgress","status","setStatus","mainstatus","setMainStatus","maindescription","setMainDescription","useLocation","_useState27","_useState28","tempprogress","progresstemp","_useState29","_useState30","newValue","setnewValue","mainTaskProgress","singletask_regeneratorRuntime","result1","viewMainTask","viewMainTaskFeedback","_context4","subTaskProgress","_callee4","_context5","_x11","completeSubTask","_ref5","_callee5","_context6","_x12","_x13","_x14","_x15","completeMainTask","_ref6","_callee6","_context7","_x16","_x17","_x18","minWidth","worker","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","AccordionDetails","existingItems","slice","subTaskCounter","calculateprogress","Showpayroll","setEmployeenames","payroll_regeneratorRuntime","subheader","ListSubheader","ListItemButton","element","reduce","b","Home","setEmployeeId","flexGrow","borderColor","react_router","path","viewemployees","employName","payroll","employersignup_templateObject","employersignup_regeneratorRuntime","EmployerSignup","employersignup_Submit","ButtonAppBar","Home_Home","CreateFeedback","setReturned","anonymousCheck","setAnonymousCheck","feedbackSubmit","employeefeedback_regeneratorRuntime","employeefeedback_BootstrapDialog","employeefeedback_BootstrapDialogTitle","FormLabel","RadioGroup","FormControlLabel","control","Radio","Employeesingletask","setEmployeename","employeesingletask_regeneratorRuntime","employeeprogressbar","choose","Array","isArray","Employeetasklist","displayTask","employeedisplaytask_regeneratorRuntime","EmployeeWelcome","employeewelcome_regeneratorRuntime","Salary","salary_regeneratorRuntime","EmployeeBar","App","App_regeneratorRuntime","setUsertype","usertype","employeenavbar","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userReducer","ReactDOM","createRoot","document","getElementById","render","es","App_App"],"mappings":"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","file":"static/js/main.46ea5474.chunk.js","sourcesContent":["export const config = {\n  apiKey: \"AIzaSyACSUS80qgqEzuQQmo_hMJbEJDwqsIf1ns\",\n  authDomain: \"businessaide-fab48.firebaseapp.com\",\n  projectId: \"businessaide-fab48\",\n  storageBucket: \"businessaide-fab48.appspot.com\",\n  messagingSenderId: \"440207297304\",\n  appId: \"1:440207297304:web:1ee77efcf3f79a1e09ec6d\",\n  measurementId: \"G-V4KJ4B5E32\",\n};\n","import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport {getDatabase ,ref, set} from \"firebase/database\"\n\nimport { config as firebaseConfig } from \"./config\";\n\n// Code edited from https://usehooks.com/useAuth/ and\n// https://firebase.google.com/docs/auth/web/start#add-initialize-sdk\n// Not my original work.\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nconst firebaseAuth = getAuth(app);\n\nconst googleAuthProvider = new GoogleAuthProvider();\n\nconst authContext = createContext();\nconst db = getFirestore(app);\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n  const signin = async(e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return signInWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n      \n    );\n\n  };\n  const registerWithEmailAndPassword = async (fullname, username, password) => {\n   const database = getDatabase(app);\n    try {\n      const auth = getAuth(app);\n      const res = await createUserWithEmailAndPassword(\n        auth,\n        username,\n        password\n      );\n      const user = res.user;\n\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        fullname,\n        authProvider: \"local\",\n        username,\n      });\n      /*set(ref(database, 'employers/' + fullname), {\n       \n      });*/\n      /*db.collection(\"employers\").doc(fullname).set({\n        uid: user.uid,\n        email: username,\n        fullname: fullname,\n        authProvider:\"local\"\n      })*/\n    } catch (err) {\n      //console.error(err);\n      //alert(err.message);\n    }\n    \n      \n  };\n\n  const signup = (e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return createUserWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n    );\n  };\n\n  const signout = () => {\n    return firebaseAuth.signOut().then(() => {\n      setUser(false);\n    });\n  };\n\n  const sendPasswordResetEmail = (email) => {\n    return firebaseAuth.sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebaseAuth.confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithGoogle = async () => {\n    const googleProvider = new GoogleAuthProvider();\n    try {\n      const res = await signInWithPopup(auth, googleProvider);\n      const user = res.user;\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n      const docs = await getDocs(q);\n      if (docs.docs.length === 0) {\n        await addDoc(collection(db, \"users\"), {\n          uid: user.uid,\n          name: user.displayName,\n          authProvider: \"google\",\n          email: user.email,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  const auth = getAuth();\n\n  const signOutWithGoogle = () => {\n    return signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  //const registeruser = createUserWithEmailAndPassword(auth, email, password)\n  //.then((userCredential) => {\n  // Signed in\n  //user = userCredential.user;\n  // ...\n  //})\n  //.catch((error) => {\n  // const errorCode = error.code;\n  //const errorMessage = error.message;\n  // ..\n  //});\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    const unsubscribe = firebaseAuth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  // Return the user object and auth methods\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    signOutWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    registerWithEmailAndPassword,\n  };\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport styled from \"styled-components\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport {\n  Link,\n  Route,\n  Routes,\n  BrowserRouter,\n  useNavigate,\n} from \"react-router-dom\";\n\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\nconst theme = createTheme();\n\nexport function Signin() {\n  const nav = useNavigate();\n  const { user } = useAuth();\n  let navigate = useNavigate();\n  const [userstatus, setUser] = useState(null);\n  const { signin } = useAuth();\n  const [username, setName] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.username] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n      let result = await signin(event, username, password);\n      console.log(result);\n      if (result) {\n        nav(\"/\");\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              handleSubmit(e);\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\nexport default function SignInUser() {\n  return <Signin></Signin>;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// selectors\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\nimport { useNavigate } from \"react-router-dom\";\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const { user } = useAuth();\n  const { signOutWithGoogle } = useAuth();\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [secretcode, setSecretCode] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [workExp, setWorkExp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNum, setphoneNum] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [loginerror, setError] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n  async function register(event) {\n    event.preventDefault();\n\n    if (firstName == \"\") {\n      return alert(\"Please enter a full name\");\n    } else if (username === \"\") {\n      alert(\"please enter an email\");\n    } else if (password !== retypepassword) {\n      alert(\"passwords do not match\");\n    } else {\n      // Create a new user with Firebase\n      let call = \"https://businessaide-backend.herokuapp.com/SendEmployee/?\";\n      call = call + \"firstName=\" + firstName + \"&\";\n      call = call + \"lastName=\" + lastName + \"&\";\n      call = call + \"secretCode=\" + secretcode + \"&\";\n      call = call + \"dob=\" + dob + \"&\";\n      call = call + \"workExp=\" + workExp + \"&\";\n      call = call + \"location=\" + location + \"&\";\n      call = call + \"title=\" + title + \"&\";\n      call = call + \"phoneNum=\" + phoneNum + \"&\";\n      call = call + \"dailySalary=\" + \"0\" + \"&\";\n      call = call + \"daysAttended=\" + \"0\" + \"&\";\n      call = call + \"overtimeHourlyRate=\" + \"0\" + \"&\";\n      call = call + \"overtimeHours=\" + \"0\" + \"&\";\n      call = call + \"deductions=\" + \"0\" + \"&\";\n      call = call + \"overallSalary=\" + \"0\";\n      await registerWithEmailAndPassword(\n        firstName + \" \" + lastName,\n        username,\n        password\n      )\n        .then((userAuth) => {\n          // Update the newly created user with a display name and a picture\n          updateProfile(userAuth.user, {\n            displayName: firstName + \" \" + lastName,\n          })\n            .then(\n              // Dispatch the user information for persistence in the redux state\n              dispatch(\n                login({\n                  email: userAuth.user.email,\n                  uid: userAuth.user.uid,\n                  displayName: firstName + \" \" + lastName,\n                })\n              )\n            )\n            .catch((error) => {\n              console.log(error);\n              setError(error);\n            });\n        })\n        .catch((err) => {\n          //alert(err);\n        })\n        .then(signOutWithGoogle);\n      navigate(\"/\");\n      await (await fetch(call)).json();\n    }\n  }\n\n  /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              register(e);\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={firstName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"firstname\"\n              label=\"Firstname\"\n              id=\"firstname\"\n              autoComplete=\"firstname\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <TextField\n              value={lastName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"lastname\"\n              label=\"Lastname\"\n              id=\"lastname\"\n              autoComplete=\"lastname\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={secretcode}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"secretcode\"\n              label=\"Secretcode\"\n              id=\"secretcode\"\n              onChange={(e) => setSecretCode(e.target.value)}\n            />\n            <TextField\n              InputLabelProps={{ shrink: true }}\n              value={dob}\n              type=\"date\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"dob\"\n              label=\"Date of Birth\"\n              id=\"dob\"\n              onChange={(e) => setDob(e.target.value)}\n            />\n            <TextField\n              value={workExp}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"workExp\"\n              label=\"Work Experience\"\n              id=\"workExp\"\n              onChange={(e) => setWorkExp(e.target.value)}\n            />\n            <TextField\n              value={location}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"location\"\n              label=\"Location\"\n              id=\"location\"\n              onChange={(e) => setLocation(e.target.value)}\n            />\n            <TextField\n              value={title}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"title\"\n              label=\"Title\"\n              id=\"title\"\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <TextField\n              value={phoneNum}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"phoneNum\"\n              label=\"Phone Number\"\n              id=\"phoneNum\"\n              onChange={(e) => setphoneNum(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              value={retypepassword}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"retypepassword\"\n              label=\"Re-enter Password\"\n              type=\"password\"\n              id=\"retypepassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setRetypepassword(e.target.value)}\n            />\n            <Typography component=\"h3\" variant=\"h5\">\n              {loginerror}\n            </Typography>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default function CreateForm() {\n  return <Submit></Submit>;\n}\n","import { config as firebaseConfig } from \"./config\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n","import { db } from \"./firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst employeeCollectionRef = collection(db, \"employees\");\nclass EmployeeDataService {\n  addEmployee = (newEmployee) => {\n    return addDoc(employeeCollectionRef, newEmployee);\n  };\n\n  updatedEmployee = (id, updatedEmployee) => {\n    const bookDoc = doc(db, \"employees\", id);\n    return updateDoc(bookDoc, updatedEmployee);\n  };\n\n  deleteEmployee = (id) => {\n    const employeeDoc = doc(db, \"employees\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLEmployee = () => {\n    return getDocs(employeeCollectionRef);\n  };\n\n  getEmployee = (id) => {\n    const EmployeeDoc = doc(db, \"employees\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new EmployeeDataService();\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeDataService from \"./employeeserver\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { IconButton } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\nimport { useAuth } from \"./useAuth\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function Individual() {\n  const { user } = useAuth();\n  const [employees, setEmployees] = useState([]);\n  const [employer, setEmployername] = useState();\n  const { id } = useParams();\n  const [open, setOpen] = React.useState(false);\n  const [rate, setRate] = useState(0);\n  const [hourly, setHourly] = useState(0);\n  const [days, setDays] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n  const [deductions, setDeductions] = useState(0);\n  const [overall, setOverall] = useState(0);\n  let feedback;\n  const [totalsalary, setTotalsalary] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployername(result.name);\n  };\n\n  useEffect(() => {\n    getEmployees(id);\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, [id]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const sendPayroll = async (\n    dailySalary,\n    daysAttended,\n    overtimeHourlyRate,\n    overtimeHours,\n    deductions,\n    overallSalary,\n    employeeName,\n    employerName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendPayroll/?\";\n    call = call + \"dailySalary=\" + dailySalary + \"&\";\n    call = call + \"daysAttended=\" + daysAttended + \"&\";\n    call = call + \"overtimeHourlyRate=\" + overtimeHourlyRate + \"&\";\n    call = call + \"overtimeHours=\" + overtimeHours + \"&\";\n    call = call + \"deductions=\" + deductions + \"&\";\n    call = call + \"overallSalary=\" + overallSalary + \"&\";\n    call = call + \"employeeName=\" + employeeName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    feedback = result;\n    alert(feedback.reason);\n  };\n\n  const getEmployees = async (id) => {\n    const data = await EmployeeDataService.getEmployee(id);\n    console.log(\n      data._document.data.value.mapValue.fields.firstName.stringValue\n    );\n    setEmployees(data);\n    setTotalsalary(\n      data._document.data.value.mapValue.fields.overallSalary.stringValue\n    );\n  };\n\n  console.log(employees);\n\n  if (employees.length === 0) {\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  } else {\n    const employeename =\n      employees._document.data.value.mapValue.fields.firstName.stringValue +\n      \" \" +\n      employees._document.data.value.mapValue.fields.lastName.stringValue;\n    console.log(employeename + \" hello\" + employeename);\n    return (\n      <div className=\"list\" rowspacing={3}>\n        <div\n          style={{\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\n          }}\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n            alt=\"\"\n            height={200}\n            width={200}\n          />\n          <h1>\n            {\n              employees._document.data.value.mapValue.fields.firstName\n                .stringValue\n            }{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.lastName\n                .stringValue\n            }\n          </h1>\n        </div>\n        <div>\n          <h3>\n            <AddIcCallIcon></AddIcCallIcon> Phone number:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.phoneNum\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <AddLocationIcon></AddLocationIcon> Location:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.location\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <CakeIcon></CakeIcon> Date of Birth:{\" \"}\n            {employees._document.data.value.mapValue.fields.dob.stringValue}\n          </h3>\n          <h3>\n            <WorkIcon></WorkIcon> Work Experience:{\" \"}\n            {employees._document.data.value.mapValue.fields.workExp.stringValue}\n          </h3>\n          <h3>\n            <PaidIcon></PaidIcon> Salary for the Month: {totalsalary}\n          </h3>\n          <Button variant=\"outlined\" onClick={handleClickOpen}>\n            add new payroll\n          </Button>\n          <BootstrapDialog\n            onClose={handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={open}\n          >\n            <BootstrapDialogTitle\n              id=\"customized-dialog-title\"\n              onClose={handleClose}\n            >\n              Add a Payroll\n            </BootstrapDialogTitle>\n            <DialogContent dividers>\n              <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                <TextField\n                  value={rate}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"rate\"\n                  label=\"Daily Salary\"\n                  name=\"rate\"\n                  autoComplete=\"rate\"\n                  autoFocus\n                  onChange={(e) => {\n                    setRate(Number(e.target.value));\n                    setOverall(e.target.value * days + overtime - deductions);\n                  }}\n                />\n\n                <TextField\n                  value={days}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"days\"\n                  label=\"Number of Days Attended\"\n                  name=\"days\"\n                  autoComplete=\"days\"\n                  autoFocus\n                  onChange={(e) => {\n                    setDays(Number(e.target.value));\n                    setOverall(\n                      rate * e.target.value + overtime * hourly - deductions\n                    );\n                  }}\n                />\n                <TextField\n                  value={hourly}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"hourly\"\n                  label=\"Hourly Salary for Overtime\"\n                  name=\"hourly\"\n                  autoComplete=\"hourly\"\n                  autoFocus\n                  onChange={(e) => {\n                    setHourly(Number(e.target.value));\n                    setOverall(\n                      rate * days + overtime * e.target.value - deductions\n                    );\n                  }}\n                />\n                <TextField\n                  value={overtime}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"overtime\"\n                  label=\"Overtime Hours\"\n                  name=\"overtime\"\n                  autoComplete=\"overtime\"\n                  autoFocus\n                  onChange={(e) => {\n                    setOvertime(Number(e.target.value));\n                    setOverall(\n                      rate * days + Number(e.target.value) * hourly - deductions\n                    );\n                  }}\n                />\n                <TextField\n                  value={deductions}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"deductions\"\n                  label=\"Deductions\"\n                  id=\"deductions\"\n                  onChange={(e) => {\n                    setDeductions(Number(e.target.value));\n                    setOverall(\n                      rate * days + overtime * hourly - e.target.value\n                    );\n                  }}\n                />\n                <h3>The overall monthly salary is: {overall}</h3>\n              </Box>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  setTotalsalary(overall);\n                  console.log(employeename);\n                  sendPayroll(\n                    rate,\n                    days,\n                    hourly,\n                    overtime,\n                    deductions,\n                    overall,\n                    employeename,\n                    employer\n                  );\n                  handleClose();\n                }}\n              >\n                SUBMIT\n              </Button>\n            </DialogActions>\n          </BootstrapDialog>\n        </div>\n      </div>\n    );\n  }\n\n  //console.log(employees);\n}\n\n/*const mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const Employees = state.firestore.data.Employees;\n  const employee = Employees[id];\n  return { employee: employee };\n};*/\n\n/*export default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"Employees\" }])\n)(Individual);*/\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Individual from \"./Individual\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Cards(props) {\n  return (\n    <div>\n      <Item>\n        <Card sx={{ maxWidth: 345 }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n              alt=\"\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {props.fullname}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Item>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport Cards from \"./cards\";\nimport { useAuth } from \"./useAuth\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"./employeeserver\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\nconst EmployeesList = ({ getEmployeeId }) => {\n  const { user } = useAuth();\n  const [employees, setEmployees] = useState([]);\n  const [name, setName] = useState([]);\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const getEmployees = async () => {\n    if (user) {\n      let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n      console.log(user.email);\n      call1 = call1 + \"email=\" + user.email;\n      let result = await (await fetch(call1)).json();\n      console.log(result.name);\n      let call =\n        \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n      setName(result.name);\n      call = call + \"employerName=\" + result.name;\n      let returned = await (await fetch(call)).json();\n      setEmployees(returned.body.map((doc) => ({ ...doc, id: doc })));\n    }\n  };\n  /* \n  const deleteHandler = async (id) => {\n    await deleteEmployee(id);\n    getEmployees();\n  }; */\n\n  return (\n    /*   {namecards.map(({ id, data: { Firstname, Lastname, TeamLeader } }) => (\n        <Cards\n          key={id}\n          Firstname={Firstname}\n          Lastname={Lastname}\n          TeamLeader={TeamLeader}\n        />\n      ))} */\n    <div>\n      <Grid\n        container\n        rowSpacing={1}\n        columns={12}\n        columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n      >\n        {employees.map((doc, index) => {\n          console.log(doc);\n          return (\n            <Grid item xs={3} key={doc.name}>\n              <Link\n                to={\"/Individual/\" + doc.name}\n                style={{ textDecoration: \"none\", color: \"black\" }}\n                key={doc.name}\n              >\n                <Cards\n                  key={doc.name}\n                  id={doc.name}\n                  index={index + 1}\n                  fullname={doc.name}\n                  employer={name}\n                />\n              </Link>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default EmployeesList;\n","import React from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport { createTheme } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { config as firebaseConfig } from \"./config\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nexport default function Welcome() {\n  const theme = createTheme({\n    typography: {\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n    },\n  });\n\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n  const auth = getAuth();\n  const user = auth.currentUser;\n  //const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n  // const docs = await getDocs(q);\n  const [username, setUsername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n  };\n  useEffect(() => {\n    FindUserType(user.email);\n  }, []);\n  //console.log(user.uid);\n  return username ? (\n    <ThemeProvider theme={theme}>\n      <div>\n        <h1>Welcome {username}!</h1>\n        <List>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography\n                sx={{\n                  fontFamily: '\"Segoe UI\"',\n                }}\n                variant=\"h6\"\n              >\n                To view or add payroll, please go to the \"payroll\" page and\n                click on each salary. You will be able to create new payroll\n                there\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To create a task, please go to the \"add task\" page and fill in\n                all the fields. Please remember to register an employee using\n                the secret code you created before creating task because\n                otherwise there will be no whom employee you can assign the task\n                to\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To view each individual task, please to go to the \"view task\"\n                page and click on each of the task\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To create a subtask, please set the goal as a number\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To increase the task progress, please enter a number and click\n                \"increase progress by\"\n              </Typography>\n            </Card>\n          </ListItem>\n        </List>\n      </div>\n    </ThemeProvider>\n  ) : (\n    <div>loading...</div>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\n\nconst handleSubmit = async (taskname, description, employer, people) => {\n  if (taskname !== \"\") {\n    let call = \"https://businessaide-backend.herokuapp.com/createMainTask/?\";\n    call = call + \"taskname=\" + taskname + \"&\"; // do this for each parameter you want to send\n    call = call + \"description=\" + description + \"&\";\n    call = call + \"employer=\" + employer + \"&\";\n    call = call + \"people=\" + people;\n    await (await fetch(call)).json();\n  } else {\n    alert(\"please enter a taskname\");\n  }\n};\nexport default handleSubmit;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useEffect } from \"react\";\nimport EmployeeDataService from \"../employeeserver\";\nimport { useAuth } from \"../useAuth\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nimport Select from \"@mui/material/Select\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateTask() {\n  const [employees, setEmployees] = useState([]);\n  const theme = useTheme();\n  const [employername, setEmployername] = useState();\n  const { user } = useAuth();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployername(result.name);\n    let employerreturned = result.name;\n    getEmployees(employerreturned);\n  };\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  const names = employees.map(function (employee) {\n    return employee.name;\n  });\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n  const getEmployees = async (employer) => {\n    let calltask =\n      \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n    calltask = calltask + \"employerName=\" + employer;\n    let callresult = await (await fetch(calltask)).json();\n    console.log(callresult.body);\n    setEmployees(callresult.body);\n  };\n  const [personName, setPersonName] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [people, setPeople] = useState();\n  const [description, setDescription] = useState();\n  const [employer, setEmployer] = useState([]);\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\n            Add New Task\n          </Typography>\n          <Typography variant=\"body2\">\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n              New Task\n            </Button>\n            <BootstrapDialog\n              onClose={handleClose}\n              aria-labelledby=\"customized-dialog-title\"\n              open={open}\n            >\n              <BootstrapDialogTitle\n                id=\"customized-dialog-title\"\n                onClose={handleClose}\n              >\n                Create a New Task\n              </BootstrapDialogTitle>\n              <DialogContent dividers>\n                <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                  <TextField\n                    value={task}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"task\"\n                    label=\"Task Name\"\n                    name=\"task\"\n                    autoComplete=\"task\"\n                    autoFocus\n                    onChange={(e) => setTask(e.target.value)}\n                  />\n                  <TextField\n                    value={description}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"description\"\n                    label=\"Task Description\"\n                    name=\"description\"\n                    autoComplete=\"description\"\n                    autoFocus\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                  {console.log(employees)}\n                  <FormControl\n                    required\n                    fullwidth\n                    sx={{\n                      ml: 0,\n                      mt: 2,\n                      width: 568,\n                    }}\n                  >\n                    <InputLabel id=\"demo-multiple-name-label\">\n                      Employees Assigned\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-multiple-name-label\"\n                      id=\"demo-multiple-name\"\n                      multiple\n                      value={personName}\n                      onChange={handleChange}\n                      input={<OutlinedInput label=\"Name\" />}\n                      MenuProps={MenuProps}\n                    >\n                      {names.length != 0 ? (\n                        names.map((name) => (\n                          <MenuItem\n                            key={name}\n                            value={name}\n                            style={getStyles(name, personName, theme)}\n                          >\n                            {name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        <div>loading...</div>\n                      )}\n                    </Select>\n                  </FormControl>\n                  {console.log(personName)}\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  autoFocus\n                  onClick={() => {\n                    console.log(task);\n                    personName.length == 0 ||\n                    task === undefined ||\n                    description === undefined ||\n                    employername === undefined\n                      ? alert(\"please complete all required fields\")\n                      : handleSubmit(\n                          task,\n                          description,\n                          employername,\n                          personName\n                        );\n                    handleClose();\n                  }}\n                >\n                  Create Task\n                </Button>\n              </DialogActions>\n            </BootstrapDialog>\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\n//import subtaskSubmit from \"./subtasksubmit\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateSubtask({\n  setIsupdated,\n  isUpdated,\n  maintask,\n  people,\n}) {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  const [personName, setPersonName] = React.useState([]);\n  const names = people;\n  console.log(names);\n  const theme = useTheme();\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n    console.log(personName);\n  };\n  let localerror = -2;\n\n  const [feedback, setFeedback] = useState(-2);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [description, setDescription] = useState();\n  const [goal, setGoal] = useState();\n  const [employername, setEmployername] = useState();\n  const { user } = useAuth();\n  const FindUserType = async (email) => {\n    let call = \"/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployername(result.name);\n  };\n\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n  const subtaskSubmit = async (\n    subTaskName,\n    subTaskDesc,\n    goal,\n    mainTaskName,\n    employerName,\n    workerArray\n  ) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    console.log(workerArray);\n    let call = \"https://businessaide-backend.herokuapp.com/createSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\"; // do this for each parameter you want to send\n    call = call + \"subTaskDesc=\" + subTaskDesc + \"&\";\n    call = call + \"goal=\" + goal + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"workerArray=\" + workerArray;\n    let result = await (await fetch(call)).json();\n    setFeedback(result);\n    localerror = result;\n  };\n  //useEffect(()=>{\n  //console.log(props.people)\n  //setNames(props.people);\n  // },[])\n  return (\n    <div>\n      <span style={{ color: \"white\" }}> hahahahahahaa </span>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 633,\n        }}\n      >\n        New Subtask\n      </Button>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Create a New Subtask\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={task}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"task\"\n              label=\"Task Name\"\n              name=\"task\"\n              autoComplete=\"task\"\n              autoFocus\n              onChange={(e) => setTask(e.target.value)}\n            />\n            <TextField\n              value={description}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"description\"\n              label=\"Task Description\"\n              name=\"description\"\n              autoComplete=\"description\"\n              autoFocus\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <FormControl required fullwidth sx={{ ml: 0, mt: 2, width: 568 }}>\n              <InputLabel id=\"demo-multiple-name-label\">\n                Employees Assigned\n              </InputLabel>\n              <Select\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<OutlinedInput label=\"Name\" />}\n                MenuProps={MenuProps}\n              >\n                {names.length === 0\n                  ? \"loading\"\n                  : names.map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        style={getStyles(name, personName, theme)}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n              </Select>\n            </FormControl>\n            {console.log(personName)}\n            <TextField\n              InputProps={{\n                inputProps: { min: 1 },\n              }}\n              value={goal}\n              type=\"number\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"goal\"\n              label=\"Task Goal\"\n              id=\"goal\"\n              onChange={(e) =>\n                e.target.value > 0\n                  ? setGoal(e.target.value)\n                  : alert(\"please enter a positive integer\")\n              }\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              personName.length == 0 ||\n              task == undefined ||\n              description == undefined ||\n              goal === undefined ||\n              employername === undefined\n                ? alert(\"please complete all required fields\")\n                : subtaskSubmit(\n                    task,\n                    description,\n                    goal,\n                    maintask,\n                    employername,\n                    personName\n                  );\n              console.log(task);\n              console.log(personName);\n              console.log(feedback);\n              feedback === -1\n                ? alert(\"the employee is not found\")\n                : console.log(\"subtask added\");\n              handleClose();\n            }}\n          >\n            Create Task\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import { db } from \"../firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst taskCollectionRef = collection(db, \"employers/adam jerry/tasks\");\nclass TaskDataService {\n  addTask = (newTask) => {\n    return addDoc(taskCollectionRef, newTask);\n  };\n\n  deleteTask = (id) => {\n    const employeeDoc = doc(db, \"employers\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLTask = () => {\n    return getDocs(taskCollectionRef);\n  };\n\n  printRef = () => {\n    return taskCollectionRef;\n  };\n\n  getTask = (id) => {\n    const EmployeeDoc = doc(db, \"employers\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new TaskDataService();\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./progressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport CreateTask from \"./createtask\";\nimport CreateSubtask from \"./createsubtask\";\nimport TaskDataService from \"./taskserver\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function OutlinedCard() {\n  window.onload = function () {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  var username;\n  var task = [];\n  const { user } = useAuth();\n  const [employerName, setEmployername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result.name;\n    setEmployername(result.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/displayTask/?\";\n    call2 = call2 + \"employerName=\" + username;\n    let result2 = await (await fetch(call2)).json();\n    for (let i = 0; i < result2.body.length; i++) {\n      task[i] = result2.body[i];\n      setTasks((tasks) => [...tasks, result2.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + username;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n\n  const displayTask = async (employerName) => {\n    let call = \"https://businessaide-backend.herokuapp.com/displayTask/?\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    for (let i = 0; i < result.body.length; i++) {\n      task[i] = result.body[i];\n      setTasks((tasks) => [...tasks, result.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask =\n        \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + employerName;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n  /* const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n */\n\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n\n  //useEffect(() => {\n  //console.log(task.length);\n  //for (let i = 0; i < task.length; i++) {\n  // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n  //}\n  //}, []);\n\n  //useEffect(()=>{\n  // console.log(tasks);\n\n  //}, [tasks]);\n\n  useEffect(() => {\n    console.log(tasks);\n    console.log(progress);\n  }, [tasks]);\n\n  if (tasks.length === null) {\n    return <div>loading...</div>;\n  }\n  return tasks === [] ? (\n    <div>loading...</div>\n  ) : (\n    <div>\n      <h1>Task Page</h1>\n\n      <Grid\n        container\n        rowSpacing={20}\n        columns={12}\n        columnSpacing={{\n          xs: 2,\n          sm: 2,\n          md: 3,\n        }}\n      >\n        {tasks === [] ? (\n          <h2>loading...</h2>\n        ) : (\n          tasks.map((doc, index) => {\n            return (\n              <Grid item xs={3}>\n                <Card sx={{ maxWidth: 345 }}>\n                  <CardContent>\n                    <Typography\n                      sx={{\n                        fontSize: 20,\n                      }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      Current Task\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {doc ? doc : \"loading\"}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {progress[index] ? (\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={Math.round((progress[index] / 1) * 100)}\n                        />\n                      ) : (\n                        <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />\n                      )}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link\n                      to=\"/task/singletask\"\n                      state={doc}\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"blue\",\n                      }}\n                    >\n                      View Task\n                    </Link>\n                    <span\n                      style={{\n                        color: \"white\",\n                      }}\n                    >\n                      hahahaha\n                    </span>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItem from \"@mui/material/ListItem\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Slide from \"@mui/material/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  console.log(props.feedback);\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 555,\n        }}\n      >\n        View Feedback from Employees\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar sx={{ position: \"relative\" }}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n              Feedback\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <List>\n          {props.feedback.map((doc) => {\n            return (\n              <div>\n                <ListItem button>\n                  <ListItemText\n                    primary={doc.feedback}\n                    secondary={doc.employee}\n                  />\n                </ListItem>\n                <Divider />\n              </div>\n            );\n          })}\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./progressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Divider, Grid, List, ListItem, TextField } from \"@mui/material\";\nimport CreateSubtask from \"./createsubtask\";\nimport FullScreenDialog from \"./viewfeedback\";\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function BasicCard(props) {\n  const [feedback, setFeedback] = useState([]);\n  const [subtasks, setSubTasks] = useState([]);\n  let subtasktemp = [];\n  const [employername, setEmployername] = useState();\n  const [description, setDescription] = useState([]);\n  const [mainworkers, setMainWorkers] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  const [isUpdated, setIsupdated] = useState(false);\n  var tempprogress = 0;\n  var progresstemp = [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    setEmployername(result1.name);\n    console.log(username);\n    let call = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + username;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainProgress(result.body);\n    console.log(mainprogress);\n  };\n\n  const calculateprogress = (subtasks, status, progress, goal) => {\n    var subTaskProgress = 0;\n    var subTaskCounter = 0;\n    tempprogress = mainprogress;\n    for (let i = 0; i < subtasks.length; i++) {\n      if (status[i] == \"finished\") {\n        subTaskProgress += 1;\n        subTaskCounter += 1;\n      } else {\n        subTaskProgress += progress[i] / goal[i];\n        subTaskCounter += 1;\n      }\n    }\n    tempprogress = subTaskProgress / subTaskCounter;\n    if (tempprogress === 0) {\n      tempprogress = 0;\n    }\n    setMainProgress(tempprogress);\n  };\n\n  var username;\n  const viewMainTask = async (mainTaskName, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    setEmployername(result1.name);\n    viewMainTaskFeedback(mainTaskName, result1.name);\n    let call = \"https://businessaide-backend.herokuapp.com/getMainTaskData/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + username;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainDescription(result.body.description);\n    setMainStatus(result.body.status);\n    setSubTasks(result.body.subtasks);\n    setMainWorkers(result.body.workers);\n    subtasktemp = result.body.subtasks;\n    console.log(subtasktemp);\n    setDescription([]);\n    setWorkers([]);\n    setGoal([]);\n    setStatus([]);\n    setProgress([]);\n    for (let i = 0; i < subtasktemp.length; i++) {\n      let call = \"https://businessaide-backend.herokuapp.com/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subtasktemp[i] + \"&\";\n      call = call + \"mainTaskName=\" + maintask + \"&\";\n      call = call + \"employerName=\" + result1.name;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [\n        ...description,\n        result.body.description,\n      ]);\n      setWorkers((workers) => [...workers, result.body.workers]);\n      setGoal((goal) => [...goal, result.body.goal]);\n      setProgress((progress) => [...progress, result.body.progress]);\n      setStatus((status) => [...status, result.body.status]);\n      console.log(subtasks);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      viewMainTask(maintask, user.email);\n      mainTaskProgress(maintask, user.email);\n    }\n  }, [isUpdated]);\n\n  useEffect(() => {\n    console.log(mainprogress);\n    console.log(mainworkers);\n  }, [mainprogress, mainworkers]);\n\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n\n  /*useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n      \n    };\n   // for (let i = 0; i < subtasks.length; i++) {\n     // viewSubTask(subtasks[i],maintask,\"adam jerry\")\n      \n    //}\n    //console.log(progress);\n    \n  }, [maintask, subtasks]);*/\n\n  useEffect(() => {\n    //progresstemp = progress;\n    console.log(progress);\n  }, [progress]);\n\n  const viewMainTaskFeedback = async (mainTaskName, employerName) => {\n    let call =\n      \"https://businessaide-backend.herokuapp.com/viewMainTaskFeedback/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setFeedback(result.body);\n\n    //setProgress(progress[index]+1);\n  };\n  const subTaskProgress = async (\n    subTaskName,\n    value,\n    mainTaskName,\n    employerName,\n    index\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n\n    //setProgress(progress[index]+1);\n  };\n\n  const completeSubTask = async (\n    subTaskName,\n    mainTaskName,\n    employerName,\n    email\n  ) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n    viewMainTask(mainTaskName, email);\n    mainTaskProgress(mainTaskName, email);\n  };\n\n  const completeMainTask = async (mainTaskName, employerName, email) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    console.log(email);\n    let call = \"https://businessaide-backend.herokuapp.com/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    viewMainTask(mainTaskName, email);\n    mainTaskProgress(mainTaskName, email);\n  };\n\n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Workers Allocated\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainworkers.length === 0\n            ? \"loading\"\n            : mainworkers.map((worker) => worker + \"  \")}\n        </Typography>\n        <ProgressBar\n          bgcolor={\"#1976d2\"}\n          completed={\n            mainprogress > 1 ? 100 : Math.round((mainprogress / 1) * 100)\n          }\n        />\n        <Button\n          onClick={() => {\n            completeMainTask(maintask, employername, user.email);\n          }}\n        >\n          Mark as Finished\n        </Button>\n        {mainworkers.length === 0 ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <List>\n              <ListItem>\n                <CreateSubtask\n                  setIsupdated={setIsupdated}\n                  isUpdated={isUpdated}\n                  maintask={maintask}\n                  people={mainworkers}\n                />\n              </ListItem>\n              <ListItem>\n                <FullScreenDialog feedback={feedback} />\n              </ListItem>\n            </List>\n          </div>\n        )}\n        <div style={{ color: \"white\" }}>hahahah</div>\n        <Grid>\n          {subtasks.map((task, index) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>{task}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    <div>Task Description: {description[index]}</div>\n                    <div>workers allocated: {workers[index]}</div>\n                    <div>goal: {goal[index]}</div>\n\n                    <div>\n                      {\"progress\"}\n                      <ProgressBar\n                        bgcolor={\"#6a1b9a\"}\n                        completed={\n                          (progress[index] / goal[index]) * 100 >= 100\n                            ? 100\n                            : (progress[index] / goal[index]) * 100\n                        }\n                      ></ProgressBar>\n                    </div>\n                    <div>\n                      <TextField\n                        value={Number(newValue)}\n                        type=\"text\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Increase New Progress by\"\n                        autoFocus\n                        onChange={(e) => {\n                          setnewValue(e.target.value);\n                        }}\n                      />\n\n                      <Button\n                        onClick={() => {\n                          setProgress((existingItems) => {\n                            return [\n                              ...existingItems.slice(0, index),\n                              existingItems[index] + Number(newValue),\n                              ...existingItems.slice(index + 1),\n                            ];\n                          });\n                          console.log(username);\n                          subTaskProgress(\n                            task,\n                            newValue,\n                            maintask,\n                            employername,\n                            index\n                          );\n                          progresstemp = progress;\n                          progresstemp[index] += Number(newValue);\n                          {\n                            if (progresstemp[index] >= goal[index]) {\n                              setStatus((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  \"finished\",\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n                            }\n                          }\n                          calculateprogress(\n                            subtasks,\n                            status,\n                            progresstemp,\n                            goal\n                          );\n                          setMainProgress(tempprogress);\n                          console.log(tempprogress);\n\n                          // mainTaskProgress(maintask, \"adam jerry\")\n                        }}\n                      >\n                        Increase Progress\n                      </Button>\n                    </div>\n                    <div>status: {status[index]}</div>\n                  </Typography>\n                  <Button\n                    onClick={() => {\n                      completeSubTask(task, maintask, employername, user.email);\n                      setStatus((existingItems) => {\n                        return [\n                          ...existingItems.slice(0, index),\n                          \"finished\",\n                          ...existingItems.slice(index + 1),\n                        ];\n                      });\n                    }}\n                  >\n                    Mark as Finished\n                  </Button>\n                </AccordionDetails>\n              </Accordion>\n            );\n          })}\n        </Grid>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport InboxIcon from \"@mui/icons-material/MoveToInbox\";\nimport DraftsIcon from \"@mui/icons-material/Drafts\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport StarBorder from \"@mui/icons-material/StarBorder\";\nimport { useEffect } from \"react\";\nimport { db } from \"../firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"../employeeserver\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { IconButton } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\nimport { TextField } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  arrayRemove,\n} from \"firebase/firestore\";\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Showpayroll = (props) => {\n  let [employeenames, setEmployeenames] = useState([]);\n  const [rate, setRate] = useState(0);\n  const [hourly, setHourly] = useState(0);\n  const [days, setDays] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n  const [deductions, setDeductions] = useState(0);\n  const [overall, setOverall] = useState(0);\n\n  let feedback;\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  let totalsalary = 0;\n  const [total, setTotal] = useState(0);\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    getEmployees(props.name);\n  }, []);\n  useEffect(() => {\n    console.log(employees);\n  }, [employees]);\n  const sendPayroll = async (\n    dailySalary,\n    daysAttended,\n    overtimeHourlyRate,\n    overtimeHours,\n    deductions,\n    overallSalary,\n    employeeName,\n    employerName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendPayroll/?\";\n    call = call + \"dailySalary=\" + dailySalary + \"&\";\n    call = call + \"daysAttended=\" + daysAttended + \"&\";\n    call = call + \"overtimeHourlyRate=\" + overtimeHourlyRate + \"&\";\n    call = call + \"overtimeHours=\" + overtimeHours + \"&\";\n    call = call + \"deductions=\" + deductions + \"&\";\n    call = call + \"overallSalary=\" + overallSalary + \"&\";\n    call = call + \"employeeName=\" + employeeName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    feedback = result;\n    alert(feedback.reason);\n  };\n  const getEmployees = async (employerName) => {\n    let call =\n      \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    let result = await (await fetch(call)).json();\n    console.log(result.body);\n    setEmployees(\n      result.body.map((doc) => ({\n        ...doc,\n        id: doc.name,\n      }))\n    );\n    setEmployeenames(\n      result.body.map((doc) => ({\n        ...doc.id,\n        id: doc.name,\n      }))\n    );\n  };\n\n  return (\n    <List\n      sx={{\n        width: \"100%\",\n        maxWidth: 1600,\n        bgcolor: \"background.paper\",\n      }}\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          Payroll for the Month\n        </ListSubheader>\n      }\n    >\n      <ListItemButton>\n        <ListItemIcon>\n          <SendIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            employees.length === 0\n              ? \"\"\n              : \"Total salary for the month: \" +\n                employees\n                  .map((element) => Number(element.overallSalary))\n                  .reduce((a, b) => a + b, 0)\n          }\n        />\n      </ListItemButton>\n      {employees.length === 0\n        ? \"\"\n        : employees.map((doc) => {\n            console.log(doc);\n            return (\n              <Link\n                to={\"/Individual/\" + doc.name}\n                style={{\n                  textDecoration: \"none\",\n                  color: \"black\",\n                }}\n                key={doc}\n              >\n                <ListItemButton key={doc.name}>\n                  <ListItemIcon>\n                    <SendIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={doc.name}\n                    secondary={\"salary for the month: \" + doc.overallSalary}\n                  />\n                </ListItemButton>\n              </Link>\n            );\n          })}\n    </List>\n  );\n};\n\nexport default Showpayroll;\n","import { Component } from \"react\";\nimport { useAuth } from \"./useAuth\";\nimport { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/employeesignup.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport EmployeesList from \"./viewemployees\";\nimport Welcome from \"./Welcome\";\nimport { useState, useEffect } from \"react\";\nimport Individual from \"./Individual\";\nimport EmployeeDataService from \"./employeeserver\";\nimport OutlinedCard from \"./task/displaytask\";\nimport BasicCard from \"./task/singletask\";\nimport CreateTask from \"./task/createtask\";\nimport Showpayroll from \"./payroll/payroll\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nfunction Home(props) {\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const { signOutWithGoogle } = useAuth();\n  const auth = getAuth();\n  const [employeeId, setEmployeeId] = useState(\"\");\n\n  const getEmployeeIdHandler = (id) => {\n    console.log(\"The ID of document to be edited: \", id);\n    setEmployeeId(id);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                BusinessAide\n              </Link>\n            </Typography>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/payroll/payroll\"\n              >\n                Payroll\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/viewemployees\"\n              >\n                Employees\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/displaytask\"\n              >\n                View Tasks\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/createtask\"\n              >\n                Add Tasks\n              </Link>\n            </Button>\n            <Button\n              onClick={signOutWithGoogle}\n              variant=\"outlined\"\n              sx={{\n                color: \"yellow\",\n                backgroundColor: \"orange\",\n                borderColor: \"green\",\n              }}\n            >\n              sign out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Routes>\n        <Route path=\"/\" element={<Welcome />} />\n        <Route\n          path=\"/viewemployees/*\"\n          element={<EmployeesList getEmployeeId={getEmployeeIdHandler} />}\n        />\n        <Route path=\"/Individual/:id\" element={<Individual />} />\n        <Route path=\"/task/displaytask\" element={<OutlinedCard />} />\n        <Route\n          path=\"/task/singletask\"\n          element={<BasicCard employName={props.name} />}\n        />\n        <Route path=\"/task/createtask\" element={<CreateTask />} />\n        <Route\n          path=\"/payroll/payroll\"\n          element={<Showpayroll name={props.name} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default Home;\n\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nexport default function Home() {\n  return (\n    <div>\n      <h1>Welcome to BusinessAide</h1>\n      <ListItem>\n        <Card>\n          <ListItemIcon>\n            <SendIcon />\n          </ListItemIcon>\n          <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n            Please go to Login page to sign in after registration\n          </Typography>\n        </Card>\n      </ListItem>\n      <List>\n        <ListItem>\n          <Card>\n            <ListItemIcon>\n              <SendIcon />\n            </ListItemIcon>\n            <Typography\n              sx={{\n                fontFamily: '\"Segoe UI\"',\n              }}\n              variant=\"h6\"\n            >\n              To register as an employer, please create your secret code and\n              advise your employees to key in the same secret code when they\n              sign up\n            </Typography>\n          </Card>\n        </ListItem>\n        <ListItem>\n          <Card>\n            <ListItemIcon>\n              <SendIcon />\n            </ListItemIcon>\n            <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n              To register as an employee, please key in the secret code your\n              employer gives you\n            </Typography>\n          </Card>\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\nimport { useNavigate } from \"react-router-dom\";\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const { user } = useAuth();\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [secretcode, setSecretCode] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [workExp, setWorkExp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNum, setphoneNum] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [loginerror, setError] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n  const { signOutWithGoogle } = useAuth();\n  async function register(event) {\n    event.preventDefault();\n\n    if (firstName == \"\") {\n      return alert(\"Please enter a full name\");\n    } else if (username === \"\") {\n      alert(\"please enter an email\");\n    } else if (password !== retypepassword) {\n      alert(\"passwords do not match\");\n    } else {\n      // Create a new user with Firebase\n      let call = \"https://businessaide-backend.herokuapp.com/SendEmployer/?\";\n      call = call + \"firstName=\" + firstName + \"&\";\n      call = call + \"lastName=\" + lastName + \"&\";\n      call = call + \"secretCode=\" + secretcode;\n      await registerWithEmailAndPassword(\n        firstName + \" \" + lastName,\n        username,\n        password\n      )\n        .then((userAuth) => {\n          // Update the newly created user with a display name and a picture\n          updateProfile(userAuth.user, {\n            displayName: firstName + \" \" + lastName,\n          })\n            .then(\n              // Dispatch the user information for persistence in the redux state\n              dispatch(\n                login({\n                  email: userAuth.user.email,\n                  uid: userAuth.user.uid,\n                  displayName: firstName + \" \" + lastName,\n                })\n              )\n            )\n            .catch((error) => {\n              console.log(error);\n              setError(error);\n            });\n        })\n        .catch((err) => {\n          // alert(err);\n        })\n        .then(signOutWithGoogle);\n      navigate(\"/\");\n      await (await fetch(call)).json();\n    }\n  }\n\n  /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              register(e);\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={firstName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"firstname\"\n              label=\"Firstname\"\n              id=\"firstname\"\n              autoComplete=\"firstname\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <TextField\n              value={lastName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"lastname\"\n              label=\"Lastname\"\n              id=\"lastname\"\n              autoComplete=\"lastname\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={secretcode}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"secretcode\"\n              label=\"Secretcode\"\n              id=\"secretcode\"\n              onChange={(e) => setSecretCode(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              value={retypepassword}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"retypepassword\"\n              label=\"Re-enter Password\"\n              type=\"password\"\n              id=\"retypepassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setRetypepassword(e.target.value)}\n            />\n            <Typography component=\"h3\" variant=\"h5\">\n              {loginerror}\n            </Typography>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default function EmployerSignup() {\n  return <Submit></Submit>;\n}\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/employeesignup.js\";\nimport Home from \"./Home.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport \"./NavBar.css\";\nimport EmployerSignup from \"./components/signup/employersignup.js\";\n\nexport default function ButtonAppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n              BusinessAide\n            </Link>\n          </Typography>\n          <Button color=\"inherit\"></Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/employersignup\"\n            >\n              Employer Register\n            </Link>\n          </Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/employeesignup\"\n            >\n              Employee Register\n            </Link>\n          </Button>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              color: \"yellow\",\n              backgroundColor: \"orange\",\n              borderColor: \"green\",\n            }}\n          >\n            {\" \"}\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signin/signin\"\n            >\n              Login\n            </Link>\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Routes>\n        <Route\n          path=\"/components/signup/employersignup\"\n          element={<EmployerSignup />}\n        />\n        <Route path=\"/\" element={<Home />} />\n        <Route\n          path=\"components/signup/employeesignup\"\n          element={<CreateForm />}\n        />\n        <Route path=\"components/signin/signin\" element={<SignInUser />} />\n      </Routes>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useEffect } from \"react\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormLabel from \"@mui/material/FormLabel\";\n//import subtaskSubmit from \"./subtasksubmit\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateFeedback(props) {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  const [feedback, setFeedback] = React.useState();\n\n  const theme = useTheme();\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let localerror = -2;\n\n  const [returned, setReturned] = useState(-2);\n  const [open, setOpen] = React.useState(false);\n  const [anonymousCheck, setAnonymousCheck] = useState(true);\n  const handleChange = (event) => {\n    setAnonymousCheck(event.target.value);\n  };\n  const feedbackSubmit = async (\n    employeeName,\n    employerName,\n    feedback,\n    anonymousCheck,\n    mainTaskName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendFeedback/?\";\n    call = call + \"employeeName=\" + employeeName + \"&\"; // do this for each parameter you want to send\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"feedback=\" + feedback + \"&\";\n    call = call + \"anonymousCheck=\" + anonymousCheck + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName;\n    let result = await (await fetch(call)).json();\n    setReturned(result.body);\n  };\n  //useEffect(()=>{\n  //console.log(props.people)\n  //setNames(props.people);\n  // },[])\n  return (\n    <div>\n      <span style={{ color: \"white\" }}> hahahahahahaa </span>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 617,\n        }}\n      >\n        Create Feedback\n      </Button>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        fullWidth={true}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Create a Feedback\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={feedback}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"feedback\"\n              label=\"Feedback\"\n              name=\"feedback\"\n              autoComplete=\"feedback\"\n              autoFocus\n              onChange={(e) => setFeedback(e.target.value)}\n            />\n          </Box>\n          <FormControl>\n            <FormLabel id=\"demo-controlled-radio-buttons-group\">\n              Anonymity\n            </FormLabel>\n            <RadioGroup\n              aria-labelledby=\"demo-controlled-radio-buttons-group\"\n              name=\"controlled-radio-buttons-group\"\n              value={anonymousCheck}\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value={true}\n                control={<Radio />}\n                label=\"Anonymous\"\n              />\n              <FormControlLabel\n                value={false}\n                control={<Radio />}\n                label=\"Non-anonymous\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              feedback === undefined ||\n              anonymousCheck === undefined ||\n              props.employeeName === undefined ||\n              props.employerName === [] ||\n              props.mainTaskName === undefined\n                ? alert(\"please complete all required fields\")\n                : feedbackSubmit(\n                    props.employeeName,\n                    props.employerName,\n                    feedback,\n                    anonymousCheck,\n                    props.mainTaskName\n                  );\n              //console.log(returned);\n              //</DialogActions>returned === -1\n              //</BootstrapDialog>? alert(\"the employee is not found\")\n              //: console.log(\"subtask added\");\n              handleClose();\n            }}\n          >\n            Create Feedback\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./employeeprogressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport { Grid, ListItem, TextField } from \"@mui/material\";\nimport CreateSubtask from \"../task/createsubtask\";\nimport CreateFeedback from \"./employeefeedback\";\nimport { List } from \"@mui/material\";\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function Employeesingletask(props) {\n  const [subtasks, setSubTasks] = useState([]);\n  let subtasktemp = [];\n  const [description, setDescription] = useState([]);\n  const [mainworkers, setMainWorkers] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  var employer;\n  var username;\n  var tempprogress = 0;\n  var progresstemp = [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  const [employerName, setEmployername] = useState();\n  const [employeeName, setEmployeename] = useState();\n  const [isUpdated, setIsupdated] = useState(false);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    //setEmployeename(result1.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n    call2 = call2 + \"employeeName=\" + result1.name;\n    let result2 = await (await fetch(call2)).json();\n    employer = result2.employerName;\n    let call = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + employer;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainProgress(result.body);\n    console.log(mainprogress);\n  };\n\n  const calculateprogress = (subtasks, status, progress, goal) => {\n    var subTaskProgress = 0;\n    var subTaskCounter = 0;\n    tempprogress = mainprogress;\n    for (let i = 0; i < subtasks.length; i++) {\n      if (status[i] == \"finished\") {\n        subTaskProgress += 1;\n        subTaskCounter += 1;\n      } else {\n        subTaskProgress += progress[i] / goal[i];\n        subTaskCounter += 1;\n      }\n    }\n    tempprogress = subTaskProgress / subTaskCounter;\n    if (tempprogress === 0) {\n      tempprogress = 0;\n    }\n    setMainProgress(tempprogress);\n  };\n\n  useEffect(() => {\n    const viewMainTask = async (mainTaskName, email) => {\n      /* let call1 = \"/findUserType/?\";\n      call1 = call1 + \"email=\" + email;\n      let result1 = await (await fetch(call1)).json();\n      console.log(result1);\n      //setUsertype(result.body);\n      //setUsername(result.name);\n      username = result1.name;\n      setEmployeename(result1.name);*/\n      let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n      call1 = call1 + \"email=\" + email;\n      let result1 = await (await fetch(call1)).json();\n      console.log(result1);\n      //setUsertype(result.body);\n      //setUsername(result.name);\n      username = result1.name;\n      setEmployeename(result1.name);\n      //setEmployeename(result1.name);\n      let call2 =\n        \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n      call2 = call2 + \"employeeName=\" + result1.name;\n      let result2 = await (await fetch(call2)).json();\n      employer = result2.employerName;\n      setEmployername(result2.employerName);\n      console.log(employer);\n      let call = \"https://businessaide-backend.herokuapp.com/getMainTaskData/?\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employer;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      setMainDescription(result.body.description);\n      setMainStatus(result.body.status);\n      setSubTasks(result.body.subtasks);\n      setMainWorkers(result.body.workers);\n      subtasktemp = result.body.subtasks;\n      console.log(subtasktemp);\n      setDescription([]);\n      setWorkers([]);\n      setGoal([]);\n      setStatus([]);\n      setProgress([]);\n      for (let i = 0; i < subtasktemp.length; i++) {\n        let call =\n          \"https://businessaide-backend.herokuapp.com/getSubTaskData/?\";\n        call = call + \"subTaskName=\" + subtasktemp[i] + \"&\";\n        call = call + \"mainTaskName=\" + maintask + \"&\";\n        call = call + \"employerName=\" + employer;\n        let result = await (await fetch(call)).json();\n        console.log(result);\n        //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n        setDescription((description) => [\n          ...description,\n          result.body.description,\n        ]);\n        setWorkers((workers) => [...workers, result.body.workers]);\n        setGoal((goal) => [...goal, result.body.goal]);\n        setProgress((progress) => [...progress, result.body.progress]);\n        setStatus((status) => [...status, result.body.status]);\n        console.log(subtasks);\n      }\n    };\n    if (user) {\n      viewMainTask(maintask, user.email);\n      mainTaskProgress(maintask, user.email);\n    }\n  }, [isUpdated]);\n\n  useEffect(() => {\n    console.log(mainprogress);\n    console.log(mainworkers);\n  }, [mainprogress, mainworkers]);\n\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n\n  /*useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n      \n    };\n   // for (let i = 0; i < subtasks.length; i++) {\n     // viewSubTask(subtasks[i],maintask,\"adam jerry\")\n      \n    //}\n    //console.log(progress);\n    \n  }, [maintask, subtasks]);*/\n\n  useEffect(() => {\n    //progresstemp = progress;\n    console.log(progress);\n  }, [progress]);\n  const subTaskProgress = async (\n    subTaskName,\n    value,\n    mainTaskName,\n    employerName,\n    index\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n\n    //setProgress(progress[index]+1);\n  };\n\n  const completeSubTask = async (subTaskName, mainTaskName, employerName) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  const completeMainTask = async (mainTaskName, employerName) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Workers Allocated\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainworkers.length === 0\n            ? \"loading\"\n            : mainworkers.map((worker) => worker + \"  \")}\n        </Typography>\n        <ProgressBar\n          bgcolor={\"#1976d2\"}\n          completed={\n            mainprogress > 1 ? 100 : Math.round((mainprogress / 1) * 100)\n          }\n        />\n        <Button\n          onClick={() => {\n            completeMainTask(maintask, employerName);\n          }}\n        >\n          Mark as Finished\n        </Button>\n        {mainworkers.length === 0 ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <List>\n              <ListItem></ListItem>\n              <ListItem>\n                <CreateFeedback\n                  employerName={employerName}\n                  employeeName={employeeName}\n                  mainTaskName={maintask}\n                />\n              </ListItem>\n            </List>\n          </div>\n        )}\n        <div style={{ color: \"white\" }}>hahahah</div>\n        <Grid>\n          {workers.length !== 0 ? (\n            subtasks.map((task, index) => {\n              let choose = false;\n              console.log(index);\n              console.log(workers[index]);\n              if (Array.isArray(workers[index])) {\n                for (let i = 0; i < workers[index].length; i++) {\n                  if (workers[index][i] == employeeName) {\n                    choose = true;\n                  }\n                }\n              } else {\n                if (workers[index] === employeeName) {\n                  choose = true;\n                }\n              }\n\n              console.log(choose);\n              return (\n                <Accordion>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography>{task}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography>\n                      {console.log(workers)}\n                      <div>Task Description: {description[index]}</div>\n                      <div>workers allocated: {workers[index]}</div>\n                      <div>goal: {goal[index]}</div>\n                      <div>status: {status[index]}</div>\n                      <div>\n                        {\"progress\"}\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={\n                            (progress[index] / goal[index]) * 100 >= 100\n                              ? 100\n                              : (progress[index] / goal[index]) * 100\n                          }\n                        ></ProgressBar>\n                      </div>\n                    </Typography>\n                    <div>\n                      {choose ? (\n                        <div>\n                          <TextField\n                            value={Number(newValue)}\n                            type=\"text\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            label=\"Increase New Progress by\"\n                            autoFocus\n                            onChange={(e) => {\n                              setnewValue(e.target.value);\n                            }}\n                          />\n\n                          <Button\n                            onClick={() => {\n                              setProgress((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  existingItems[index] + Number(newValue),\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n\n                              subTaskProgress(\n                                task,\n                                newValue,\n                                maintask,\n                                employerName,\n                                index\n                              );\n                              progresstemp = progress;\n                              progresstemp[index] += Number(newValue);\n                              {\n                                if (progresstemp[index] >= goal[index]) {\n                                  setStatus((existingItems) => {\n                                    return [\n                                      ...existingItems.slice(0, index),\n                                      \"finished\",\n                                      ...existingItems.slice(index + 1),\n                                    ];\n                                  });\n                                }\n                              }\n                              calculateprogress(\n                                subtasks,\n                                status,\n                                progresstemp,\n                                goal\n                              );\n                              setMainProgress(tempprogress);\n                              console.log(tempprogress);\n\n                              // mainTaskProgress(maintask, \"adam jerry\")\n                            }}\n                          >\n                            Increase Progress\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              completeSubTask(task, maintask, employerName);\n\n                              setStatus((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  \"finished\",\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n                            }}\n                          >\n                            Mark as Finished\n                          </Button>\n                        </div>\n                      ) : (\n                        <div>cannot edit this task</div>\n                      )}\n                    </div>\n                  </AccordionDetails>\n                </Accordion>\n              );\n            })\n          ) : (\n            <div></div>\n          )}\n        </Grid>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./employeeprogressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\nvar username;\n//const [employeeName, setEmployeename] = useState();\n//const [employerName, setEmployerName] = useState();\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n//const { user } = useAuth();\nexport default function Employeetasklist() {\n  window.onload = function () {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n  const { user } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  var task = [];\n  var employer;\n  const displayTask = async (email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    //setEmployeename(result1.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n    call2 = call2 + \"employeeName=\" + result1.name;\n    let result2 = await (await fetch(call2)).json();\n    employer = result2.employerName;\n    console.log(employer);\n    //setEmployerName(result2);\n    let call =\n      \"https://businessaide-backend.herokuapp.com/displayEmployeeTask/?\";\n    call = call + \"employeeName=\" + result1.name;\n    let result = await (await fetch(call)).json();\n    for (let i = 0; i < result.body.length; i++) {\n      task[i] = result.body[i];\n      setTasks((tasks) => [...tasks, result.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask =\n        \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + result2.employerName;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n  /* const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n */\n\n  useEffect(() => {\n    if (user) {\n      displayTask(user.email);\n    }\n  }, []);\n\n  //useEffect(() => {\n  //console.log(task.length);\n  //for (let i = 0; i < task.length; i++) {\n  // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n  //}\n  //}, []);\n\n  //useEffect(()=>{\n  // console.log(tasks);\n\n  //}, [tasks]);\n\n  useEffect(() => {\n    console.log(tasks);\n    console.log(progress);\n  }, [tasks]);\n\n  return tasks === [] ? (\n    <div>loading...</div>\n  ) : (\n    <div>\n      <h1>Task Page</h1>\n\n      <Grid\n        container\n        rowSpacing={20}\n        columns={12}\n        columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n      >\n        {tasks === [] ? (\n          <h2>loading...</h2>\n        ) : (\n          tasks.map((doc, index) => {\n            return (\n              <Grid item xs={3}>\n                <Card sx={{ maxWidth: 345 }}>\n                  <CardContent>\n                    <Typography\n                      sx={{ fontSize: 20 }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      Current Task\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {doc ? doc : \"loading\"}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {progress[index] ? (\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={Math.round((progress[index] / 1) * 100)}\n                        />\n                      ) : (\n                        <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />\n                      )}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link\n                      to=\"/employees/employeesingletask\"\n                      state={doc}\n                      style={{ textDecoration: \"none\", color: \"blue\" }}\n                    >\n                      View Task\n                    </Link>\n                    <span style={{ color: \"white\" }}>hahahaha</span>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport { createTheme } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nexport default function EmployeeWelcome() {\n  const theme = createTheme({\n    typography: {\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n    },\n  });\n\n  const auth = getAuth();\n  const user = auth.currentUser;\n  //const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n  // const docs = await getDocs(q);\n  const [username, setUsername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n  };\n  useEffect(() => {\n    FindUserType(user.email);\n  }, []);\n  //console.log(user.uid);\n  return username ? (\n    <ThemeProvider theme={theme}>\n      <div>\n        <h1>Welcome {username}!</h1>\n        <List>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography\n                sx={{\n                  fontFamily: '\"Segoe UI\"',\n                }}\n                variant=\"h6\"\n              >\n                To view, please go to the \"payroll\" page\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To view each individual task, please to go to \"view task\" page\n                and click on each of the task\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To increase the task progress, enter a number and click on\n                \"increase progress by\"\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To complete a main task/subtask, click on \"mark as complete\n                under the task\"\n              </Typography>\n            </Card>\n          </ListItem>\n        </List>\n      </div>\n    </ThemeProvider>\n  ) : (\n    <div>loading...</div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeDataService from \"../employeeserver\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { IconButton } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function Salary(props) {\n  const [employees, setEmployees] = useState([]);\n\n  const [open, setOpen] = React.useState(false);\n\n  let feedback;\n\n  useEffect(() => {\n    console.log(props.name);\n    getEmployees(props.name);\n  }, []);\n\n  const getEmployees = async (id) => {\n    const data = await EmployeeDataService.getEmployee(id);\n    console.log(\n      data._document.data.value.mapValue.fields.firstName.stringValue\n    );\n    setEmployees(data);\n  };\n\n  console.log(employees);\n\n  if (employees.length === 0) {\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  } else {\n    const employeename =\n      employees._document.data.value.mapValue.fields.firstName.stringValue +\n      \" \" +\n      employees._document.data.value.mapValue.fields.lastName.stringValue;\n    console.log(employeename + \" hello\" + employeename);\n    return (\n      <div className=\"list\" rowspacing={3}>\n        <div\n          style={{\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\n          }}\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n            alt=\"\"\n            height={200}\n            width={200}\n          />\n          <h1>\n            {\n              employees._document.data.value.mapValue.fields.firstName\n                .stringValue\n            }{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.lastName\n                .stringValue\n            }\n          </h1>\n        </div>\n        <div>\n          <h3>\n            Daily Salary:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.dailySalary\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Days Attended:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.daysAttended\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Overtime Hourly Rate:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overtimeHourlyRate\n                .stringValue\n            }\n          </h3>\n\n          <h3>\n            Overtime Hours:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overtimeHours\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Salary for the Month:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overallSalary\n                .stringValue\n            }\n          </h3>\n        </div>\n      </div>\n    );\n  }\n\n  //console.log(employees);\n}\n","import { Component } from \"react\";\nimport { useAuth } from \"../useAuth\";\nimport { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Welcome from \"../Welcome\";\nimport { useState, useEffect } from \"react\";\nimport Employeesingletask from \"./employeesingletask\";\nimport Employeetasklist from \"./employeedisplaytask\";\nimport EmployeeWelcome from \"./employeewelcome\";\nimport Salary from \"./salary\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nfunction EmployeeBar(props) {\n  console.log(props.name);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const { signOutWithGoogle } = useAuth();\n  const auth = getAuth();\n  const [employeeId, setEmployeeId] = useState(\"\");\n  const [username, setUsername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n  };\n\n  const getEmployeeIdHandler = (id) => {\n    console.log(\"The ID of document to be edited: \", id);\n    setEmployeeId(id);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                BusinessAide\n              </Link>\n            </Typography>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/salary\"\n              >\n                Payroll\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/employeedisplaytask\"\n              >\n                View Tasks\n              </Link>\n            </Button>\n            <Button onClick={signOutWithGoogle} color=\"inherit\">\n              sign out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Routes>\n        <Route path=\"/\" element={<EmployeeWelcome />} />\n        <Route\n          path=\"/employees/employeedisplaytask\"\n          element={<Employeetasklist />}\n        />\n        <Route\n          path=\"/employees/employeesingletask\"\n          element={<Employeesingletask />}\n        />\n        <Route\n          path=\"/employees/salary\"\n          element={<Salary name={props.name} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default EmployeeBar;\n","import \"./App.css\";\nimport { useAuth } from \"./useAuth\";\nimport Home from \"./display\";\nimport ButtonAppBar from \"./NavBar\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./redux/employee.feature\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { config as firebaseConfig } from \"./config\";\nimport userEvent from \"@testing-library/user-event\";\nimport { useState } from \"react\";\n\n//import HomePage from \"./components/signin/mainpage\";\nimport EmployeeBar from \"./employees/employeenavbar\";\n\nexport default function App() {\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setUsertype(result.body);\n    setUsername(result.name);\n  };\n\n  const { user } = useAuth();\n  const [usertype, setUsertype] = useState();\n  const [username, setUsername] = useState();\n  if (user) {\n    console.log(user.email);\n    FindUserType(user.email);\n  } else {\n  }\n  return (\n    <div className=\"App\">\n      {user ? (\n        usertype == \"employer\" ? (\n          <Home name={username} />\n        ) : (\n          <EmployeeBar name={username} />\n        )\n      ) : (\n        <ButtonAppBar />\n      )}\n    </div>\n  );\n}\n\n//(docs&&docs.docs[0].metadata._document.data.value.mapValue.fields.position.stringValue===\"employee\"? <div>hello</div>:\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./rootreducer\";\nimport userReducer from \"./employee.feature\";\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ProvideAuth } from \"./useAuth\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { getFirestore } from \"redux-firestore\";\nimport { getFirebase } from \"react-redux-firebase\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <ProvideAuth>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ProvideAuth>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}