{"version":3,"sources":["config.js","useAuth.js","components/signin/signin.js","redux/employee.feature.js","components/signup/employeesignup.js","firebaseini.js","employeeserver.js","Individual.js","cards.js","viewemployees.js","Welcome.js","task/progressbar.js","task/handlesubmit.js","task/createtask.js","task/createsubtask.js","task/taskserver.js","task/displaytask.js","task/viewfeedback.js","task/singletask.js","payroll/payroll.js","display.js","Home.js","components/signup/employersignup.js","NavBar.jsx","employees/employeeprogressbar.js","employees/employeesingletask.js","employees/employeedisplaytask.js","employees/salary.js","employees/employeenavbar.js","App.jsx","reportWebVitals.js","redux/store.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","firebaseConfig","firebaseAuth","getAuth","authContext","GoogleAuthProvider","createContext","db","getFirestore","ProvideAuth","_ref","children","auth","_useState","useState","_useState2","Object","slicedToArray","user","setUser","signin","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","email","password","wrap","_context","prev","next","preventDefault","abrupt","signInWithEmailAndPassword","then","response","stop","_x","_x2","_x3","apply","this","arguments","registerWithEmailAndPassword","_ref3","_callee2","fullname","username","_auth","res","_user","_context2","getDatabase","createUserWithEmailAndPassword","sent","addDoc","collection","uid","authProvider","t0","console","error","alert","message","_x4","_x5","_x6","signInWithGoogle","_ref4","_callee3","googleProvider","_user2","q","_context3","signInWithPopup","query","where","getDocs","docs","length","name","displayName","useEffect","unsubscribe","onAuthStateChanged","signup","signout","signOut","signOutWithGoogle","catch","sendPasswordResetEmail","confirmPasswordReset","code","useProvideAuth","react_default","a","createElement","Provider","value","useAuth","useContext","theme","styled","div","_templateObject","taggedTemplateLiteral","createTheme","Signin","navigate","useNavigate","setName","_useState3","_useState4","setPassword","react","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","type","Button","mb","Grid","container","item","xs","SignInUser","userSlice","createSlice","initialState","reducers","login","state","action","payload","logout","actions","employeesignup_templateObject","Submit","firstName","setFirstName","lastName","setLastName","_useState5","_useState6","secretcode","setSecretCode","_useState7","_useState8","_useState9","_useState10","dob","setDob","_useState11","_useState12","workExp","setWorkExp","_useState13","_useState14","location","setLocation","_useState15","_useState16","title","setTitle","_useState17","_useState18","phoneNum","setphoneNum","_useState19","_useState20","_useState21","_useState22","loginerror","setError","_useState23","_useState24","_useState25","_useState26","retypepassword","setRetypepassword","dispatch","useDispatch","_register","employeesignup_regeneratorRuntime","event","call","userAuth","updateProfile","log","err","fetch","json","register","InputLabelProps","shrink","onClick","CreateForm","employeesignup_Submit","employeeCollectionRef","employeeserver","addEmployee","newEmployee","updatedEmployee","bookDoc","doc","updateDoc","deleteEmployee","employeeDoc","deleteDoc","getALLEmployee","getEmployee","EmployeeDoc","getDoc","BootstrapDialog","Dialog","& .MuiDialogContent-root","padding","spacing","& .MuiDialogActions-root","BootstrapDialogTitle","props","onClose","other","objectWithoutProperties","DialogTitle","assign","p","IconButton","aria-label","position","right","top","color","palette","grey","Close_default","Individual","employees","setEmployees","useParams","_React$useState","React","_React$useState2","open","setOpen","rate","setRate","hourly","setHourly","days","setDays","overtime","setOvertime","deductions","setDeductions","overall","setOverall","getEmployees","handleClose","sendPayroll","Individual_regeneratorRuntime","dailySalary","daysAttended","overtimeHourlyRate","overtimeHours","overallSalary","employeeName","employerName","result","reason","_x7","_x8","data","EmployeeDataService","_document","mapValue","fields","stringValue","_x9","employeename","className","rowspacing","style","backgroundImage","src","alt","height","width","AddIcCall_default","AddLocation_default","Cake_default","Work_default","Paid_default","aria-labelledby","Individual_BootstrapDialogTitle","DialogContent","dividers","Box_Box","Number","DialogActions","Item","Paper","objectSpread","backgroundColor","mode","typography","body2","textAlign","text","secondary","Cards","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","EmployeesList","getEmployeeId","viewemployees_regeneratorRuntime","call1","returned","body","map","rowSpacing","columns","columnSpacing","sm","md","index","key","react_router_dom","to","textDecoration","employer","Welcome","currentUser","ProgressBar","completed","fillerStyles","concat","borderRadius","fontWeight","handleSubmit","handlesubmit_regeneratorRuntime","taskname","description","people","CreateTask","useTheme","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","names","employee","getStyles","personName","indexOf","fontWeightRegular","fontWeightMedium","createtask_regeneratorRuntime","setPersonName","_React$useState3","_React$useState4","task","setTask","setDescription","setEmployer","fontSize","createtask_BootstrapDialog","createtask_BootstrapDialogTitle","FormControl","fullwidth","ml","InputLabel","Select","labelId","multiple","split","input","OutlinedInput","MenuItem","undefined","CreateSubtask","feedback","setFeedback","goal","setGoal","maintask","subtaskSubmit","createsubtask_regeneratorRuntime","subTaskName","subTaskDesc","mainTaskName","workerArray","left","createsubtask_BootstrapDialog","createsubtask_BootstrapDialogTitle","window","reload","taskCollectionRef","addTask","newTask","deleteTask","getALLTask","printRef","getTask","OutlinedCard","onload","hash","tasks","setTasks","progress","setProgress","FindUserType","displaytask_regeneratorRuntime","call2","result2","_loop","i","_loop2","_i","toConsumableArray","calltask","resulttask","delegateYield","progressbar","Math","round","CardActions","Transition","ref","Slide","direction","FullScreenDialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","flex","List","ListItem","button","ListItemText","primary","Divider","BasicCard","subtasks","setSubTasks","subtasktemp","mainworkers","setMainWorkers","workers","setWorkers","mainprogress","setMainProgress","status","setStatus","mainstatus","setMainStatus","maindescription","setMainDescription","useLocation","tempprogress","progresstemp","newValue","setnewValue","refreshPage","mainTaskProgress","singletask_regeneratorRuntime","result1","viewMainTaskFeedback","viewMainTask","_context4","subTaskProgress","_callee4","_context5","_x10","_x11","completeSubTask","_ref5","_callee5","_context6","_x12","_x13","_x14","completeMainTask","_ref6","_callee6","_context7","_x15","_x16","minWidth","worker","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","AccordionDetails","existingItems","slice","subTaskCounter","calculateprogress","Showpayroll","setEmployeenames","payroll_regeneratorRuntime","subheader","ListSubheader","ListItemButton","ListItemIcon","Send_default","element","reduce","b","Home","setEmployeeId","flexGrow","size","mr","Menu_default","react_router","path","viewemployees","employName","payroll","employersignup_templateObject","employersignup_regeneratorRuntime","EmployerSignup","employersignup_Submit","ButtonAppBar","Home_Home","Employeesingletask","employeesingletask_regeneratorRuntime","employeeprogressbar","choose","Array","isArray","Employeetasklist","displayTask","employeedisplaytask_regeneratorRuntime","Salary","salary_regeneratorRuntime","EmployeeBar","App","App_regeneratorRuntime","setUsertype","setUsername","usertype","employeenavbar","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userReducer","ReactDOM","createRoot","document","getElementById","render","es","App_App"],"mappings":"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","file":"static/js/main.0a4528ff.chunk.js","sourcesContent":["export const config = {\n  apiKey: \"AIzaSyACSUS80qgqEzuQQmo_hMJbEJDwqsIf1ns\",\n  authDomain: \"businessaide-fab48.firebaseapp.com\",\n  projectId: \"businessaide-fab48\",\n  storageBucket: \"businessaide-fab48.appspot.com\",\n  messagingSenderId: \"440207297304\",\n  appId: \"1:440207297304:web:1ee77efcf3f79a1e09ec6d\",\n  measurementId: \"G-V4KJ4B5E32\",\n};\n","import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport {getDatabase ,ref, set} from \"firebase/database\"\n\nimport { config as firebaseConfig } from \"./config\";\n\n// Code edited from https://usehooks.com/useAuth/ and\n// https://firebase.google.com/docs/auth/web/start#add-initialize-sdk\n// Not my original work.\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nconst firebaseAuth = getAuth(app);\n\nconst googleAuthProvider = new GoogleAuthProvider();\n\nconst authContext = createContext();\nconst db = getFirestore(app);\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n  const signin = async(e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return signInWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n      \n    );\n\n  };\n  const registerWithEmailAndPassword = async (fullname, username, password) => {\n   const database = getDatabase(app);\n    try {\n      const auth = getAuth(app);\n      const res = await createUserWithEmailAndPassword(\n        auth,\n        username,\n        password\n      );\n      const user = res.user;\n     await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        fullname,\n        authProvider: \"local\",\n        username,\n      });\n      /*set(ref(database, 'employers/' + fullname), {\n       \n      });*/\n      /*db.collection(\"employers\").doc(fullname).set({\n        uid: user.uid,\n        email: username,\n        fullname: fullname,\n        authProvider:\"local\"\n      })*/\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  const signup = (e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return createUserWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n    );\n  };\n\n  const signout = () => {\n    return firebaseAuth.signOut().then(() => {\n      setUser(false);\n    });\n  };\n\n  const sendPasswordResetEmail = (email) => {\n    return firebaseAuth.sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebaseAuth.confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithGoogle = async () => {\n    const googleProvider = new GoogleAuthProvider();\n    try {\n      const res = await signInWithPopup(auth, googleProvider);\n      const user = res.user;\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n      const docs = await getDocs(q);\n      if (docs.docs.length === 0) {\n        await addDoc(collection(db, \"users\"), {\n          uid: user.uid,\n          name: user.displayName,\n          authProvider: \"google\",\n          email: user.email,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  const auth = getAuth();\n\n  const signOutWithGoogle = () => {\n    return signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  //const registeruser = createUserWithEmailAndPassword(auth, email, password)\n  //.then((userCredential) => {\n  // Signed in\n  //user = userCredential.user;\n  // ...\n  //})\n  //.catch((error) => {\n  // const errorCode = error.code;\n  //const errorMessage = error.message;\n  // ..\n  //});\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    const unsubscribe = firebaseAuth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  // Return the user object and auth methods\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    signOutWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    registerWithEmailAndPassword,\n  };\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\n\nimport styled from \"styled-components\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport {\n  Link,\n  Route,\n  Routes,\n  BrowserRouter,\n  useNavigate,\n} from \"react-router-dom\";\n\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\nconst theme = createTheme();\nexport function Signin() {\n  const { user } = useAuth();\n  let navigate = useNavigate();\n  const { signin } = useAuth();\n  const [username, setName] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.username] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  const handlesignin = (event) => {};\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              signin(e, username, password);\n              navigate(\"/\");\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\nexport default function SignInUser() {\n  return <Signin></Signin>;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// selectors\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\nimport { useNavigate } from \"react-router-dom\";\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const {user} = useAuth();\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [secretcode, setSecretCode] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [workExp, setWorkExp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNum,setphoneNum] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [loginerror, setError] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n  async function register (event) {\n\n    event.preventDefault();\n   \n    if (firstName==\"\") {\n      return alert(\"Please enter a full name\");\n    }\n \nelse if (username===\"\") {\n  alert(\"please enter an email\")\n}\n    else if(password!==retypepassword) {\n      alert(\"passwords do not match\")\n    }\n   \n    else{\n          // Create a new user with Firebase\n          let call = \"/SendEmployee/?\";\n          call = call + \"firstName=\" + firstName + \"&\";\n          call = call + \"lastName=\" + lastName + \"&\";\n          call = call + \"secretCode=\" + secretcode + \"&\";\n          call = call + \"dob=\" + dob + \"&\";\n          call = call + \"workExp=\" + workExp + \"&\";\n          call = call + \"location=\" + location + \"&\";\n          call = call + \"title=\" + title + \"&\";\n          call = call + \"phoneNum=\" + phoneNum;\n\n          await registerWithEmailAndPassword(\n            firstName + \" \" + lastName,\n            username,\n            password\n          )\n            .then((userAuth) => {\n              // Update the newly created user with a display name and a picture\n              updateProfile(userAuth.user, {\n                displayName: firstName + \" \" + lastName,\n              })\n                .then(\n                  // Dispatch the user information for persistence in the redux state\n                  dispatch(\n                    login({\n                      email: userAuth.user.email,\n                      uid: userAuth.user.uid,\n                      displayName: firstName + \" \" + lastName,\n                    })\n                  )\n                )\n                .catch((error) => {\n                  console.log(error);\n                  setError(error);\n                });\n            })\n            .catch((err) => {\n              alert(err);\n            });\n          navigate(\"/\");\n        await (await fetch(call)).json();\n        }\n    \n  };\n    \n  \n  /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" onSubmit={(e)=>{register(e);}} noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={firstName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"firstname\"\n              label=\"Firstname\"\n              id=\"firstname\"\n              autoComplete=\"firstname\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n             <TextField\n              value={lastName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"lastname\"\n              label=\"Lastname\"\n              id=\"lastname\"\n              autoComplete=\"lastname\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n             <TextField\n              value={secretcode}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"secretcode\"\n              label=\"Secretcode\"\n              id=\"secretcode\"\n              onChange={(e) => setSecretCode(e.target.value)}\n            />\n              <TextField\n              InputLabelProps={{ shrink: true }}  \n              value={dob}\n              type=\"date\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"dob\"\n              label=\"Date of Birth\"\n              id=\"dob\"\n              onChange={(e) => setDob(e.target.value)}\n            />\n              <TextField\n              value={workExp}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"workExp\"\n              label=\"Work Experience\"\n              id=\"workExp\"\n              onChange={(e) => setWorkExp(e.target.value)}\n            />\n                 <TextField\n              value={location}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"location\"\n              label=\"Location\"\n              id=\"location\"\n              onChange={(e) => setLocation(e.target.value)}\n            />\n                 <TextField\n              value={title}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"title\"\n              label=\"Title\"\n              id=\"title\"\n              onChange={(e) => setTitle(e.target.value)}\n            />\n                 <TextField\n              value={phoneNum}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"phoneNum\"\n              label=\"Phone Number\"\n              id=\"phoneNum\"\n              onChange={(e) => setphoneNum(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              value={retypepassword}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"retypepassword\"\n              label=\"Re-enter Password\"\n              type=\"password\"\n              id=\"retypepassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setRetypepassword(e.target.value)}\n            />\n            <Typography component=\"h3\" variant=\"h5\">\n            {loginerror}\n          </Typography>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Button\n              onClick={signInWithGoogle}\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In With Google\n            </Button>\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default function CreateForm() {\n  return <Submit></Submit>;\n}\n","import { config as firebaseConfig } from \"./config\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n","import { db } from \"./firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst employeeCollectionRef = collection(db, \"employees\");\nclass EmployeeDataService {\n  addEmployee = (newEmployee) => {\n    return addDoc(employeeCollectionRef, newEmployee);\n  };\n\n  updatedEmployee = (id, updatedEmployee) => {\n    const bookDoc = doc(db, \"employees\", id);\n    return updateDoc(bookDoc, updatedEmployee);\n  };\n\n  deleteEmployee = (id) => {\n    const employeeDoc = doc(db, \"employees\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLEmployee = () => {\n    return getDocs(employeeCollectionRef);\n  };\n\n  getEmployee = (id) => {\n    const EmployeeDoc = doc(db, \"employees\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new EmployeeDataService();\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeDataService from \"./employeeserver\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {IconButton} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from '@mui/icons-material/Paid';\n\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function Individual() {\n  const [employees, setEmployees] = useState([]);\n  const { id } = useParams();\n  const [open, setOpen] = React.useState(false);\n  const [rate, setRate] = useState(0);\n  const [hourly, setHourly] = useState(0);\n  const [days, setDays] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n  const [deductions, setDeductions] = useState(0);\n  const [overall, setOverall] = useState(0);\n  let feedback;\n  \n\n  useEffect(() => {\n    getEmployees(id);\n  }, [id]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const sendPayroll = async (dailySalary, daysAttended, overtimeHourlyRate, overtimeHours, deductions, overallSalary, employeeName, employerName) => {\n    let call = \"/sendPayroll/?\";\n    call = call + \"dailySalary=\" + dailySalary + \"&\";\n    call = call + \"daysAttended=\" + daysAttended + \"&\";\n    call = call + \"overtimeHourlyRate=\" + overtimeHourlyRate + \"&\";\n    call = call + \"overtimeHours=\" + overtimeHours + \"&\";\n    call = call + \"deductions=\" + deductions + \"&\";\n    call = call + \"overallSalary=\" + overallSalary + \"&\";\n    call = call + \"employeeName=\" +  employeeName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    feedback = result;\n    alert(feedback.reason);\n  };\n\n  const getEmployees = async (id) => {\n    const data = await EmployeeDataService.getEmployee(id);\n    console.log(\n      data._document.data.value.mapValue.fields.firstName.stringValue\n    );\n    setEmployees(data);\n  };\n\n  console.log(employees);\n\n  if (employees.length === 0) {\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  } else {\n    const employeename = employees._document.data.value.mapValue.fields.firstName.stringValue+\" \"+employees._document.data.value.mapValue.fields.lastName.stringValue\n    console.log(employeename+\" hello\"+employeename);\n    return (\n      <div className=\"list\" rowspacing={3}>\n        <div\n          style={{\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\n          }}\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n            alt=\"\"\n            height={200}\n            width={200}\n          />\n          <h1>\n            {\n              employees._document.data.value.mapValue.fields.firstName\n                .stringValue\n            }{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.lastName\n                .stringValue\n            }\n          </h1>\n        </div>\n        <div>\n          <h3>\n            <AddIcCallIcon></AddIcCallIcon> Phone number:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.phoneNum\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <AddLocationIcon></AddLocationIcon> Location:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.location\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <CakeIcon></CakeIcon> Date of Birth:{\" \"}\n            {employees._document.data.value.mapValue.fields.dob.stringValue}\n          </h3>\n          <h3>\n            <WorkIcon></WorkIcon> Work Experience:{\" \"}\n            {employees._document.data.value.mapValue.fields.workExp.stringValue}\n          </h3>\n          <h3>\n            <PaidIcon></PaidIcon> Salary for the Month:{\" \"}\n            {overall}\n          </h3>\n          <Button variant=\"outlined\" onClick={handleClickOpen}>add new payroll</Button> \n          <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Add a Payroll\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={rate}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"rate\"\n              label=\"Daily Salary\"\n              name=\"rate\"\n              autoComplete=\"rate\"\n              autoFocus\n              onChange={(e) => {setRate(Number(e.target.value)); setOverall(e.target.value*days+overtime-deductions)}}\n            />\n             \n            <TextField\n              value={days}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"days\"\n              label=\"Number of Days Attended\"\n              name=\"days\"\n              autoComplete=\"days\"\n              autoFocus\n              onChange={(e) => {setDays(Number(e.target.value));setOverall(rate*e.target.value+overtime*hourly-deductions)}}\n            />\n            <TextField\n              value={hourly}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"hourly\"\n              label=\"Hourly Salary for Overtime\"\n              name=\"hourly\"\n              autoComplete=\"hourly\"\n              autoFocus\n              onChange={(e) => {setHourly(Number(e.target.value)); setOverall(rate*days+overtime*e.target.value-deductions)}}\n            />\n            <TextField\n              value={overtime}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"overtime\"\n              label=\"Overtime Hours\"\n              name=\"overtime\"\n              autoComplete=\"overtime\"\n              autoFocus\n              onChange={(e) => {setOvertime(Number(e.target.value));setOverall(rate*days+Number(e.target.value)*hourly-deductions)}}\n            />\n            <TextField\n              value={deductions}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"deductions\"\n              label=\"Deductions\"\n              id=\"deductions\"\n              onChange={(e) => {setDeductions(Number(e.target.value));setOverall(rate*days+overtime*hourly-e.target.value)}}\n            />\n           <h3>The overall monthly salary is: {overall}</h3>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{sendPayroll(rate,days,hourly,overtime,deductions,overall,employeename,\"adam jerry\")\n          ; handleClose();\n          }}\n          >\n            SUBMIT\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>   \n        </div>\n      </div>\n    );\n  }\n\n  //console.log(employees);\n}\n\n/*const mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const Employees = state.firestore.data.Employees;\n  const employee = Employees[id];\n  return { employee: employee };\n};*/\n\n/*export default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"Employees\" }])\n)(Individual);*/\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Individual from \"./Individual\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Cards(props) {\n  return (\n    <div>\n      <Item>\n        <Card sx={{ maxWidth: 345 }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n              alt=\"\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {props.fullname}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Item>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport Cards from \"./cards\";\nimport { useAuth } from \"./useAuth\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"./employeeserver\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\nconst EmployeesList = ({ getEmployeeId }) => {\n  const { user } = useAuth();\n  const [employees, setEmployees] = useState([]);\n  const [name, setName] = useState([]);\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const getEmployees = async () => {\n    if (user) {\n      let call1 = \"/findUserType/?\";\n      console.log(user.email);\n      call1 = call1 + \"email=\" + user.email;\n      let result = await (await fetch(call1)).json();\n      console.log(result.name);\n      let call = \"/getAllEmployeeSalary/?\";\n      setName(result.name);\n      call = call + \"employerName=\" + result.name;\n      let returned = await (await fetch(call)).json();\n      setEmployees(returned.body.map((doc) => ({ ...doc, id: doc })));\n    }\n  };\n  /* \n  const deleteHandler = async (id) => {\n    await deleteEmployee(id);\n    getEmployees();\n  }; */\n\n  return (\n    /*   {namecards.map(({ id, data: { Firstname, Lastname, TeamLeader } }) => (\n        <Cards\n          key={id}\n          Firstname={Firstname}\n          Lastname={Lastname}\n          TeamLeader={TeamLeader}\n        />\n      ))} */\n    <div>\n      <Grid\n        container\n        rowSpacing={1}\n        columns={12}\n        columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n      >\n        {employees.map((doc, index) => {\n          console.log(doc);\n          return (\n            <Grid item xs={3} key={doc.name}>\n              <Link\n                to={\"/Individual/\" + doc.name}\n                style={{ textDecoration: \"none\", color: \"black\" }}\n                key={doc.name}\n              >\n                <Cards\n                  key={doc.name}\n                  id={doc.name}\n                  index={index + 1}\n                  fullname={doc.name}\n                  employer={name}\n                />\n              </Link>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default EmployeesList;\n","import React from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { config as firebaseConfig } from \"./config\";\nexport default function Welcome() {\n \n  const callFunctionTemplate = async (name) => {\n    let call = '/getEmployee/?';\n    call = call + 'name=' + name; // do this for each parameter you want to send\n    let result = await (await fetch(call)).json()\n    console.log(result);\n  }\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n  const auth = getAuth();\n  const user = auth.currentUser;\n  //const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n // const docs = await getDocs(q);\n \n \n  //console.log(user.uid);\n  return (\n    <div>\n      <h1>welcome!</h1>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\n\nconst handleSubmit = async (taskname, description, employer, people) => {\n  if (taskname!==\"\") {\n  let call = \"/createMainTask/?\";\n  call = call + \"taskname=\" + taskname + \"&\"; // do this for each parameter you want to send\n  call = call + \"description=\" + description + \"&\";\n  call = call + \"employer=\" + employer + \"&\";\n  call = call + \"people=\" + people;\n  await (await fetch(call)).json();\n} else {\n  alert(\"please enter a taskname\")\n\n}}\nexport default handleSubmit;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { useTheme } from '@mui/material/styles';\nimport { useEffect } from \"react\";\nimport EmployeeDataService from \"../employeeserver\"\n\n\n\nimport MenuItem from '@mui/material/MenuItem';\n\nimport Select from '@mui/material/Select';\n\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\n\nconst BootstrapDialogTitle = (props) => {\n  \n  const { children, onClose, ...other } = props;\n  \n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateTask() {\n  const [employees, setEmployees] = useState([]);\n  const theme = useTheme();\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  \n  const names = employees.map(function(employee){\n    return(employee.id);\n  });\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n  const getEmployees = async () => {\n    const data = await EmployeeDataService.getALLEmployee();\n    console.log(data.docs);\n    setEmployees(data.docs.map((doc) => ({ ...doc.data().firstName+\" \"+doc.data().lastName, id: doc.id })));\n  };\n  \n  const [personName, setPersonName] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [people, setPeople] = useState();\n  const [description, setDescription] = useState();\n  const [employer, setEmployer] = useState([]);\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\n            Add New Task\n          </Typography>\n          <Typography variant=\"body2\">\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n              New Task\n            </Button>\n            <BootstrapDialog\n              onClose={handleClose}\n              aria-labelledby=\"customized-dialog-title\"\n              open={open}\n            >\n              <BootstrapDialogTitle\n                id=\"customized-dialog-title\"\n                onClose={handleClose}\n              >\n                Create a New Task\n              </BootstrapDialogTitle>\n              <DialogContent dividers>\n                <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                  <TextField\n                    value={task}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"task\"\n                    label=\"Task Name\"\n                    name=\"task\"\n                    autoComplete=\"task\"\n                    autoFocus\n                    onChange={(e) => setTask(e.target.value)}\n                  />\n                  <TextField\n                    value={description}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"description\"\n                    label=\"Task Description\"\n                    name=\"description\"\n                    autoComplete=\"description\"\n                    autoFocus\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                  <TextField\n                    value={employer}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"employer\"\n                    label=\"Employer's Name\"\n                    name=\"employer\"\n                    autoComplete=\"employer\"\n                    autoFocus\n                    onChange={(e) => setEmployer(e.target.value)}\n                  />\n                 {console.log(employees)}\n      <FormControl  required fullwidth sx={{ml:0, mt:2, width: 568 }}>\n        <InputLabel id=\"demo-multiple-name-label\">Employees Assigned</InputLabel>\n        <Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<OutlinedInput label=\"Name\" />}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem\n              key={name}\n              value={name}\n              style={getStyles(name, personName, theme)}\n            >\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n   {console.log(personName)}\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  autoFocus\n                  onClick={() => {\n                    console.log(task);\n                    task===undefined||description===undefined||employer===[]||personName===undefined? alert(\"please complete all required fields\") :handleSubmit(task, description, employer, personName);\n                    handleClose();\n                  }}\n                >\n                  Create Task\n                </Button>\n              </DialogActions>\n            </BootstrapDialog>\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from '@mui/material/styles';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useEffect } from \"react\";\n//import subtaskSubmit from \"./subtasksubmit\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateSubtask(props) {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  const [personName, setPersonName] = React.useState([]);\n  const names = props.people;\n  console.log(names);\n  const theme = useTheme();\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n    console.log(personName);\n  };\n  let localerror = -2;\n\n  const [feedback, setFeedback] = useState(-2);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [people, setPeople] = useState([]);\n  const [description, setDescription] = useState();\n  const [employer, setEmployer] = useState();\n  const [goal, setGoal] = useState();\n\n  const maintask = props.maintask;\n\n  const subtaskSubmit = async (\n    subTaskName,\n    subTaskDesc,\n    goal,\n    mainTaskName,\n    employerName,\n    workerArray\n  ) => {\n    console.log(workerArray);\n    let call = \"/createSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\"; // do this for each parameter you want to send\n    call = call + \"subTaskDesc=\" + subTaskDesc + \"&\";\n    call = call + \"goal=\" + goal + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"workerArray=\" + workerArray;\n    let result = await (await fetch(call)).json();\n    setFeedback(result);\n    localerror = result;\n  };\n  //useEffect(()=>{\n  //console.log(props.people)\n  //setNames(props.people);\n  // },[])\n  return (\n    <div>\n      <span style={{ color: \"white\" }}> hahahahahahaa </span>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 700,\n        }}\n      >\n        New Subtask\n      </Button>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Create a New Subtask\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={task}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"task\"\n              label=\"Task Name\"\n              name=\"task\"\n              autoComplete=\"task\"\n              autoFocus\n              onChange={(e) => setTask(e.target.value)}\n            />\n            <TextField\n              value={description}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"description\"\n              label=\"Task Description\"\n              name=\"description\"\n              autoComplete=\"description\"\n              autoFocus\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <TextField\n              value={employer}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"employer\"\n              label=\"Employer's Name\"\n              name=\"employer\"\n              autoComplete=\"employer\"\n              autoFocus\n              onChange={(e) => setEmployer(e.target.value)}\n            />\n            <FormControl required fullwidth sx={{ ml: 0, mt: 2, width: 568 }}>\n              <InputLabel id=\"demo-multiple-name-label\">\n                Employees Assigned\n              </InputLabel>\n              <Select\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<OutlinedInput label=\"Name\" />}\n                MenuProps={MenuProps}\n              >\n                {names.length === 0\n                  ? \"loading\"\n                  : names.map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        style={getStyles(name, personName, theme)}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n              </Select>\n            </FormControl>\n            {console.log(personName)}\n            <TextField\n              value={goal}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"goal\"\n              label=\"Task Goal\"\n              id=\"goal\"\n              onChange={(e) => setGoal(e.target.value)}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              task === undefined ||\n              description === undefined ||\n              goal === undefined ||\n              employer === [] ||\n              personName === undefined\n                ? alert(\"please complete all required fields\")\n                : subtaskSubmit(\n                    task,\n                    description,\n                    goal,\n                    maintask,\n                    employer,\n                    personName\n                  );\n              console.log(personName);\n              console.log(feedback);\n              feedback === -1\n                ? alert(\"the employee is not found\")\n                : console.log(\"subtask added\");\n              handleClose();\n              refreshPage();\n            }}\n          >\n            Create Task\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import { db } from \"../firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst taskCollectionRef = collection(db, \"employers/adam jerry/tasks\");\nclass TaskDataService {\n  addTask = (newTask) => {\n    return addDoc(taskCollectionRef, newTask);\n  };\n\n  deleteTask = (id) => {\n    const employeeDoc = doc(db, \"employers\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLTask = () => {\n    return getDocs(taskCollectionRef);\n  };\n\n  printRef = () => {\n    return taskCollectionRef;\n  };\n\n  getTask = (id) => {\n    const EmployeeDoc = doc(db, \"employers\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new TaskDataService();\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./progressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport CreateTask from \"./createtask\";\nimport CreateSubtask from \"./createsubtask\";\nimport TaskDataService from \"./taskserver\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function OutlinedCard() {\n  window.onload = function() {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  var username;\n  var task = [];\n  const { user } = useAuth();\n  const FindUserType = async (email) => {\n    let call = \"/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result.name;\n    let call2 = \"/displayTask/?\";\n    call2 = call2 + \"employerName=\" + username;\n    let result2 = await (await fetch(call2)).json();\n    for (let i = 0; i < result2.body.length; i++) {\n      task[i] = result2.body[i];\n      setTasks((tasks) => [...tasks, result2.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask = \"/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + username;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n\n  const displayTask = async (employerName) => {\n    let call = \"/displayTask/?\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    for (let i = 0; i < result.body.length; i++) {\n      task[i] = result.body[i];\n      setTasks((tasks) => [...tasks, result.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask = \"/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + employerName;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n  /* const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n */\n\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n\n  //useEffect(() => {\n  //console.log(task.length);\n  //for (let i = 0; i < task.length; i++) {\n  // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n  //}\n  //}, []);\n\n  //useEffect(()=>{\n  // console.log(tasks);\n\n  //}, [tasks]);\n\n  useEffect(() => {\n    console.log(tasks);\n    console.log(progress);\n  }, [tasks]);\n\n  if (tasks.length === null) {\n    return <div>loading...</div>;\n  }\n  return (\n    <div>\n      <h1>Task Page</h1>\n\n      <Grid\n        container\n        rowSpacing={20}\n        columns={12}\n        columnSpacing={{\n          xs: 2,\n          sm: 2,\n          md: 3,\n        }}\n      >\n        {tasks === [] ? (\n          <h2>loading...</h2>\n        ) : (\n          tasks.map((doc, index) => {\n            return (\n              <Grid item xs={3}>\n                <Card sx={{ maxWidth: 345 }}>\n                  <CardContent>\n                    <Typography\n                      sx={{\n                        fontSize: 20,\n                      }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      Current Task\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {doc ? doc : \"loading\"}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {progress[index] ? (\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={Math.round((progress[index] / 1) * 100)}\n                        />\n                      ) : (\n                        <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />\n                      )}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link\n                      to=\"/task/singletask\"\n                      state={doc}\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"blue\",\n                      }}\n                    >\n                      View Task\n                    </Link>\n                    <span\n                      style={{\n                        color: \"white\",\n                      }}\n                    >\n                      hahahaha\n                    </span>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Slide from \"@mui/material/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog(props) {\r\n  console.log(props.feedback);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={handleClickOpen}\r\n        style={{\r\n          position: \"absolute\",\r\n          left: 700,\r\n        }}\r\n      >\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: \"relative\" }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          {props.feedback.map((doc) => {\r\n            return (\r\n              <div>\r\n                <ListItem button>\r\n                  <ListItemText primary={doc.feedback} />\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n            );\r\n          })}\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./progressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Divider, Grid, List, ListItem, TextField } from \"@mui/material\";\nimport CreateSubtask from \"./createsubtask\";\nimport FullScreenDialog from \"./viewfeedback\";\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function BasicCard(props) {\n  const [feedback, setFeedback] = useState([]);\n  const [subtasks, setSubTasks] = useState([]);\n  let subtasktemp = [];\n  const [description, setDescription] = useState([]);\n  const [mainworkers, setMainWorkers] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  var tempprogress = 0;\n  var progresstemp = [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, email) => {\n    let call1 = \"/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + username;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainProgress(result.body);\n    console.log(mainprogress);\n  };\n\n  const calculateprogress = (subtasks, status, progress, goal) => {\n    var subTaskProgress = 0;\n    var subTaskCounter = 0;\n    tempprogress = mainprogress;\n    for (let i = 0; i < subtasks.length; i++) {\n      if (status[i] == \"finished\") {\n        subTaskProgress += 1;\n        subTaskCounter += 1;\n      } else {\n        subTaskProgress += progress[i] / goal[i];\n        subTaskCounter += 1;\n      }\n    }\n    tempprogress = subTaskProgress / subTaskCounter;\n    if (tempprogress === 0) {\n      tempprogress = 0;\n    }\n    setMainProgress(tempprogress);\n  };\n\n  var username;\n\n  useEffect(() => {\n    const viewMainTask = async (mainTaskName, email) => {\n      let call1 = \"/findUserType/?\";\n      call1 = call1 + \"email=\" + email;\n      let result1 = await (await fetch(call1)).json();\n      console.log(result1);\n      //setUsertype(result.body);\n      //setUsername(result.name);\n      username = result1.name;\n      viewMainTaskFeedback(mainTaskName, username);\n      let call = \"/getMainTaskData/?\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + username;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      setMainDescription(result.body.description);\n      setMainStatus(result.body.status);\n      setSubTasks(result.body.subtasks);\n      setMainWorkers(result.body.workers);\n      subtasktemp = result.body.subtasks;\n      console.log(subtasktemp);\n      for (let i = 0; i < subtasktemp.length; i++) {\n        let call = \"/getSubTaskData/?\";\n        call = call + \"subTaskName=\" + subtasktemp[i] + \"&\";\n        call = call + \"mainTaskName=\" + maintask + \"&\";\n        call = call + \"employerName=\" + username;\n        let result = await (await fetch(call)).json();\n        console.log(result);\n        //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n        setDescription((description) => [\n          ...description,\n          result.body.description,\n        ]);\n        setWorkers((workers) => [...workers, result.body.workers]);\n        setGoal((goal) => [...goal, result.body.goal]);\n        setProgress((progress) => [...progress, result.body.progress]);\n        setStatus((status) => [...status, result.body.status]);\n        console.log(subtasks);\n      }\n    };\n    if (user) {\n      viewMainTask(maintask, user.email);\n      mainTaskProgress(maintask, user.email);\n      viewMainTaskFeedback(maintask, username);\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(mainprogress);\n    console.log(mainworkers);\n  }, [mainprogress, mainworkers]);\n\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n\n  /*useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n      \n    };\n   // for (let i = 0; i < subtasks.length; i++) {\n     // viewSubTask(subtasks[i],maintask,\"adam jerry\")\n      \n    //}\n    //console.log(progress);\n    \n  }, [maintask, subtasks]);*/\n\n  useEffect(() => {\n    //progresstemp = progress;\n    console.log(progress);\n  }, [progress]);\n\n  const viewMainTaskFeedback = async (mainTaskName, employerName) => {\n    let call = \"/viewMainTaskFeedback/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setFeedback(result.body);\n\n    //setProgress(progress[index]+1);\n  };\n  const subTaskProgress = async (\n    subTaskName,\n    value,\n    mainTaskName,\n    employerName,\n    index\n  ) => {\n    let call = \"/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n\n    //setProgress(progress[index]+1);\n  };\n\n  const completeSubTask = async (subTaskName, mainTaskName, employerName) => {\n    let call = \"/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  const completeMainTask = async (mainTaskName, employerName) => {\n    let call = \"/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Workers Allocated\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainworkers.length === 0\n            ? \"loading\"\n            : mainworkers.map((worker) => worker + \"  \")}\n        </Typography>\n        <ProgressBar\n          bgcolor={\"#1976d2\"}\n          completed={\n            mainprogress > 1 ? 100 : Math.round((mainprogress / 1) * 100)\n          }\n        />\n        <Button\n          onClick={() => {\n            completeMainTask(maintask, username);\n            refreshPage();\n          }}\n        >\n          Mark as Finished\n        </Button>\n        {mainworkers.length === 0 ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <List>\n              <ListItem>\n                <CreateSubtask maintask={maintask} people={mainworkers} />\n              </ListItem>\n              <ListItem>\n                <FullScreenDialog feedback={feedback} />\n              </ListItem>\n            </List>\n          </div>\n        )}\n        <div style={{ color: \"white\" }}>hahahah</div>\n        <Grid>\n          {subtasks.map((task, index) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>{task}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    <div>Task Description: {description[index]}</div>\n                    <div>workers allocated: {workers[index]}</div>\n                    <div>goal: {goal[index]}</div>\n\n                    <div>\n                      {\"progress\"}\n                      <ProgressBar\n                        bgcolor={\"#6a1b9a\"}\n                        completed={\n                          (progress[index] / goal[index]) * 100 >= 100\n                            ? 100\n                            : (progress[index] / goal[index]) * 100\n                        }\n                      ></ProgressBar>\n                    </div>\n                    <div>\n                      <TextField\n                        value={Number(newValue)}\n                        type=\"text\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Increase New Progress by\"\n                        autoFocus\n                        onChange={(e) => {\n                          setnewValue(e.target.value);\n                        }}\n                      />\n\n                      <Button\n                        onClick={() => {\n                          setProgress((existingItems) => {\n                            return [\n                              ...existingItems.slice(0, index),\n                              existingItems[index] + Number(newValue),\n                              ...existingItems.slice(index + 1),\n                            ];\n                          });\n\n                          subTaskProgress(\n                            task,\n                            newValue,\n                            maintask,\n                            username,\n                            index\n                          );\n                          progresstemp = progress;\n                          progresstemp[index] += Number(newValue);\n                          {\n                            if (progresstemp[index] >= goal[index]) {\n                              setStatus((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  \"finished\",\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n                            }\n                          }\n                          calculateprogress(\n                            subtasks,\n                            status,\n                            progresstemp,\n                            goal\n                          );\n                          setMainProgress(tempprogress);\n                          console.log(tempprogress);\n\n                          // mainTaskProgress(maintask, \"adam jerry\")\n                        }}\n                      >\n                        Increase Progress\n                      </Button>\n                    </div>\n                    <div>status: {status[index]}</div>\n                  </Typography>\n                  <Button\n                    onClick={() => {\n                      completeSubTask(task, maintask, username);\n                      completeMainTask(maintask, username);\n                      refreshPage();\n                      refreshPage();\n                      setStatus((existingItems) => {\n                        return [\n                          ...existingItems.slice(0, index),\n                          \"finished\",\n                          ...existingItems.slice(index + 1),\n                        ];\n                      });\n                    }}\n                  >\n                    Mark as Finished\n                  </Button>\n                </AccordionDetails>\n              </Accordion>\n            );\n          })}\n        </Grid>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Collapse from '@mui/material/Collapse';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport DraftsIcon from '@mui/icons-material/Drafts';\nimport SendIcon from '@mui/icons-material/Send';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport StarBorder from '@mui/icons-material/StarBorder';\nimport { useEffect } from \"react\";\nimport { db } from \"../firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"../employeeserver\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {IconButton} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from '@mui/icons-material/Paid';\nimport {TextField} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  arrayRemove,\n} from \"firebase/firestore\";\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n    \"& .MuiDialogContent-root\": {\n      padding: theme.spacing(2),\n    },\n    \"& .MuiDialogActions-root\": {\n      padding: theme.spacing(1),\n    },\n  }));\n  \n  const BootstrapDialogTitle = (props) => {\n    const { children, onClose, ...other } = props;\n  \n    return (\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n        {children}\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n    );\n  };\n  \n  BootstrapDialogTitle.propTypes = {\n    children: PropTypes.node,\n    onClose: PropTypes.func.isRequired,\n  };\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Showpayroll = (props) => {\n  let [employeenames, setEmployeenames] = useState([]);\n  const [rate, setRate] = useState(0);\n  const [hourly, setHourly] = useState(0);\n  const [days, setDays] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n  const [deductions, setDeductions] = useState(0);\n  const [overall, setOverall] = useState(0);\n\n  let feedback;\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  let totalsalary = 0;\n  const [total, setTotal] = useState(0);\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    getEmployees(props.name);\n  }, []);\n  useEffect(() => {\n    console.log(employees);\n  }, [employees]);\n  const sendPayroll = async (\n    dailySalary,\n    daysAttended,\n    overtimeHourlyRate,\n    overtimeHours,\n    deductions,\n    overallSalary,\n    employeeName,\n    employerName\n  ) => {\n    let call = \"/sendPayroll/?\";\n    call = call + \"dailySalary=\" + dailySalary + \"&\";\n    call = call + \"daysAttended=\" + daysAttended + \"&\";\n    call = call + \"overtimeHourlyRate=\" + overtimeHourlyRate + \"&\";\n    call = call + \"overtimeHours=\" + overtimeHours + \"&\";\n    call = call + \"deductions=\" + deductions + \"&\";\n    call = call + \"overallSalary=\" + overallSalary + \"&\";\n    call = call + \"employeeName=\" + employeeName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    feedback = result;\n    alert(feedback.reason);\n  };\n  const getEmployees = async (employerName) => {\n    let call = \"/getAllEmployeeSalary/?\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    let result = await (await fetch(call)).json();\n    console.log(result.body);\n    setEmployees(\n      result.body.map((doc) => ({\n        ...doc,\n        id: doc.name,\n      }))\n    );\n    setEmployeenames(\n      result.body.map((doc) => ({\n        ...doc.id,\n        id: doc.name,\n      }))\n    );\n  };\n\n  return (\n    <List\n      sx={{\n        width: \"100%\",\n        maxWidth: 1600,\n        bgcolor: \"background.paper\",\n      }}\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          Payroll for the Month\n        </ListSubheader>\n      }\n    >\n      <ListItemButton>\n        <ListItemIcon>\n          <SendIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            employees.length === 0\n              ? \"loading...\"\n              : \"Total salary for the month: \" +\n                employees\n                  .map((element) => Number(element.overallSalary))\n                  .reduce((a, b) => a + b, 0)\n          }\n        />\n      </ListItemButton>\n      {employees.length === 0\n        ? \"\"\n        : employees.map((doc) => {\n            console.log(doc);\n            return (\n              <Link\n                to={\"/Individual/\" + doc.name}\n                style={{\n                  textDecoration: \"none\",\n                  color: \"black\",\n                }}\n                key={doc}\n              >\n                <ListItemButton key={doc.name}>\n                  <ListItemIcon>\n                    <SendIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={doc.name}\n                    secondary={\"salary for the month: \" + doc.overallSalary}\n                  />\n                </ListItemButton>\n              </Link>\n            );\n          })}\n    </List>\n  );\n};\n\nexport default Showpayroll;","import { Component } from \"react\";\nimport { useAuth } from \"./useAuth\";\nimport { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/employeesignup.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport EmployeesList from \"./viewemployees\";\nimport Welcome from \"./Welcome\";\nimport { useState, useEffect } from \"react\";\nimport Individual from \"./Individual\";\nimport EmployeeDataService from \"./employeeserver\";\nimport OutlinedCard from \"./task/displaytask\";\nimport BasicCard from \"./task/singletask\";\nimport CreateTask from \"./task/createtask\";\nimport Showpayroll from \"./payroll/payroll\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nfunction Home(props) {\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const { signOutWithGoogle } = useAuth();\n  const auth = getAuth();\n  const [employeeId, setEmployeeId] = useState(\"\");\n\n  const getEmployeeIdHandler = (id) => {\n    console.log(\"The ID of document to be edited: \", id);\n    setEmployeeId(id);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                BusinessAide\n              </Link>\n            </Typography>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/payroll/payroll\"\n              >\n                Payroll\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/viewemployees\"\n              >\n                Employees\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/displaytask\"\n              >\n                View Tasks\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/createtask\"\n              >\n                Add Tasks\n              </Link>\n            </Button>\n            <Button onClick={signOutWithGoogle} color=\"inherit\">\n              sign out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Routes>\n        <Route path=\"/\" element={<Welcome />} />\n        <Route\n          path=\"/viewemployees/*\"\n          element={<EmployeesList getEmployeeId={getEmployeeIdHandler} />}\n        />\n        <Route path=\"/Individual/:id\" element={<Individual />} />\n        <Route path=\"/task/displaytask\" element={<OutlinedCard />} />\n        <Route\n          path=\"/task/singletask\"\n          element={<BasicCard employName={props.name} />}\n        />\n        <Route path=\"/task/createtask\" element={<CreateTask />} />\n        <Route\n          path=\"/payroll/payroll\"\n          element={<Showpayroll name={props.name} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default Home;\n\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\n\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nexport default function Home() {\n  return <h1>Welcome to BusinessAide</h1>;\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\nimport { useNavigate } from \"react-router-dom\";\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const {user} = useAuth();\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [secretcode, setSecretCode] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [workExp, setWorkExp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNum,setphoneNum] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [loginerror, setError] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n  async function register (event) {\n\n    event.preventDefault();\n   \n    if (firstName==\"\") {\n      return alert(\"Please enter a full name\");\n    }\n \nelse if (username===\"\") {\n  alert(\"please enter an email\")\n}\n    else if(password!==retypepassword) {\n      alert(\"passwords do not match\")\n    }\n   \n    else{\n          // Create a new user with Firebase\n          let call = \"/SendEmployer/?\";\n          call = call + \"firstName=\" + firstName + \"&\";\n          call = call + \"lastName=\" + lastName + \"&\";\n          call = call + \"secretCode=\" + secretcode;\n          await registerWithEmailAndPassword(\n            firstName + \" \" + lastName,\n            username,\n            password\n          )\n            .then((userAuth) => {\n              // Update the newly created user with a display name and a picture\n              updateProfile(userAuth.user, {\n                displayName: firstName + \" \" + lastName,\n              })\n                .then(\n                  // Dispatch the user information for persistence in the redux state\n                  dispatch(\n                    login({\n                      email: userAuth.user.email,\n                      uid: userAuth.user.uid,\n                      displayName: firstName + \" \" + lastName,\n                    })\n                  )\n                )\n                .catch((error) => {\n                  console.log(error);\n                  setError(error);\n                });\n            })\n            .catch((err) => {\n              alert(err);\n            });\n          navigate(\"/\");\n          await (await fetch(call)).json();\n        }\n    \n  };\n    \n  \n  /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" onSubmit={(e)=>{register(e);}} noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={firstName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"firstname\"\n              label=\"Firstname\"\n              id=\"firstname\"\n              autoComplete=\"firstname\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n             <TextField\n              value={lastName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"lastname\"\n              label=\"Lastname\"\n              id=\"lastname\"\n              autoComplete=\"lastname\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n             <TextField\n              value={secretcode}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"secretcode\"\n              label=\"Secretcode\"\n              id=\"secretcode\"\n              onChange={(e) => setSecretCode(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              value={retypepassword}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"retypepassword\"\n              label=\"Re-enter Password\"\n              type=\"password\"\n              id=\"retypepassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setRetypepassword(e.target.value)}\n            />\n            <Typography component=\"h3\" variant=\"h5\">\n            {loginerror}\n          </Typography>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Button\n              onClick={signInWithGoogle}\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In With Google\n            </Button>\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default function EmployerSignup() {\n  return <Submit></Submit>;\n}\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/employeesignup.js\";\nimport Home from \"./Home.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport \"./NavBar.css\";\nimport EmployerSignup from \"./components/signup/employersignup.js\";\n\nexport default function ButtonAppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n              BusinessAide\n            </Link>\n          </Typography>\n          <Button color=\"inherit\"></Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/employersignup\"\n            >\n              Employer Signup\n            </Link>\n          </Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/employeesignup\"\n            >\n              Employee Signup\n            </Link>\n          </Button>\n          <Button color=\"inherit\">\n            {\" \"}\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signin/signin\"\n            >\n              Signin\n            </Link>\n          </Button>\n        </Toolbar>\n      </AppBar>\n      \n      <Routes>\n        <Route path=\"/components/signup/employersignup\" element={<EmployerSignup/>}/>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"components/signup/employeesignup\" element={<CreateForm />} />\n        <Route path=\"components/signin/signin\" element={<SignInUser />} />\n      </Routes>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./employeeprogressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport { Grid, TextField } from \"@mui/material\";\nimport CreateSubtask from \"../task/createsubtask\";\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function Employeesingletask(props) {\n  const [subtasks, setSubTasks] = useState([]);\n  let subtasktemp = [];\n  const [description, setDescription] = useState([]);\n  const [mainworkers, setMainWorkers] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  var tempprogress = 0;\n  var progresstemp = [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainProgress(result.body);\n    console.log(mainprogress);\n  };\n\n  const calculateprogress = (subtasks, status, progress, goal) => {\n    var subTaskProgress = 0;\n    var subTaskCounter = 0;\n    tempprogress = mainprogress;\n    for (let i = 0; i < subtasks.length; i++) {\n      if (status[i] == \"finished\") {\n        subTaskProgress += 1;\n        subTaskCounter += 1;\n      } else {\n        subTaskProgress += progress[i] / goal[i];\n        subTaskCounter += 1;\n      }\n    }\n    tempprogress = subTaskProgress / subTaskCounter;\n    if (tempprogress === 0) {\n      tempprogress = 0;\n    }\n    setMainProgress(tempprogress);\n  };\n\n  useEffect(() => {\n    const viewMainTask = async (mainTaskName, employerName) => {\n      let call = \"/getMainTaskData/?\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      setMainDescription(result.body.description);\n      setMainStatus(result.body.status);\n      setSubTasks(result.body.subtasks);\n      setMainWorkers(result.body.workers);\n      subtasktemp = result.body.subtasks;\n      console.log(subtasktemp);\n      for (let i = 0; i < subtasktemp.length; i++) {\n        let call = \"/getSubTaskData/?\";\n        call = call + \"subTaskName=\" + subtasktemp[i] + \"&\";\n        call = call + \"mainTaskName=\" + maintask + \"&\";\n        call = call + \"employerName=\" + \"adam jerry\";\n        let result = await (await fetch(call)).json();\n        console.log(result);\n        //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n        setDescription((description) => [\n          ...description,\n          result.body.description,\n        ]);\n        setWorkers((workers) => [...workers, result.body.workers]);\n        setGoal((goal) => [...goal, result.body.goal]);\n        setProgress((progress) => [...progress, result.body.progress]);\n        setStatus((status) => [...status, result.body.status]);\n        console.log(subtasks);\n      }\n    };\n\n    viewMainTask(maintask, \"adam jerry\");\n    mainTaskProgress(maintask, \"adam jerry\");\n  }, []);\n\n  useEffect(() => {\n    console.log(mainprogress);\n    console.log(mainworkers);\n  }, [mainprogress, mainworkers]);\n\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n\n  /*useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n      \n    };\n   // for (let i = 0; i < subtasks.length; i++) {\n     // viewSubTask(subtasks[i],maintask,\"adam jerry\")\n      \n    //}\n    //console.log(progress);\n    \n  }, [maintask, subtasks]);*/\n\n  useEffect(() => {\n    //progresstemp = progress;\n    console.log(progress);\n  }, [progress]);\n  const subTaskProgress = async (\n    subTaskName,\n    value,\n    mainTaskName,\n    employerName,\n    index\n  ) => {\n    let call = \"/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n\n    //setProgress(progress[index]+1);\n  };\n\n  const completeSubTask = async (subTaskName, mainTaskName, employerName) => {\n    let call = \"/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  const completeMainTask = async (mainTaskName, employerName) => {\n    let call = \"/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Workers Allocated\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainworkers.length === 0\n            ? \"loading\"\n            : mainworkers.map((worker) => worker + \"  \")}\n        </Typography>\n        <ProgressBar\n          bgcolor={\"#1976d2\"}\n          completed={\n            mainprogress > 1 ? 100 : Math.round((mainprogress / 1) * 100)\n          }\n        />\n        <Button\n          onClick={() => {\n            completeMainTask(maintask, \"adam jerry\");\n            refreshPage();\n          }}\n        >\n          Mark as Finished\n        </Button>\n        {mainworkers.length === 0 ? (\n          <div>loading...</div>\n        ) : (\n          <CreateSubtask maintask={maintask} people={mainworkers} />\n        )}\n        <div style={{ color: \"white\" }}>hahahah</div>\n        <Grid>\n          {workers.length !== 0 ? (\n            subtasks.map((task, index) => {\n              let choose = false;\n              console.log(index);\n              console.log(workers[index]);\n              if (Array.isArray(workers[index])) {\n                for (let i = 0; i < workers[index].length; i++) {\n                  if (workers[index][i] == \"chase potato\") {\n                    choose = true;\n                  }\n                }\n              } else {\n                if (workers[index] === \"chase potato\") {\n                  choose = true;\n                }\n              }\n\n              console.log(choose);\n              return (\n                <Accordion>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography>{task}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography>\n                      {console.log(workers)}\n                      <div>Task Description: {description[index]}</div>\n                      <div>workers allocated: {workers[index]}</div>\n                      <div>goal: {goal[index]}</div>\n                      <div>status: {status[index]}</div>\n                      <div>\n                        {\"progress\"}\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={\n                            (progress[index] / goal[index]) * 100 >= 100\n                              ? 100\n                              : (progress[index] / goal[index]) * 100\n                          }\n                        ></ProgressBar>\n                      </div>\n                    </Typography>\n                    <div>\n                      {choose ? (\n                        <div>\n                          <TextField\n                            value={Number(newValue)}\n                            type=\"text\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            label=\"Increase New Progress by\"\n                            autoFocus\n                            onChange={(e) => {\n                              setnewValue(e.target.value);\n                            }}\n                          />\n\n                          <Button\n                            onClick={() => {\n                              setProgress((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  existingItems[index] + Number(newValue),\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n\n                              subTaskProgress(\n                                task,\n                                newValue,\n                                maintask,\n                                \"adam jerry\",\n                                index\n                              );\n                              progresstemp = progress;\n                              progresstemp[index] += Number(newValue);\n                              {\n                                if (progresstemp[index] >= goal[index]) {\n                                  setStatus((existingItems) => {\n                                    return [\n                                      ...existingItems.slice(0, index),\n                                      \"finished\",\n                                      ...existingItems.slice(index + 1),\n                                    ];\n                                  });\n                                }\n                              }\n                              calculateprogress(\n                                subtasks,\n                                status,\n                                progresstemp,\n                                goal\n                              );\n                              setMainProgress(tempprogress);\n                              console.log(tempprogress);\n\n                              // mainTaskProgress(maintask, \"adam jerry\")\n                            }}\n                          >\n                            Increase Progress\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              completeSubTask(task, maintask, \"adam jerry\");\n                              completeMainTask(maintask, \"adam jerry\");\n                              refreshPage();\n                              refreshPage();\n                              setStatus((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  \"finished\",\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n                            }}\n                          >\n                            Mark as Finished\n                          </Button>\n                        </div>\n                      ) : (\n                        <div>cannot edit this task</div>\n                      )}\n                    </div>\n                  </AccordionDetails>\n                </Accordion>\n              );\n            })\n          ) : (\n            <div>loading...</div>\n          )}\n        </Grid>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./employeeprogressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function Employeetasklist() {\n  window.onload = function() {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  var task = [];\n  const displayTask = async (employeeName, employerName) => {\n    let call = \"/displayEmployeeTask/?\";\n    call = call + \"employeeName=\" + employeeName;\n    let result = await (await fetch(call)).json();\n    for (let i = 0; i < result.body.length; i++) {\n      task[i] = result.body[i];\n      setTasks((tasks) => [...tasks, result.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask = \"/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + employerName;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n  /* const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n */\n\n  useEffect(() => {\n    displayTask(\"chase potato\", \"adam jerry\");\n  }, []);\n\n  //useEffect(() => {\n  //console.log(task.length);\n  //for (let i = 0; i < task.length; i++) {\n  // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n  //}\n  //}, []);\n\n  //useEffect(()=>{\n  // console.log(tasks);\n\n  //}, [tasks]);\n\n  useEffect(() => {\n    console.log(tasks);\n    console.log(progress);\n  }, [tasks]);\n\n  if (tasks.length === null) {\n    return <div>loading...</div>;\n  }\n  return (\n    <div>\n      <h1>Task Page</h1>\n\n      <Grid\n        container\n        rowSpacing={20}\n        columns={12}\n        columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n      >\n        {tasks === [] ? (\n          <h2>loading...</h2>\n        ) : (\n          tasks.map((doc, index) => {\n            return (\n              <Grid item xs={3}>\n                <Card sx={{ maxWidth: 345 }}>\n                  <CardContent>\n                    <Typography\n                      sx={{ fontSize: 20 }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      Current Task\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {doc ? doc : \"loading\"}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {progress[index] ? (\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={Math.round((progress[index] / 1) * 100)}\n                        />\n                      ) : (\n                        <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />\n                      )}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link\n                      to=\"/employees/employeesingletask\"\n                      state={doc}\n                      style={{ textDecoration: \"none\", color: \"blue\" }}\n                    >\n                      View Task\n                    </Link>\n                    <span style={{ color: \"white\" }}>hahahaha</span>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })\n        )}\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport EmployeeDataService from \"../employeeserver\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { async } from \"@firebase/util\";\r\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\r\nimport CakeIcon from \"@mui/icons-material/Cake\";\r\nimport WorkIcon from \"@mui/icons-material/Work\";\r\nimport { Button } from \"@mui/material\";\r\nimport PropTypes from \"prop-types\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport PaidIcon from \"@mui/icons-material/Paid\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function Salary(props) {\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  let feedback;\r\n\r\n  useEffect(() => {\r\n    console.log(props.name);\r\n    getEmployees(props.name);\r\n  }, []);\r\n\r\n  const getEmployees = async (id) => {\r\n    const data = await EmployeeDataService.getEmployee(id);\r\n    console.log(\r\n      data._document.data.value.mapValue.fields.firstName.stringValue\r\n    );\r\n    setEmployees(data);\r\n  };\r\n\r\n  console.log(employees);\r\n\r\n  if (employees.length === 0) {\r\n    return (\r\n      <div>\r\n        <p>loading...</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    const employeename =\r\n      employees._document.data.value.mapValue.fields.firstName.stringValue +\r\n      \" \" +\r\n      employees._document.data.value.mapValue.fields.lastName.stringValue;\r\n    console.log(employeename + \" hello\" + employeename);\r\n    return (\r\n      <div className=\"list\" rowspacing={3}>\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\r\n          }}\r\n        >\r\n          <img\r\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\r\n            alt=\"\"\r\n            height={200}\r\n            width={200}\r\n          />\r\n          <h1>\r\n            {\r\n              employees._document.data.value.mapValue.fields.firstName\r\n                .stringValue\r\n            }{\" \"}\r\n            {\r\n              employees._document.data.value.mapValue.fields.lastName\r\n                .stringValue\r\n            }\r\n          </h1>\r\n        </div>\r\n        <div>\r\n          <h3>\r\n            Daily Salary:{\" \"}\r\n            {\r\n              employees._document.data.value.mapValue.fields.dailySalary\r\n                .stringValue\r\n            }\r\n          </h3>\r\n          <h3>\r\n            Days Attended:{\" \"}\r\n            {\r\n              employees._document.data.value.mapValue.fields.daysAttended\r\n                .stringValue\r\n            }\r\n          </h3>\r\n          <h3>\r\n            Overtime Hourly Rate:{\" \"}\r\n            {\r\n              employees._document.data.value.mapValue.fields.overtimeHourlyRate\r\n                .stringValue\r\n            }\r\n          </h3>\r\n\r\n          <h3>\r\n            Overtime Hours:{\" \"}\r\n            {\r\n              employees._document.data.value.mapValue.fields.overtimeHours\r\n                .stringValue\r\n            }\r\n          </h3>\r\n          <h3>\r\n            Salary for the Month:{\" \"}\r\n            {\r\n              employees._document.data.value.mapValue.fields.overallSalary\r\n                .stringValue\r\n            }\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //console.log(employees);\r\n}\r\n","import { Component } from \"react\";\r\nimport { useAuth } from \"../useAuth\";\r\nimport { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\r\nimport * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Welcome from \"../Welcome\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Employeesingletask from \"./employeesingletask\";\r\nimport Employeetasklist from \"./employeedisplaytask\";\r\nimport Salary from \"./salary\";\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signOut,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nfunction EmployeeBar(props) {\r\n  console.log(props.name);\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n  const { signOutWithGoogle } = useAuth();\r\n  const auth = getAuth();\r\n  const [employeeId, setEmployeeId] = useState(\"\");\r\n\r\n  const getEmployeeIdHandler = (id) => {\r\n    console.log(\"The ID of document to be edited: \", id);\r\n    setEmployeeId(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\r\n                BusinessAide\r\n              </Link>\r\n            </Typography>\r\n            <Button>\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/employees/salary\"\r\n              >\r\n                Payroll\r\n              </Link>\r\n            </Button>\r\n            <Button>\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/employees/employeedisplaytask\"\r\n              >\r\n                View Tasks\r\n              </Link>\r\n            </Button>\r\n            <Button onClick={signOutWithGoogle} color=\"inherit\">\r\n              sign out\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Welcome />} />\r\n        <Route\r\n          path=\"/employees/employeedisplaytask\"\r\n          element={<Employeetasklist />}\r\n        />\r\n        <Route\r\n          path=\"/employees/employeesingletask\"\r\n          element={<Employeesingletask />}\r\n        />\r\n        <Route\r\n          path=\"/employees/salary\"\r\n          element={<Salary name={props.name} />}\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeBar;\r\n","import \"./App.css\";\nimport { useAuth } from \"./useAuth\";\nimport Home from \"./display\";\nimport ButtonAppBar from \"./NavBar\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./redux/employee.feature\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { config as firebaseConfig } from \"./config\";\nimport userEvent from \"@testing-library/user-event\";\nimport { useState } from \"react\";\n\n//import HomePage from \"./components/signin/mainpage\";\nimport EmployeeBar from \"./employees/employeenavbar\";\n\nexport default function App() {\n  const FindUserType = async (email) => {\n    let call = \"/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setUsertype(result.body);\n    setUsername(result.name);\n  };\n\n  const { user } = useAuth();\n  const [usertype, setUsertype] = useState();\n  const [username, setUsername] = useState();\n  if (user) {\n    console.log(user.email);\n    FindUserType(user.email);\n  } else {\n  }\n  return (\n    <div className=\"App\">\n      {user ? (\n        usertype == \"employer\" ? (\n          <Home name={username} />\n        ) : (\n          <EmployeeBar name={username} />\n        )\n      ) : (\n        <ButtonAppBar />\n      )}\n    </div>\n  );\n}\n\n//(docs&&docs.docs[0].metadata._document.data.value.mapValue.fields.position.stringValue===\"employee\"? <div>hello</div>:\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./rootreducer\";\nimport userReducer from \"./employee.feature\";\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ProvideAuth } from \"./useAuth\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { getFirestore } from \"redux-firestore\";\nimport { getFirebase } from \"react-redux-firebase\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <ProvideAuth>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ProvideAuth>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}