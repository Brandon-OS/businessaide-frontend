{"version":3,"sources":["config.js","useAuth.js","components/signin/signin.js","redux/employee.feature.js","components/signup/signup.js","firebaseini.js","employeeserver.js","Individual.js","cards.js","viewemployees.js","Welcome.js","task/progressbar.js","task/handlesubmit.js","task/createtask.js","task/subtasksubmit.js","task/createsubtask.js","task/taskserver.js","task/displaytask.js","task/singletask.js","display.js","Home.js","NavBar.jsx","App.jsx","reportWebVitals.js","redux/store.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","firebaseConfig","firebaseAuth","getAuth","authContext","GoogleAuthProvider","createContext","db","getFirestore","ProvideAuth","_ref","children","auth","_useState","useState","_useState2","Object","slicedToArray","user","setUser","registerWithEmailAndPassword","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","fullname","username","password","_auth","res","_user","wrap","_context","prev","next","createUserWithEmailAndPassword","sent","addDoc","collection","uid","authProvider","t0","console","error","alert","message","stop","_x","_x2","_x3","apply","this","arguments","signInWithGoogle","_ref3","_callee2","googleProvider","_user2","q","_context2","signInWithPopup","query","where","getDocs","docs","length","name","displayName","email","useEffect","unsubscribe","onAuthStateChanged","signin","e","preventDefault","signInWithEmailAndPassword","then","response","signup","signout","signOut","signOutWithGoogle","catch","sendPasswordResetEmail","confirmPasswordReset","code","useProvideAuth","react_default","a","createElement","Provider","value","useAuth","useContext","theme","styled","div","_templateObject","taggedTemplateLiteral","createTheme","Signin","setName","_useState3","_useState4","setPassword","react","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","type","FormControlLabel","control","Checkbox","color","Button","mb","onClick","Grid","container","item","xs","SignInUser","userSlice","createSlice","initialState","reducers","login","state","action","payload","logout","actions","signup_templateObject","Submit","setFullname","_useState5","_useState6","_useState7","_useState8","retypepassword","setRetypepassword","dispatch","useDispatch","userAuth","updateProfile","log","err","CreateForm","signup_Submit","employeeCollectionRef","employeeserver","addEmployee","newEmployee","updatedEmployee","bookDoc","doc","updateDoc","deleteEmployee","employeeDoc","deleteDoc","getALLEmployee","getEmployee","EmployeeDoc","getDoc","Individual","employees","setEmployees","useParams","getEmployees","Individual_regeneratorRuntime","data","EmployeeDataService","_document","mapValue","fields","firstName","stringValue","className","rowspacing","style","backgroundImage","src","alt","height","width","lastName","AddIcCall_default","phoneNum","AddLocation_default","location","Cake_default","dob","Work_default","workExp","Item","Paper","objectSpread","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","text","secondary","Cards","props","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","Firstname","Lastname","EmployeesList","getEmployeeId","viewemployees_regeneratorRuntime","map","rowSpacing","columns","columnSpacing","sm","md","index","key","react_router_dom","to","textDecoration","employer","Welcome","ProgressBar","completed","fillerStyles","concat","borderRadius","fontWeight","handleSubmit","handlesubmit_regeneratorRuntime","taskname","description","people","call","fetch","json","_x4","BootstrapDialog","Dialog","& .MuiDialogContent-root","& .MuiDialogActions-root","BootstrapDialogTitle","onClose","other","objectWithoutProperties","DialogTitle","assign","p","IconButton","aria-label","position","right","top","grey","Close_default","CreateTask","_React$useState","React","_React$useState2","open","setOpen","task","setTask","setPeople","setDescription","setEmployer","handleClose","fontSize","aria-labelledby","createtask_BootstrapDialogTitle","DialogContent","dividers","DialogActions","subtaskSubmit","subtasksubmit_regeneratorRuntime","subTaskName","subTaskDesc","goal","mainTaskName","employerName","workerArray","_x5","_x6","CreateSubtask","_useState9","_useState10","setGoal","maintask","createsubtask_BootstrapDialog","createsubtask_BootstrapDialogTitle","taskCollectionRef","addTask","newTask","deleteTask","getALLTask","printRef","getTask","OutlinedCard","window","onload","hash","reload","tasks","setTasks","progress","setProgress","displayTask","displaytask_regeneratorRuntime","result","_loop","i","_loop2","_i","toConsumableArray","calltask","resulttask","delegateYield","progressbar","CardActions","currentUser","BasicCard","subtasks","setSubTasks","workers","setWorkers","_useState11","_useState12","mainprogress","setMainProgress","_useState13","_useState14","_useState15","_useState16","status","setStatus","_useState17","_useState18","mainstatus","setMainStatus","_useState19","_useState20","maindescription","setMainDescription","useLocation","tempprogress","progresstemp","_useState21","_useState22","newValue","setnewValue","refreshPage","mainTaskProgress","singletask_regeneratorRuntime","viewMainTask","viewSubTask","_callee3","_context3","_x7","subTaskProgress","_ref4","_callee4","_context4","_x8","_x9","_x10","_x11","_x12","completeSubTask","_ref5","_callee5","_context5","_x13","_x14","_x15","completeMainTask","_ref6","_callee6","_context6","_x16","_x17","minWidth","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","AccordionDetails","Number","existingItems","slice","subTaskCounter","calculateprogress","Home","setEmployeeId","flexGrow","AppBar","Toolbar","size","edge","mr","Menu_default","react_router","path","element","viewemployees","ButtonAppBar","Home_Home","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userReducer","ReactDOM","createRoot","document","getElementById","render","es","App_App"],"mappings":"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","file":"static/js/main.3e35e4f7.chunk.js","sourcesContent":["export const config = {\n  apiKey: \"AIzaSyACSUS80qgqEzuQQmo_hMJbEJDwqsIf1ns\",\n  authDomain: \"businessaide-fab48.firebaseapp.com\",\n  projectId: \"businessaide-fab48\",\n  storageBucket: \"businessaide-fab48.appspot.com\",\n  messagingSenderId: \"440207297304\",\n  appId: \"1:440207297304:web:1ee77efcf3f79a1e09ec6d\",\n  measurementId: \"G-V4KJ4B5E32\",\n};\n","import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\n\nimport { config as firebaseConfig } from \"./config\";\n\n// Code edited from https://usehooks.com/useAuth/ and\n// https://firebase.google.com/docs/auth/web/start#add-initialize-sdk\n// Not my original work.\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nconst firebaseAuth = getAuth(app);\n\nconst googleAuthProvider = new GoogleAuthProvider();\n\nconst authContext = createContext();\nconst db = getFirestore(app);\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n  const signin = (e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return signInWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n    );\n  };\n  const registerWithEmailAndPassword = async (fullname, username, password) => {\n    try {\n      const auth = getAuth(app);\n      const res = await createUserWithEmailAndPassword(\n        auth,\n        username,\n        password\n      );\n      const user = res.user;\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        fullname,\n        authProvider: \"local\",\n        username,\n      });\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n  const signup = (e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return createUserWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n    );\n  };\n\n  const signout = () => {\n    return firebaseAuth.signOut().then(() => {\n      setUser(false);\n    });\n  };\n\n  const sendPasswordResetEmail = (email) => {\n    return firebaseAuth.sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebaseAuth.confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithGoogle = async () => {\n    const googleProvider = new GoogleAuthProvider();\n    try {\n      const res = await signInWithPopup(auth, googleProvider);\n      const user = res.user;\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n      const docs = await getDocs(q);\n      if (docs.docs.length === 0) {\n        await addDoc(collection(db, \"users\"), {\n          uid: user.uid,\n          name: user.displayName,\n          authProvider: \"google\",\n          email: user.email,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  const auth = getAuth();\n\n  const signOutWithGoogle = () => {\n    return signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  //const registeruser = createUserWithEmailAndPassword(auth, email, password)\n  //.then((userCredential) => {\n  // Signed in\n  //user = userCredential.user;\n  // ...\n  //})\n  //.catch((error) => {\n  // const errorCode = error.code;\n  //const errorMessage = error.message;\n  // ..\n  //});\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    const unsubscribe = firebaseAuth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  // Return the user object and auth methods\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    signOutWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    registerWithEmailAndPassword,\n  };\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport Joi from \"joi\";\nimport styled from \"styled-components\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\nconst theme = createTheme();\nexport function Signin() {\n  const { signInWithGoogle } = useAuth();\n  const { signin } = useAuth();\n  const [username, setName] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.username] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  const handlesignin = (event) => {};\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => signin(e, username, password)}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              onClick={signInWithGoogle}\n            >\n              Sign in with Google\n            </Button>\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\nexport default function SignInUser() {\n  return <Signin></Signin>;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// selectors\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [fullname, setFullname] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n  const register = (e) => {\n    e.preventDefault();\n    if (!username) {\n      return alert(\"Please enter a full name\");\n    }\n\n    // Create a new user with Firebase\n    registerWithEmailAndPassword(fullname, username, password)\n      .then((userAuth) => {\n        // Update the newly created user with a display name and a picture\n        updateProfile(userAuth.user, {\n          displayName: fullname,\n        })\n          .then(\n            // Dispatch the user information for persistence in the redux state\n            dispatch(\n              login({\n                email: userAuth.user.email,\n                uid: userAuth.user.uid,\n                displayName: fullname,\n              })\n            )\n          )\n          .catch((error) => {\n            console.log(\"user not updated\");\n          });\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n  /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" onSubmit={register} noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={fullname}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"fullname\"\n              label=\"Fullname\"\n              id=\"fullname\"\n              autoComplete=\"fullname\"\n              onChange={(e) => setFullname(e.target.value)}\n            />\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              value={retypepassword}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"retypepassword\"\n              label=\"Re-enter Password\"\n              type=\"password\"\n              id=\"retypepassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setRetypepassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Button\n              onClick={signInWithGoogle}\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In With Google\n            </Button>\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default function CreateForm() {\n  return <Submit></Submit>;\n}\n","import { config as firebaseConfig } from \"./config\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n","import { db } from \"./firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst employeeCollectionRef = collection(db, \"employees\");\nclass EmployeeDataService {\n  addEmployee = (newEmployee) => {\n    return addDoc(employeeCollectionRef, newEmployee);\n  };\n\n  updatedEmployee = (id, updatedEmployee) => {\n    const bookDoc = doc(db, \"employees\", id);\n    return updateDoc(bookDoc, updatedEmployee);\n  };\n\n  deleteEmployee = (id) => {\n    const employeeDoc = doc(db, \"employees\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLEmployee = () => {\n    return getDocs(employeeCollectionRef);\n  };\n\n  getEmployee = (id) => {\n    const EmployeeDoc = doc(db, \"employees\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new EmployeeDataService();\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeDataService from \"./employeeserver\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\n\nexport default function Individual() {\n  const [employees, setEmployees] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getEmployees(id);\n  }, [id]);\n\n  const getEmployees = async (id) => {\n    const data = await EmployeeDataService.getEmployee(id);\n    console.log(\n      data._document.data.value.mapValue.fields.firstName.stringValue\n    );\n    setEmployees(data);\n  };\n\n  console.log(employees);\n\n  if (employees.length === 0) {\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"list\" rowspacing={3}>\n        <div\n          style={{\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\n          }}\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n            alt=\"\"\n            height={200}\n            width={200}\n          />\n          <h1>\n            {\n              employees._document.data.value.mapValue.fields.firstName\n                .stringValue\n            }{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.lastName\n                .stringValue\n            }\n          </h1>\n        </div>\n        <div>\n          <h3>\n            <AddIcCallIcon></AddIcCallIcon> Phone number:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.phoneNum\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <AddLocationIcon></AddLocationIcon> Location:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.location\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <CakeIcon></CakeIcon> Date of Birth:{\" \"}\n            {employees._document.data.value.mapValue.fields.dob.stringValue}\n          </h3>\n          <h3>\n            <WorkIcon></WorkIcon> Work Experience:{\" \"}\n            {employees._document.data.value.mapValue.fields.workExp.stringValue}\n          </h3>\n        </div>\n      </div>\n    );\n  }\n\n  //console.log(employees);\n}\n\n/*const mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const Employees = state.firestore.data.Employees;\n  const employee = Employees[id];\n  return { employee: employee };\n};*/\n\n/*export default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"Employees\" }])\n)(Individual);*/\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Individual from \"./Individual\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Cards(props) {\n  return (\n    <div>\n      <Item>\n        <Card sx={{ maxWidth: 345 }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n              alt=\"\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {props.Firstname} {props.Lastname}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Item>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport Cards from \"./cards\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"./employeeserver\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\nconst EmployeesList = ({ getEmployeeId }) => {\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  const getEmployees = async () => {\n    const data = await EmployeeDataService.getALLEmployee();\n    console.log(data.docs);\n    setEmployees(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  };\n  /* \n  const deleteHandler = async (id) => {\n    await deleteEmployee(id);\n    getEmployees();\n  }; */\n\n  return (\n    /*   {namecards.map(({ id, data: { Firstname, Lastname, TeamLeader } }) => (\n        <Cards\n          key={id}\n          Firstname={Firstname}\n          Lastname={Lastname}\n          TeamLeader={TeamLeader}\n        />\n      ))} */\n    <div>\n      <Grid\n        container\n        rowSpacing={1}\n        columns={12}\n        columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n      >\n        {employees.map((doc, index) => {\n          console.log(doc);\n          return (\n            <Grid item xs={3} key={doc.id}>\n              <Link\n                to={\"/Individual/\" + doc.id}\n                style={{ textDecoration: \"none\", color: \"black\" }}\n                key={doc.id}\n              >\n                <Cards\n                  key={doc.id}\n                  id={doc.id}\n                  index={index + 1}\n                  Firstname={doc.firstName}\n                  Lastname={doc.lastName}\n                  employer={doc.employer}\n                />\n              </Link>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default EmployeesList;\n","import React from \"react\";\n\nexport default function Welcome() {\n  const callFunctionTemplate = async (name) => {\n    let call = '/getEmployee/?';\n    call = call + 'name=' + name; // do this for each parameter you want to send\n    let result = await (await fetch(call)).json()\n    console.log(result);\n  }\n  return (\n    <div>\n      <h1>welcome!</h1>\n   \n    </div>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\n\nconst handleSubmit = async (taskname, description, employer, people) => {\n  let call = \"/createMainTask/?\";\n  call = call + \"taskname=\" + taskname + \"&\"; // do this for each parameter you want to send\n  call = call + \"description=\" + description + \"&\";\n  call = call + \"employer=\" + employer + \"&\";\n  call = call + \"people=\" + people;\n  await (await fetch(call)).json();\n};\nexport default handleSubmit;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateTask() {\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [people, setPeople] = useState();\n  const [description, setDescription] = useState();\n  const [employer, setEmployer] = useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\n            Add New Task\n          </Typography>\n          <Typography variant=\"body2\">\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n              New Task\n            </Button>\n            <BootstrapDialog\n              onClose={handleClose}\n              aria-labelledby=\"customized-dialog-title\"\n              open={open}\n            >\n              <BootstrapDialogTitle\n                id=\"customized-dialog-title\"\n                onClose={handleClose}\n              >\n                Create a New Task\n              </BootstrapDialogTitle>\n              <DialogContent dividers>\n                <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                  <TextField\n                    value={task}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"task\"\n                    label=\"Task Name\"\n                    name=\"task\"\n                    autoComplete=\"task\"\n                    autoFocus\n                    onChange={(e) => setTask(e.target.value)}\n                  />\n                  <TextField\n                    value={description}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"description\"\n                    label=\"Task Description\"\n                    name=\"description\"\n                    autoComplete=\"description\"\n                    autoFocus\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                  <TextField\n                    value={employer}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"employer\"\n                    label=\"Employer's Name\"\n                    name=\"employer\"\n                    autoComplete=\"employer\"\n                    autoFocus\n                    onChange={(e) => setEmployer(e.target.value)}\n                  />\n                  <TextField\n                    value={people}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"people\"\n                    label=\"People Assigned\"\n                    id=\"people\"\n                    onChange={(e) => setPeople(e.target.value)}\n                  />\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  autoFocus\n                  onClick={() => {\n                    console.log(task);\n                    handleSubmit(task, description, employer, people);\n                    handleClose();\n                  }}\n                >\n                  Create Task\n                </Button>\n              </DialogActions>\n            </BootstrapDialog>\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","const subtaskSubmit = async (\n  subTaskName,\n  subTaskDesc,\n  goal,\n  mainTaskName,\n  employerName,\n  workerArray\n) => {\n  let call = \"/createSubTask/?\";\n  call = call + \"subTaskName=\" + subTaskName + \"&\"; // do this for each parameter you want to send\n  call = call + \"subTaskDesc=\" + subTaskDesc + \"&\";\n  call = call + \"goal=\" + goal + \"&\";\n  call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n  call = call + \"employerName=\" + employerName + \"&\";\n  call = call + \"workerArray=\" + workerArray;\n  await (await fetch(call)).json();\n};\nexport default subtaskSubmit;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport subtaskSubmit from \"./subtasksubmit\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateSubtask(props) {\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [people, setPeople] = useState([]);\n  const [description, setDescription] = useState();\n  const [employer, setEmployer] = useState();\n  const [goal, setGoal] = useState();\n  const maintask = props.maintask;\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <span style={{ color: \"white\" }}> hahahahahahaa </span>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        New Subtask\n      </Button>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Create a New Subtask\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={task}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"task\"\n              label=\"Task Name\"\n              name=\"task\"\n              autoComplete=\"task\"\n              autoFocus\n              onChange={(e) => setTask(e.target.value)}\n            />\n            <TextField\n              value={description}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"description\"\n              label=\"Task Description\"\n              name=\"description\"\n              autoComplete=\"description\"\n              autoFocus\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <TextField\n              value={employer}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"employer\"\n              label=\"Employer's Name\"\n              name=\"employer\"\n              autoComplete=\"employer\"\n              autoFocus\n              onChange={(e) => setEmployer(e.target.value)}\n            />\n            <TextField\n              value={people}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"people\"\n              label=\"People Assigned\"\n              id=\"people\"\n              onChange={(e) => setPeople(e.target.value)}\n            />\n            <TextField\n              value={goal}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"goal\"\n              label=\"Task Goal\"\n              id=\"goal\"\n              onChange={(e) => setGoal(e.target.value)}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              subtaskSubmit(\n                task,\n                description,\n                goal,\n                maintask,\n                employer,\n                people\n              );\n              handleClose();\n            }}\n          >\n            Create Task\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import { db } from \"../firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst taskCollectionRef = collection(db, \"employers/adam jerry/tasks\");\nclass TaskDataService {\n  addTask = (newTask) => {\n    return addDoc(taskCollectionRef, newTask);\n  };\n\n  deleteTask = (id) => {\n    const employeeDoc = doc(db, \"employers\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLTask = () => {\n    return getDocs(taskCollectionRef);\n  };\n\n  printRef = () => {\n    return taskCollectionRef;\n  };\n\n  getTask = (id) => {\n    const EmployeeDoc = doc(db, \"employers\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new TaskDataService();\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./progressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport CreateTask from \"./createtask\";\nimport CreateSubtask from \"./createsubtask\";\nimport TaskDataService from \"./taskserver\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function OutlinedCard() {\n  window.onload = function() {\n    if(!window.location.hash) {\n        window.location = window.location + '#loaded';\n        window.location.reload();\n    }\n}\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const refreshPage = ()=>{\n    window.location.reload();\n }\n \n  var task = [];\n  const displayTask = async (employerName) => {\n   let call = \"https://businessaide-backend.herokuapp.com/displayTask/?\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n  \n   for (let i = 0; i < result.length; i++) {\n      task[i] = result[i]\n      setTasks((tasks) => [...tasks, result[i]]);\n      \n     \n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n   //} catch (err) {\n   \n    //console.error(err)\n   }\n\n   for (let i = 0 ; i < task.length; i++ ) {\n\n   \n   let calltask = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + employerName;\n      let  resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask]);\n    \n        \n   \n   }\n    console.log(progress)\n  }; \n  const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n  \n  \n \n  \n  useEffect(() => {\n    \n    displayTask(\"adam jerry\");\n    \n  \n  }, []);\n\n  \n\n  //useEffect(() => {\n   //console.log(task.length);\n    //for (let i = 0; i < task.length; i++) {\n     // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n    //}\n  //}, []);\n\n //useEffect(()=>{\n   // console.log(tasks);\n   \n   //}, [tasks]);\n\n  useEffect(()=>{\n   console.log(tasks);\n   console.log(progress);\n   }, [tasks]);\n\n  \n  \n\n  \nif (tasks.length === null) {\n  return (\n    <div>loading...</div>\n  )\n} \n  return (\n    <div>\n      <h1>Task Page</h1>\n\n      <Grid\n        container\n        rowSpacing={20}\n        columns={12}\n        columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n      >\n        {tasks.map((doc,index) => {\n          return (\n            <Grid item xs={3}>\n              <Card sx={{ maxWidth: 345 }}>\n                <CardContent>\n                  <Typography\n                    sx={{ fontSize: 20 }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Current Task\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"div\">\n                    {doc? doc : \"loading\"}\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    {(progress[index])?  <ProgressBar bgcolor={\"#6a1b9a\"} completed={(progress[index]/1)*100} /> : <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Link\n                    to=\"/task/singletask\"\n                    state={doc}\n                    style={{ textDecoration: \"none\", color: \"blue\" }}\n                  >\n                    View Task\n                  </Link>\n                  <span style={{ color: \"white\" }}>hahahaha</span>\n                  <CreateSubtask maintask={doc}></CreateSubtask>\n                </CardActions>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./progressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport handleSubmit from \"./handlesubmit\";\nimport { TextField } from \"@mui/material\";\n\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function BasicCard(props) {\n  const [subtasks, setSubTasks] = useState([]);\n\n  const [description, setDescription] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([])\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  var tempprogress = 0;\n  var progresstemp= [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setMainProgress(result);\n    console.log(mainprogress);\n  };\n  \n const calculateprogress = (subtasks, status, progress, goal) =>{\n  var subTaskProgress = 0;\n  var subTaskCounter = 0;\n  tempprogress = mainprogress;\n for (let i = 0; i< subtasks.length; i++ ) {\n  if (status[i] == \"finished\") {\n      subTaskProgress += 1;\n      subTaskCounter += 1;\n    } else {\n      subTaskProgress +=progress[i] / goal[i];\n      subTaskCounter += 1;\n    }\n  \n }\n tempprogress = (subTaskProgress / subTaskCounter);\n  if (tempprogress === 0) {\n    tempprogress = 0;\n  }\n  setMainProgress(tempprogress)\n}\n\n  useEffect(() => {\n    const viewMainTask = async (mainTaskName, employerName) => {\n      let call = \"/getMainTaskData/?\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      setMainDescription(result.description);\n      setMainStatus(result.status);\n      for (let i = 0; i < result.subtasks.length; i++) {\n        setSubTasks(result.subtasks);\n      }\n      console.log(subtasks);\n    };\n  \n    viewMainTask(maintask, \"adam jerry\");\n    mainTaskProgress(maintask,\"adam jerry\")\n  }, []);\n\nuseEffect (()=> {\n  console.log(mainprogress);\n},[mainprogress])\n\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n\n  useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n    };\n    for (let i = 0; i < subtasks.length; i++) {\n      viewSubTask(subtasks[i], maintask, \"adam jerry\");\n      \n    }\n    console.log(progress);\n    \n  }, [maintask, subtasks]);\n\n  useEffect(()=>{\n    //progresstemp = progress;\n    console.log(progress);\n  },[progress])\n  const subTaskProgress = async (subTaskName, value, mainTaskName, employerName, index) => {\n    let call = \"/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n   \n    //setProgress(progress[index]+1);\n  }\n\n  const completeSubTask = async (subTaskName, mainTaskName, employerName) => {\n    let call = \"/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  }\n\n  const completeMainTask = async (mainTaskName, employerName) => {\n    let call = \"/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  }\n\n  \n  progresstemp = progress;\n \n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n \n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n          </Typography>\n        <ProgressBar bgcolor={\"#1976d2\"} completed={(mainprogress/1)*100} />\n        <Button onClick={()=>{completeMainTask(maintask, \"adam jerry\");refreshPage()}}>Mark as Finished</Button>\n        <div>\n          {subtasks.map((task, index) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>{task}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    <div>Task Description: {description[index]}</div>\n                    <div>workers allocated: {workers[index]}</div>\n                    <div>goal: {goal[index]}</div>\n                    <div>\n                      {\"progress\"}\n                      <ProgressBar\n                        bgcolor={\"#6a1b9a\"}\n                        completed={((progress[index] / goal[index]) * 100>= 100) ? 100 :progress[index]/goal[index]*100}\n                      ></ProgressBar>\n                    </div>\n                    <div>\n                    <TextField\n              value={Number(newValue)}\n  \n              type=\"text\" \n              margin=\"normal\"\n              required\n              fullWidth\n            \n              label=\"Increase New Progress by\"\n              \n              \n              autoFocus\n              onChange={(e) => {setnewValue(e.target.value)}}\n            />\n           \n                    <Button onClick={()=>{setProgress(existingItems => {\n                        return [\n                        ...existingItems.slice(0, index),\n                         existingItems[index]+Number(newValue),\n                        ...existingItems.slice(index + 1),\n                        ]\n                    }); \n                     \n                     subTaskProgress(task, newValue, maintask,\"adam jerry\", index); \n                     progresstemp = progress;\n                     progresstemp[index] += Number(newValue); \n                     /*progresstemp[index]=100 ? setStatus(existingItems => {\n                      return [\n                      ...existingItems.slice(0, index),\n                        \"finished\",\n                      ...existingItems.slice(index + 1),\n                      ]\n                  }) : console.log(\"not finished yet\")*/\n                     calculateprogress(subtasks, status, progresstemp, goal);\n                     setMainProgress(tempprogress);\n                     console.log(tempprogress);\n                    // mainTaskProgress(maintask, \"adam jerry\")\n                    }}>Increase Progress</Button>\n                    </div>\n                    <div>status: {status[index]}</div>\n                  </Typography>\n                  <Button onClick={()=>{completeSubTask(task, maintask, \"adam jerry\"); refreshPage();\n                setStatus(existingItems => {\n                      return [\n                      ...existingItems.slice(0, index),\n                        \"finished\",\n                      ...existingItems.slice(index + 1),\n                      ]})}}>Mark as Finished</Button>\n                </AccordionDetails>\n              </Accordion>\n            );\n          })}\n        </div>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import { Component } from \"react\";\nimport { useAuth } from \"./useAuth\";\nimport { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/signup.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport EmployeesList from \"./viewemployees\";\nimport Welcome from \"./Welcome\";\nimport { useState, useEffect } from \"react\";\nimport Individual from \"./Individual\";\nimport EmployeeDataService from \"./employeeserver\";\nimport OutlinedCard from \"./task/displaytask\";\nimport BasicCard from \"./task/singletask\";\nimport CreateTask from \"./task/createtask\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nfunction Home() {\n  const refreshPage = ()=>{\n    window.location.reload();\n }\n  const { signOutWithGoogle } = useAuth();\n  const auth = getAuth();\n  const [employeeId, setEmployeeId] = useState(\"\");\n\n  const getEmployeeIdHandler = (id) => {\n    console.log(\"The ID of document to be edited: \", id);\n    setEmployeeId(id);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                BusinessAide\n              </Link>\n            </Typography>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/viewemployees\"\n              >\n                Employees\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                \n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/displaytask\"\n              >\n                View Tasks\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/createtask\"\n              >\n                Add Tasks\n              </Link>\n            </Button>\n            <Button onClick={signOutWithGoogle} color=\"inherit\">\n              sign out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Routes>\n        <Route path=\"/\" element={<Welcome />} />\n        <Route\n          path=\"/viewemployees/*\"\n          element={<EmployeesList getEmployeeId={getEmployeeIdHandler} />}\n        />\n        <Route path=\"/Individual/:id\" element={<Individual />} />\n        <Route path=\"/task/displaytask\" element={<OutlinedCard />} />\n        <Route path=\"/task/singletask\" element={<BasicCard />} />\n        <Route path=\"/task/createtask\" element={<CreateTask />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default Home;\n\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/signup.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nexport default function Home() {\n  return <h1>Welcome to BusinessAide</h1>;\n}\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/signup.js\";\nimport Home from \"./Home.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport \"./NavBar.css\";\nexport default function ButtonAppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n              BusinessAide\n            </Link>\n          </Typography>\n          <Button color=\"inherit\"></Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/signup\"\n            >\n              Signup\n            </Link>\n          </Button>\n          <Button color=\"inherit\">\n            {\" \"}\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signin/signin\"\n            >\n              Signin\n            </Link>\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"components/signup/signup\" element={<CreateForm />} />\n        <Route path=\"components/signin/signin\" element={<SignInUser />} />\n      </Routes>\n    </Box>\n  );\n}\n","import \"./App.css\";\nimport { useAuth } from \"./useAuth\";\nimport Home from \"./display\";\nimport ButtonAppBar from \"./NavBar\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./redux/employee.feature\";\n\n//import HomePage from \"./components/signin/mainpage\";\n\nexport default function App() {\n  const { user } = useAuth();\n  return <div className=\"App\">{user ? <Home /> : <ButtonAppBar />}</div>;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./rootreducer\";\nimport userReducer from \"./employee.feature\";\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ProvideAuth } from \"./useAuth\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { getFirestore } from \"redux-firestore\";\nimport { getFirebase } from \"react-redux-firebase\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <ProvideAuth>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ProvideAuth>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}