{"version":3,"sources":["config.js","useAuth.js","components/signin/signin.js","redux/employee.feature.js","components/signup/employeesignup.js","firebaseini.js","employeeserver.js","Individual.js","cards.js","viewemployees.js","Welcome.js","task/progressbar.js","task/handlesubmit.js","task/createtask.js","task/createsubtask.js","task/taskserver.js","task/displaytask.js","task/viewfeedback.js","task/singletask.js","payroll/payroll.js","viewapprovedleave.js","viewleave.js","viewrejectedleave.js","display.js","Home.js","components/signup/employersignup.js","NavBar.jsx","employees/employeeprogressbar.js","employees/employeefeedback.js","employees/employeesingletask.js","employees/employeedisplaytask.js","employees/employeewelcome.js","employees/salary.js","employees/employeesapplyleave.js","employees/employeeviewleave.js","employees/employeeviewapprovedleave.js","employees/employeeviewrejectedleave.js","employees/employeenavbar.js","App.jsx","reportWebVitals.js","redux/store.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","firebaseConfig","firebaseAuth","getAuth","authContext","GoogleAuthProvider","createContext","db","getFirestore","ProvideAuth","_ref","children","auth","_useState","useState","_useState2","Object","slicedToArray","user","setUser","signin","_ref2","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","email","password","wrap","_context","prev","next","preventDefault","abrupt","signInWithEmailAndPassword","then","response","catch","error","alert","stop","_x","_x2","_x3","apply","this","arguments","registerWithEmailAndPassword","_ref3","_callee2","fullname","username","_auth","res","_user","_context2","getDatabase","createUserWithEmailAndPassword","sent","addDoc","collection","uid","authProvider","t0","_x4","_x5","_x6","signInWithGoogle","_ref4","_callee3","googleProvider","_user2","q","_context3","signInWithPopup","query","where","getDocs","docs","length","name","displayName","console","message","useEffect","unsubscribe","onAuthStateChanged","signup","signout","signOut","signOutWithGoogle","sendPasswordResetEmail","confirmPasswordReset","code","useProvideAuth","react_default","a","createElement","Provider","value","useAuth","useContext","styled","div","_templateObject","taggedTemplateLiteral","theme","createTheme","Signin","nav","useNavigate","_useState3","_useState4","setName","_useState5","_useState6","setPassword","_handleSubmit","signin_regeneratorRuntime","event","result","log","react","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined_default","Typography","variant","onSubmit","handleSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","type","Button","mb","Grid","container","item","xs","SignInUser","userSlice","createSlice","initialState","reducers","login","state","action","payload","logout","actions","employeesignup_templateObject","Submit","firstName","setFirstName","lastName","setLastName","secretcode","setSecretCode","_useState7","_useState8","_useState9","_useState10","dob","setDob","_useState11","_useState12","workExp","setWorkExp","_useState13","_useState14","location","setLocation","_useState15","_useState16","title","setTitle","_useState17","_useState18","phoneNum","setphoneNum","_useState19","_useState20","_useState21","_useState22","loginerror","setError","_useState23","_useState24","_useState25","_useState26","retypepassword","setRetypepassword","dispatch","useDispatch","navigate","_register","employeesignup_regeneratorRuntime","call","userAuth","updateProfile","err","fetch","json","register","InputLabelProps","shrink","CreateForm","employeesignup_Submit","employeeCollectionRef","employeeserver","addEmployee","newEmployee","updatedEmployee","bookDoc","doc","updateDoc","deleteEmployee","employeeDoc","deleteDoc","getALLEmployee","getEmployee","EmployeeDoc","getDoc","BootstrapDialog","Dialog","& .MuiDialogContent-root","padding","spacing","& .MuiDialogActions-root","BootstrapDialogTitle","props","onClose","other","objectWithoutProperties","DialogTitle","assign","p","IconButton","aria-label","onClick","position","right","top","color","palette","grey","Close_default","Individual","leaves","setLeave","employees","setEmployees","employer","setEmployername","useParams","_React$useState","React","_React$useState2","open","setOpen","open2","setOpen2","rate","setRate","hourly","setHourly","days","setDays","overtime","setOvertime","deductions","setDeductions","overall","setOverall","totalsalary","setTotalsalary","FindUserType","Individual_regeneratorRuntime","getEmployees","handleClose","handleClose2","setQuota","employerName","employeeName","reason","sendPayroll","dailySalary","daysAttended","overtimeHourlyRate","overtimeHours","overallSalary","_x7","_x8","_x9","_x10","_x11","_x12","_ref5","_callee4","data","_context4","EmployeeDataService","_document","mapValue","fields","stringValue","leaveQuota","_x13","employeename","className","rowspacing","style","backgroundImage","src","alt","height","width","AddIcCall_default","AddLocation_default","Cake_default","Work_default","DateRange_default","Paid_default","aria-labelledby","Individual_BootstrapDialogTitle","DialogContent","dividers","Box_Box","isNaN","Number","DialogActions","Item","Paper","objectSpread","backgroundColor","mode","typography","body2","textAlign","text","secondary","Cards","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","EmployeesList","getEmployeeId","errormessage","setErrormessage","viewemployees_regeneratorRuntime","call1","returned","status","body","map","changeAllQuota","quota","DialogContentText","rowSpacing","columns","columnSpacing","sm","md","index","key","react_router_dom","to","textDecoration","Welcome","fontFamily","join","currentUser","setUsername","Welcome_regeneratorRuntime","call2","result2","List","ListItem","ListItemIcon","Send_default","ProgressBar","completed","fillerStyles","concat","borderRadius","fontWeight","handlesubmit_regeneratorRuntime","taskname","description","people","CreateTask","useTheme","employername","createtask_regeneratorRuntime","employerreturned","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","names","employee","getStyles","personName","indexOf","fontWeightRegular","fontWeightMedium","calltask","callresult","setPersonName","_React$useState3","_React$useState4","task","setTask","setDescription","fontSize","createtask_BootstrapDialog","createtask_BootstrapDialogTitle","FormControl","fullwidth","ml","InputLabel","Select","labelId","multiple","split","input","OutlinedInput","MenuItem","undefined","CreateSubtask","setIsupdated","isUpdated","maintask","feedback","setFeedback","goal","setGoal","createsubtask_regeneratorRuntime","subtaskSubmit","subTaskName","subTaskDesc","mainTaskName","workerArray","left","createsubtask_BootstrapDialog","createsubtask_BootstrapDialogTitle","InputProps","inputProps","min","taskCollectionRef","addTask","newTask","deleteTask","getALLTask","printRef","getTask","OutlinedCard","window","onload","hash","reload","tasks","setTasks","progress","setProgress","displaytask_regeneratorRuntime","_loop","i","_loop2","_i","toConsumableArray","resulttask","delegateYield","progressbar","Math","round","CardActions","Transition","ref","Slide","direction","FullScreenDialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","flex","button","ListItemText","primary","Divider","BasicCard","subtasks","setSubTasks","subtasktemp","mainworkers","setMainWorkers","workers","setWorkers","mainprogress","setMainProgress","setStatus","mainstatus","setMainStatus","maindescription","setMainDescription","useLocation","_useState27","_useState28","tempprogress","progresstemp","_useState29","_useState30","newValue","setnewValue","mainTaskProgress","singletask_regeneratorRuntime","result1","viewMainTask","viewMainTaskFeedback","subTaskProgress","_context5","completeSubTask","_callee5","_context6","_x14","_x15","completeMainTask","_ref6","_callee6","_context7","_x16","_x17","_x18","minWidth","worker","Accordion","AccordionSummary","expandIcon","ExpandMore_default","aria-controls","AccordionDetails","existingItems","slice","subTaskCounter","calculateprogress","Showpayroll","setEmployeenames","payroll_regeneratorRuntime","subheader","ListSubheader","ListItemButton","element","reduce","b","ViewApprovedLeave","setLeaves","ViewApprovedLeaves","viewapprovedleave_regeneratorRuntime","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","leave","startdate","&:last-child td, &:last-child th","border","scope","enddate","aria-describedby","setEmployerName","acceptLeave","viewleave_regeneratorRuntime","rejectLeave","handleClickOpen","handleClickOpen2","ViewRejectedLeave","viewrejectedleave_regeneratorRuntime","Home","setEmployeeId","flexGrow","borderColor","react_router","path","viewemployees","viewleave_ViewApprovedLeave","employName","payroll","employersignup_templateObject","employersignup_regeneratorRuntime","EmployerSignup","employersignup_Submit","ButtonAppBar","Home_Home","CreateFeedback","setReturned","anonymousCheck","setAnonymousCheck","feedbackSubmit","employeefeedback_regeneratorRuntime","employeefeedback_BootstrapDialog","employeefeedback_BootstrapDialogTitle","FormLabel","RadioGroup","FormControlLabel","control","Radio","Employeesingletask","setEmployeename","employeesingletask_regeneratorRuntime","employeeprogressbar","choose","Array","isArray","Employeetasklist","displayTask","employeedisplaytask_regeneratorRuntime","EmployeeWelcome","employeewelcome_regeneratorRuntime","Salary","salary_regeneratorRuntime","ApplyLeave","employeesapplyleave_regeneratorRuntime","applyForLeave","duration","setReason","start","setStart","end","setEnd","setDuration","employeesapplyleave_BootstrapDialog","employeesapplyleave_BootstrapDialogTitle","disabled","EmployeeLeave","ViewPendingLeaves","employeeviewleave_regeneratorRuntime","EmployeeApprovedLeave","employeeviewapprovedleave_regeneratorRuntime","EmployeeRejectedLeave","employeeviewrejectedleave_regeneratorRuntime","EmployeeBar","App","App_regeneratorRuntime","setUsertype","usertype","employeenavbar","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","userReducer","ReactDOM","createRoot","document","getElementById","render","basename","pathname","es","App_App"],"mappings":"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","file":"static/js/main.43a5e711.chunk.js","sourcesContent":["export const config = {\n  apiKey: \"AIzaSyACSUS80qgqEzuQQmo_hMJbEJDwqsIf1ns\",\n  authDomain: \"businessaide-fab48.firebaseapp.com\",\n  projectId: \"businessaide-fab48\",\n  storageBucket: \"businessaide-fab48.appspot.com\",\n  messagingSenderId: \"440207297304\",\n  appId: \"1:440207297304:web:1ee77efcf3f79a1e09ec6d\",\n  measurementId: \"G-V4KJ4B5E32\",\n};\n","import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport { config as firebaseConfig } from \"./config\";\n// Code edited from https://usehooks.com/useAuth/ and\n// https://firebase.google.com/docs/auth/web/start#add-initialize-sdk\n// Not my original work.\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nconst firebaseAuth = getAuth(app);\nconst googleAuthProvider = new GoogleAuthProvider();\nconst authContext = createContext();\nconst db = getFirestore(app);\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n  const signin = async (e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return signInWithEmailAndPassword(auth, email, password)\n      .then((response) => {\n        setUser(response.user);\n        return response.user;\n      })\n      .catch((error) => {\n        alert(error);\n      });\n  };\n  const registerWithEmailAndPassword = async (fullname, username, password) => {\n    const database = getDatabase(app);\n    try {\n      const auth = getAuth(app);\n      const res = await createUserWithEmailAndPassword(\n        auth,\n        username,\n        password\n      );\n      const user = res.user;\n\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        fullname,\n        authProvider: \"local\",\n        username,\n      });\n      /*set(ref(database, 'employers/' + fullname), {\n       \n      });*/\n      /*db.collection(\"employers\").doc(fullname).set({\n        uid: user.uid,\n        email: username,\n        fullname: fullname,\n        authProvider:\"local\"\n      })*/\n    } catch (err) {\n      //console.error(err);\n      //alert(err.message);\n    }\n  };\n\n  const signup = (e, email, password) => {\n    e.preventDefault();\n    const auth = getAuth();\n    return createUserWithEmailAndPassword(auth, email, password).then(\n      (response) => {\n        setUser(response.user);\n        return response.user;\n      }\n    );\n  };\n\n  const signout = () => {\n    return firebaseAuth.signOut().then(() => {\n      setUser(false);\n    });\n  };\n\n  const sendPasswordResetEmail = (email) => {\n    return firebaseAuth.sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebaseAuth.confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithGoogle = async () => {\n    const googleProvider = new GoogleAuthProvider();\n    try {\n      const res = await signInWithPopup(auth, googleProvider);\n      const user = res.user;\n      const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n      const docs = await getDocs(q);\n      if (docs.docs.length === 0) {\n        await addDoc(collection(db, \"users\"), {\n          uid: user.uid,\n          name: user.displayName,\n          authProvider: \"google\",\n          email: user.email,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  const auth = getAuth();\n\n  const signOutWithGoogle = () => {\n    return signOut(auth)\n      .then(() => {\n        // Sign-out successful.\n      })\n      .catch((error) => {\n        // An error happened.\n      });\n  };\n\n  //const registeruser = createUserWithEmailAndPassword(auth, email, password)\n  //.then((userCredential) => {\n  // Signed in\n  //user = userCredential.user;\n  // ...\n  //})\n  //.catch((error) => {\n  // const errorCode = error.code;\n  //const errorMessage = error.message;\n  // ..\n  //});\n  // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n  useEffect(() => {\n    const unsubscribe = firebaseAuth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  // Return the user object and auth methods\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    signOutWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    registerWithEmailAndPassword,\n  };\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport styled from \"styled-components\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport {\n  Link,\n  Route,\n  Routes,\n  BrowserRouter,\n  useNavigate,\n} from \"react-router-dom\";\n\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\nconst theme = createTheme();\n\nexport function Signin() {\n  const nav = useNavigate();\n  const { user } = useAuth();\n  let navigate = useNavigate();\n  const [userstatus, setUser] = useState(null);\n  const { signin } = useAuth();\n  const [username, setName] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.username] = input.value;\n\n    this.setState({ data, errors });\n  };\n\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n      let result = await signin(event, username, password);\n      console.log(result);\n      if (result) {\n        nav(\"/\");\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              handleSubmit(e);\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\nexport default function SignInUser() {\n  return <Signin></Signin>;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  count: 0,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n// selectors\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\nimport { useNavigate } from \"react-router-dom\";\n\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const {user} = useAuth();\n  const { signOutWithGoogle } = useAuth();\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [secretcode, setSecretCode] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [workExp, setWorkExp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNum,setphoneNum] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [loginerror, setError] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n  async function register(event) {\n    event.preventDefault();\n\n    if (firstName == \"\") {\n      return alert(\"Please enter a full name\");\n    } else if (username === \"\") {\n      alert(\"please enter an email\");\n    } else if (password !== retypepassword) {\n      alert(\"passwords do not match\");\n    } else if (password.length < 6) {\n      alert(\"password must contain at least 6 characters/digits\");\n    } else {\n      // Create a new user with Firebase\n      let call = \"https://businessaide-backend.herokuapp.com/SendEmployee/?\";\n      call = call + \"firstName=\" + firstName + \"&\";\n      call = call + \"lastName=\" + lastName + \"&\";\n      call = call + \"secretCode=\" + secretcode + \"&\";\n      call = call + \"dob=\" + dob + \"&\";\n      call = call + \"workExp=\" + workExp + \"&\";\n      call = call + \"location=\" + location + \"&\";\n      call = call + \"title=\" + title + \"&\";\n      call = call + \"phoneNum=\" + phoneNum + \"&\";\n      call = call + \"dailySalary=\" + \"0\" + \"&\";\n      call = call + \"daysAttended=\" + \"0\" + \"&\";\n      call = call + \"overtimeHourlyRate=\" + \"0\" + \"&\";\n      call = call + \"overtimeHours=\" + \"0\" + \"&\";\n      call = call + \"deductions=\" + \"0\" + \"&\";\n      call = call + \"overallSalary=\" + \"0\";\n      await registerWithEmailAndPassword(\n        firstName + \" \" + lastName,\n        username,\n        password\n      )\n        .then((userAuth) => {\n          // Update the newly created user with a display name and a picture\n          updateProfile(userAuth.user, {\n            displayName: firstName + \" \" + lastName,\n          })\n            .then(\n              // Dispatch the user information for persistence in the redux state\n              dispatch(\n                login({\n                  email: userAuth.user.email,\n                  uid: userAuth.user.uid,\n                  displayName: firstName + \" \" + lastName,\n                })\n              )\n            )\n            .catch((error) => {\n              console.log(error);\n              setError(error);\n            });\n        })\n        .catch((err) => {\n          //alert(err);\n        })\n        .then(signOutWithGoogle);\n      navigate(\"/\");\n      await (await fetch(call)).json();\n    }\n  }\n\n  /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={(e) => {\n              register(e);\n            }}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              value={firstName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"firstname\"\n              label=\"Firstname\"\n              id=\"firstname\"\n              autoComplete=\"firstname\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <TextField\n              value={lastName}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"lastname\"\n              label=\"Lastname\"\n              id=\"lastname\"\n              autoComplete=\"lastname\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n\n            <TextField\n              value={username}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              value={secretcode}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"secretcode\"\n              label=\"Secretcode\"\n              id=\"secretcode\"\n              onChange={(e) => setSecretCode(e.target.value)}\n            />\n            <TextField\n              InputLabelProps={{ shrink: true }}\n              value={dob}\n              type=\"date\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"dob\"\n              label=\"Date of Birth\"\n              id=\"dob\"\n              onChange={(e) => setDob(e.target.value)}\n            />\n            <TextField\n              value={workExp}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"workExp\"\n              label=\"Work Experience\"\n              id=\"workExp\"\n              onChange={(e) => setWorkExp(e.target.value)}\n            />\n            <TextField\n              value={location}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"location\"\n              label=\"Location\"\n              id=\"location\"\n              onChange={(e) => setLocation(e.target.value)}\n            />\n            <TextField\n              value={title}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"title\"\n              label=\"Title\"\n              id=\"title\"\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <TextField\n              value={phoneNum}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"phoneNum\"\n              label=\"Phone Number\"\n              id=\"phoneNum\"\n              onChange={(e) => setphoneNum(e.target.value)}\n            />\n            <TextField\n              value={password}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <TextField\n              value={retypepassword}\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"retypepassword\"\n              label=\"Re-enter Password\"\n              type=\"password\"\n              id=\"retypepassword\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setRetypepassword(e.target.value)}\n            />\n            <Typography component=\"h3\" variant=\"h5\">\n              {loginerror}\n            </Typography>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item></Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default function CreateForm() {\n  return <Submit></Submit>;\n}\n","import { config as firebaseConfig } from \"./config\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\n","import { db } from \"./firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst employeeCollectionRef = collection(db, \"employees\");\nclass EmployeeDataService {\n  addEmployee = (newEmployee) => {\n    return addDoc(employeeCollectionRef, newEmployee);\n  };\n\n  updatedEmployee = (id, updatedEmployee) => {\n    const bookDoc = doc(db, \"employees\", id);\n    return updateDoc(bookDoc, updatedEmployee);\n  };\n\n  deleteEmployee = (id) => {\n    const employeeDoc = doc(db, \"employees\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLEmployee = () => {\n    return getDocs(employeeCollectionRef);\n  };\n\n  getEmployee = (id) => {\n    const EmployeeDoc = doc(db, \"employees\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new EmployeeDataService();\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeDataService from \"./employeeserver\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {IconButton} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from '@mui/icons-material/Paid';\nimport { useAuth } from \"./useAuth\";\nimport DateRangeIcon from '@mui/icons-material/DateRange';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function Individual() {\n  const { user } = useAuth();\n  const [leaves, setLeave] = useState();\n  const [employees, setEmployees] = useState([]);\n  const [employer, setEmployername] = useState();\n  const { id } = useParams();\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = useState();\n  const [rate, setRate] = useState(0);\n  const [hourly, setHourly] = useState(0);\n  const [days, setDays] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n  const [deductions, setDeductions] = useState(0);\n  const [overall, setOverall] = useState(0);\n\n  let feedback;\n  const [totalsalary, setTotalsalary] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployername(result.name);\n  };\n\n  useEffect(() => {\n    getEmployees(id);\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, [id]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleClickOpen2 = () => {\n    setOpen2(true);\n  };\n  const handleClose2 = () => {\n    setOpen2(false);\n  };\n\n\nconst setQuota = async (employerName, employeeName, value) => {\n  let call = \"https://businessaide-backend.herokuapp.com/changeSingleQuota/?\";\n  call = call + \"employerName=\" + employerName + \"&\";\n  call = call + \"employeeName=\" + employeeName + \"&\";\n  call = call + \"value=\" + value;\n  let result = await (await fetch(call)).json();\n  alert(result.reason);\n  \n}\n\n  const sendPayroll = async (\n    dailySalary,\n    daysAttended,\n    overtimeHourlyRate,\n    overtimeHours,\n    deductions,\n    overallSalary,\n    employeeName,\n    employerName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendPayroll/?\";\n    call = call + \"dailySalary=\" + dailySalary + \"&\";\n    call = call + \"daysAttended=\" + daysAttended + \"&\";\n    call = call + \"overtimeHourlyRate=\" + overtimeHourlyRate + \"&\";\n    call = call + \"overtimeHours=\" + overtimeHours + \"&\";\n    call = call + \"deductions=\" + deductions + \"&\";\n    call = call + \"overallSalary=\" + overallSalary + \"&\";\n    call = call + \"employeeName=\" + employeeName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    feedback = result;\n    alert(feedback.reason);\n  };\n\n  const getEmployees = async (id) => {\n    const data = await EmployeeDataService.getEmployee(id);\n    console.log(\n      data._document.data.value.mapValue.fields.firstName.stringValue\n    );\n    setEmployees(data);\n    setTotalsalary(\n      data._document.data.value.mapValue.fields.overallSalary.stringValue\n    );\n    setLeave(data._document.data.value.mapValue.fields.leaveQuota.stringValue);\n\n  };\n\n  console.log(employees);\n\n  if (employees.length === 0) {\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  } else {\n    const employeename =\n      employees._document.data.value.mapValue.fields.firstName.stringValue +\n      \" \" +\n      employees._document.data.value.mapValue.fields.lastName.stringValue;\n    console.log(employeename + \" hello\" + employeename);\n    return (\n      <div className=\"list\" rowspacing={3}>\n        <div\n          style={{\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\n          }}\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n            alt=\"\"\n            height={200}\n            width={200}\n          />\n          <h1>\n            {\n              employees._document.data.value.mapValue.fields.firstName\n                .stringValue\n            }{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.lastName\n                .stringValue\n            }\n          </h1>\n        </div>\n        <div>\n          <h3>\n            <AddIcCallIcon></AddIcCallIcon> Phone number:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.phoneNum\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <AddLocationIcon></AddLocationIcon> Location:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.location\n                .stringValue\n            }\n          </h3>\n          <h3>\n            <CakeIcon></CakeIcon> Date of Birth:{\" \"}\n            {employees._document.data.value.mapValue.fields.dob.stringValue}\n          </h3>\n          <h3>\n            <WorkIcon></WorkIcon> Work Experience:{\" \"}\n            {employees._document.data.value.mapValue.fields.workExp.stringValue}\n          </h3>\n          <h3>\n            <DateRangeIcon></DateRangeIcon> Available Leaves:{\" \"}\n            {leaves}\n          </h3>\n          <h3>\n            <PaidIcon></PaidIcon> Salary for the Month: {totalsalary}\n          </h3>\n          <Button variant=\"outlined\" onClick={handleClickOpen}>\n            add new payroll\n          </Button>\n          <Button variant=\"outlined\" onClick={handleClickOpen2}>\n            set leave quota\n          </Button>\n          <BootstrapDialog\n            onClose={handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={open}\n          >\n            <BootstrapDialogTitle\n              id=\"customized-dialog-title\"\n              onClose={handleClose}\n            >\n              Add a Payroll\n            </BootstrapDialogTitle>\n            <DialogContent dividers>\n              <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                <TextField\n                  value={rate}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"rate\"\n                  label=\"Daily Salary\"\n                  name=\"rate\"\n                  autoComplete=\"rate\"\n                  autoFocus\n                  onChange={(e) => {\n                    console.log(isNaN(e.target.value));\n                    if (!isNaN(e.target.value)) {\n                      setRate(Number(e.target.value));\n                      setOverall(e.target.value * days + overtime - deductions);\n                    } else {\n                      alert(\"please enter a number!\");\n                    }\n                  }}\n                />\n\n                <TextField\n                  value={days}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"days\"\n                  label=\"Number of Days Attended\"\n                  name=\"days\"\n                  autoComplete=\"days\"\n                  autoFocus\n                  onChange={(e) => {\n                    if (!isNaN(e.target.value)) {\n                    setDays(Number(e.target.value));\n                    setOverall(\n                      rate * e.target.value + overtime * hourly - deductions\n                    );\n                    }\n                    else {\n                       alert(\"please enter a number!\");\n                    }\n                  }}\n                />\n                <TextField\n                  value={hourly}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"hourly\"\n                  label=\"Hourly Salary for Overtime\"\n                  name=\"hourly\"\n                  autoComplete=\"hourly\"\n                  autoFocus\n                  onChange={(e) => {\n                     if (!isNaN(e.target.value)) {\n                    setHourly(Number(e.target.value));\n                    setOverall(\n                      rate * days + overtime * e.target.value - deductions\n                    );\n                     }\n                     else {\n                       alert(\"please enter a number!\");\n                     }\n                  }}\n                />\n                <TextField\n                  value={overtime}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"overtime\"\n                  label=\"Overtime Hours\"\n                  name=\"overtime\"\n                  autoComplete=\"overtime\"\n                  autoFocus\n                  onChange={(e) => {\n                      if (!isNaN(e.target.value)) {\n                    setOvertime(Number(e.target.value));\n                    setOverall(\n                      rate * days + Number(e.target.value) * hourly - deductions\n                    );\n                      }\n                      else {\n                        alert(\"please enter a number!\");\n                      }\n                  }}\n                />\n                <TextField\n                  value={deductions}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"deductions\"\n                  label=\"Deductions\"\n                  id=\"deductions\"\n                  onChange={(e) => {\n                      if (!isNaN(e.target.value)) {\n                    setDeductions(Number(e.target.value));\n                    setOverall(\n                      rate * days + overtime * hourly - e.target.value\n                    );\n                      }\n                      else {\n                        alert(\"please enter a number!\")\n                      }\n                  }}\n                />\n                <h3>The overall monthly salary is: {overall}</h3>\n              </Box>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  setTotalsalary(overall);\n                  console.log(employeename);\n                  sendPayroll(\n                    rate,\n                    days,\n                    hourly,\n                    overtime,\n                    deductions,\n                    overall,\n                    employeename,\n                    employer\n                  );\n                  handleClose();\n                }}\n              >\n                SUBMIT\n              </Button>\n            </DialogActions>\n          </BootstrapDialog>\n          <BootstrapDialog\n            onClose={handleClose2}\n            aria-labelledby=\"customized-dialog-title\"\n            open={open2}\n          >\n            <BootstrapDialogTitle\n              id=\"customized-dialog-title\"\n              onClose={handleClose2}\n            >\n              Set Leave Quota for the Year\n            </BootstrapDialogTitle>\n            <DialogContent dividers>\n              <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                <TextField\n                  value={leaves}\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"leaves\"\n                  label=\"Set Leave Quota\"\n                  name=\"leaves\"\n                  autoComplete=\"leaves\"\n                  autoFocus\n                  onChange={(e) => {\n                    console.log(isNaN(e.target.value));\n                    if (!isNaN(e.target.value)) {\n                      setLeave(Number(e.target.value));\n                    } else {\n                      alert(\"please enter a number!\");\n                    }\n                  }}\n                />\n              </Box>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  setQuota(employer, employeename, leaves);\n                  handleClose2();\n                }}\n              >\n                SUBMIT\n              </Button>\n            </DialogActions>\n          </BootstrapDialog>\n        </div>\n      </div>\n    );\n  }\n\n  //console.log(employees);\n}\n\n/*const mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const Employees = state.firestore.data.Employees;\n  const employee = Employees[id];\n  return { employee: employee };\n};*/\n\n/*export default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"Employees\" }])\n)(Individual);*/\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Individual from \"./Individual\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Cards(props) {\n  return (\n    <div>\n      <Item>\n        <Card sx={{ maxWidth: 345 }}>\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n              alt=\"\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {props.fullname}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      </Item>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { CardActionArea } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { db } from \"./firebaseini\";\nimport { useState } from \"react\";\nimport Cards from \"./cards\";\nimport { useAuth } from \"./useAuth\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"./employeeserver\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\n  \n\n\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === \"dark\" ? \"#1A2027\" : \"#fff\",\n  ...theme.typography.body2,\n  padding: theme.spacing(0),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\nconst EmployeesList = ({ getEmployeeId }) => {\n  const { user } = useAuth();\n  const [employees, setEmployees] = useState([]);\n  const [name, setName] = useState([]);\n  const [errormessage, setErrormessage] = useState();\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  const getEmployees = async () => {\n    if (user) {\n      let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n      console.log(user.email);\n      call1 = call1 + \"email=\" + user.email;\n      let result = await (await fetch(call1)).json();\n      console.log(result.name);\n      setName(result.name);\n      let call = \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n      call = call + \"employerName=\" + result.name;\n      let returned = await (await fetch(call)).json();\n      if (returned.status == \"error\") {\n        setErrormessage(\"You currently have no employees!\");\n      }\n      setEmployees(\n        returned.body.map((doc) => ({\n          ...doc,\n          id: doc,\n        }))\n      );\n    }\n  };\n\n  const changeAllQuota = async(employerName, value) =>{\n    let call = \"https://businessaide-backend.herokuapp.com/changeAllQuota/?\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"value=\" + value;\n    let result = await (await fetch(call)).json();\n    alert(result.reason);\n  }\n\n  const [open, setOpen] = React.useState(false);\nconst [quota, setQuota] = useState();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /* \n  const deleteHandler = async (id) => {\n    await deleteEmployee(id);\n    getEmployees();\n  }; */\n\n  /*   {namecards.map(({ id, data: { Firstname, Lastname, TeamLeader } }) => (\n        <Cards\n          key={id}\n          Firstname={Firstname}\n          Lastname={Lastname}\n          TeamLeader={TeamLeader}\n        />\n      ))} */\n\n  return errormessage ? (\n    <h1>{errormessage}</h1>\n  ) : employees.length == 0 ? (\n    <div>loading...</div>\n  ) : (\n    <div>\n       <div style={{color: \"white\"}}>hello</div>\n <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Set a Leave Quota for All Employees\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Set the Leave Quota</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n           Please set an annual leave quota for all the employees. You may also choose to do that for each employee by clicking on each employee.\n          </DialogContentText>\n          <TextField\n            value={quota}\n            autoFocus\n            margin=\"dense\"\n            id=\"quota\"\n            label=\"Annual Leave Quota\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e)=>{setQuota(e.target.value)}}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{changeAllQuota(name, quota); handleClose()}}>Set Leave Quota</Button>\n          <Button onClick={handleClose}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n      <div style={{color: \"white\"}}>hello</div>\n      <Grid\n        container\n        rowSpacing={1}\n        columns={12}\n        columnSpacing={{\n          xs: 2,\n          sm: 2,\n          md: 3,\n        }}\n      >\n        {employees.map((doc, index) => {\n          console.log(doc);\n          return (\n            <Grid item xs={3} key={doc.name}>\n              <Link\n                to={\"/Individual/\" + doc.name}\n                style={{\n                  textDecoration: \"none\",\n                  color: \"black\",\n                }}\n                key={doc.name}\n              >\n                <Cards\n                  key={doc.name}\n                  id={doc.name}\n                  index={index + 1}\n                  fullname={doc.name}\n                  employer={name}\n                />\n              </Link>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n};\n\nexport default EmployeesList;\n","import React from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport { createTheme } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { config as firebaseConfig } from \"./config\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nexport default function Welcome() {\n  const theme = createTheme({\n    typography: {\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n    },\n  });\n\n  const app = initializeApp(firebaseConfig);\n  const db = getFirestore(app);\n  const auth = getAuth();\n  const user = auth.currentUser;\n  //const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n  // const docs = await getDocs(q);\n  const [username, setUsername] = useState();\n  const [secretcode, setSecretCode] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/getSecretCode/?\";\n    call2 = call2 + \"employerName=\" + result.name;\n    let result2 = await (await fetch(call2)).json();\n    setSecretCode(result2);\n  };\n\n  \n  useEffect(() => {\n    FindUserType(user.email);\n  }, []);\n  //console.log(user.uid);\n  return username&&secretcode ? (\n    <ThemeProvider theme={theme}>\n      <div>\n        <h1>Welcome {username}!</h1>\n        <List>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography\n                sx={{\n                  fontFamily: '\"Segoe UI\"',\n                }}\n                variant=\"h6\"\n              >\n                To view or add payroll, please go to the \"payroll\" page and\n                click on each salary. You will be able to create new payroll\n                there\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To create a task, please go to the \"add task\" page and fill in\n                all the fields\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To view each individual task, please to go to the \"view task\"\n                page and click on each of the task\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To create a subtask, please set the goal as a number\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To increase the task progress, please enter a number and click\n                \"increase progress by\"\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                Your Secret Code is : {secretcode}\n              </Typography>\n            </Card>\n          </ListItem>\n        </List>\n      </div>\n    </ThemeProvider>\n  ) : (\n    <div>loading...</div>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\n\nconst handleSubmit = async (taskname, description, employer, people) => {\n  if (taskname!==\"\") {\n  let call = \"https://businessaide-backend.herokuapp.com/createMainTask/?\";\n  call = call + \"taskname=\" + taskname + \"&\"; // do this for each parameter you want to send\n  call = call + \"description=\" + description + \"&\";\n  call = call + \"employer=\" + employer + \"&\";\n  call = call + \"people=\" + people;\n  let result;\n  result = await (await fetch(call)).json();\n  console.log(result.reason);\n  alert(result.reason);\n} else {\n  alert(\"please enter a taskname\")\n\n}}\nexport default handleSubmit;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useEffect } from \"react\";\nimport EmployeeDataService from \"../employeeserver\";\nimport { useAuth } from \"../useAuth\";\nimport MenuItem from \"@mui/material/MenuItem\";\n\nimport Select from \"@mui/material/Select\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateTask() {\n  const [employees, setEmployees] = useState([]);\n  const theme = useTheme();\n  const [employername, setEmployername] = useState();\n  const { user } = useAuth();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployername(result.name);\n    let employerreturned = result.name;\n    getEmployees(employerreturned);\n  };\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  const names = employees.map(function(employee) {\n    return employee.name;\n  });\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n  const getEmployees = async (employer) => {\n    let calltask = \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n    calltask = calltask + \"employerName=\" + employer;\n    let callresult = await (await fetch(calltask)).json();\n    console.log(callresult.body);\n    setEmployees(callresult.body);\n  };\n  const [personName, setPersonName] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [people, setPeople] = useState();\n  const [description, setDescription] = useState();\n  const [employer, setEmployer] = useState([]);\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\n            Add New Task\n          </Typography>\n          <Typography variant=\"body2\">\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n              New Task\n            </Button>\n            <BootstrapDialog\n              onClose={handleClose}\n              aria-labelledby=\"customized-dialog-title\"\n              open={open}\n            >\n              <BootstrapDialogTitle\n                id=\"customized-dialog-title\"\n                onClose={handleClose}\n              >\n                Create a New Task\n              </BootstrapDialogTitle>\n              <DialogContent dividers>\n                <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                  <TextField\n                    value={task}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"task\"\n                    label=\"Task Name\"\n                    name=\"task\"\n                    autoComplete=\"task\"\n                    autoFocus\n                    onChange={(e) => setTask(e.target.value)}\n                  />\n                  <TextField\n                    value={description}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"description\"\n                    label=\"Task Description\"\n                    name=\"description\"\n                    autoComplete=\"description\"\n                    autoFocus\n                    onChange={(e) => setDescription(e.target.value)}\n                  />\n                  {console.log(employees)}\n                  <FormControl\n                    required\n                    fullwidth\n                    sx={{\n                      ml: 0,\n                      mt: 2,\n                      width: 568,\n                    }}\n                  >\n                    <InputLabel id=\"demo-multiple-name-label\">\n                      Employees Assigned\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-multiple-name-label\"\n                      id=\"demo-multiple-name\"\n                      multiple\n                      value={personName}\n                      onChange={handleChange}\n                      input={<OutlinedInput label=\"Name\" />}\n                      MenuProps={MenuProps}\n                    >\n                      {names.length != 0 ? (\n                        names.map((name) => (\n                          <MenuItem\n                            key={name}\n                            value={name}\n                            style={getStyles(name, personName, theme)}\n                          >\n                            {name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        <div>loading...</div>\n                      )}\n                    </Select>\n                  </FormControl>\n                  {console.log(personName)}\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  autoFocus\n                  onClick={() => {\n                    console.log(personName);\n                    console.log(task);\n                    personName.length == 0 ||\n                    task === undefined ||\n                    description === undefined ||\n                    employername === undefined\n                      ? alert(\"please complete all required fields\")\n                      : handleSubmit(\n                          task,\n                          description,\n                          employername,\n                          personName\n                        );\n                    handleClose();\n                  }}\n                >\n                  Create Task\n                </Button>\n              </DialogActions>\n            </BootstrapDialog>\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from '@mui/material/styles';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\n//import subtaskSubmit from \"./subtasksubmit\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateSubtask({\n  setIsupdated,\n  isUpdated,\n  maintask,\n  people,\n}) {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  const [personName, setPersonName] = React.useState([]);\n  const names = people;\n  console.log(names);\n  const theme = useTheme();\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n    console.log(personName);\n  };\n  let localerror = -2;\n\n  const [feedback, setFeedback] = useState(-2);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [description, setDescription] = useState();\n  const [goal, setGoal] = useState(1);\n  const [employername, setEmployername] = useState();\n  const { user } = useAuth();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployername(result.name);\n  };\n\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n  const subtaskSubmit = async (\n    subTaskName,\n    subTaskDesc,\n    goal,\n    mainTaskName,\n    employerName,\n    workerArray\n  ) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    console.log(workerArray);\n    let call = \"https://businessaide-backend.herokuapp.com/createSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\"; // do this for each parameter you want to send\n    call = call + \"subTaskDesc=\" + subTaskDesc + \"&\";\n    call = call + \"goal=\" + goal + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"workerArray=\" + workerArray;\n    let result = await (await fetch(call)).json();\n    alert(result.reason);\n    setFeedback(result);\n    localerror = result;\n  };\n  //useEffect(()=>{\n  //console.log(props.people)\n  //setNames(props.people);\n  // },[])\n  return (\n    <div>\n      <span style={{ color: \"white\" }}> hahahahahahaa </span>\n     \n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 760,\n        }}\n      >\n        New Subtask\n      </Button>\n   \n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Create a New Subtask\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={task}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"task\"\n              label=\"Task Name\"\n              name=\"task\"\n              autoComplete=\"task\"\n              autoFocus\n              onChange={(e) => setTask(e.target.value)}\n            />\n            <TextField\n              value={description}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"description\"\n              label=\"Task Description\"\n              name=\"description\"\n              autoComplete=\"description\"\n              autoFocus\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <FormControl required fullwidth sx={{ ml: 0, mt: 2, width: 568 }}>\n              <InputLabel id=\"demo-multiple-name-label\">\n                Employees Assigned\n              </InputLabel>\n              <Select\n                labelId=\"demo-multiple-name-label\"\n                id=\"demo-multiple-name\"\n                multiple\n                value={personName}\n                onChange={handleChange}\n                input={<OutlinedInput label=\"Name\" />}\n                MenuProps={MenuProps}\n              >\n                {names.length === 0\n                  ? \"loading\"\n                  : names.map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        style={getStyles(name, personName, theme)}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n              </Select>\n            </FormControl>\n            {console.log(personName)}\n            <TextField\n              InputProps={{\n                inputProps: { min: 1 },\n              }}\n              value={goal}\n              margin=\"normal\"\n              type=\"number\"\n              min=\"1\"\n              required\n              fullWidth\n              name=\"goal\"\n              label=\"Task Goal (please enter a positive integer)\"\n              id=\"goal\"\n              onChange={(e) => {\n                if (!isNaN(e.target.value)) {\n                  setGoal(Number(e.target.value));\n                } else {\n                  alert(\"please enter a positive integer\");\n                }\n              }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              personName.length == 0 ||\n              task == undefined ||\n              description == undefined ||\n              goal <= 0 ||\n              employername === undefined\n                ? alert(\"please complete all required fields correctly\")\n                : subtaskSubmit(\n                    task,\n                    description,\n                    goal,\n                    maintask,\n                    employername,\n                    personName\n                  );\n              console.log(task);\n              console.log(personName);\n              console.log(feedback);\n              feedback === -1\n                ? alert(\"the employee is not found\")\n                : console.log(\"subtask added\");\n              handleClose();\n            }}\n          >\n            Create Task\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import { db } from \"../firebaseini\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\n\nconst taskCollectionRef = collection(db, \"employers/adam jerry/tasks\");\nclass TaskDataService {\n  addTask = (newTask) => {\n    return addDoc(taskCollectionRef, newTask);\n  };\n\n  deleteTask = (id) => {\n    const employeeDoc = doc(db, \"employers\", id);\n    return deleteDoc(employeeDoc);\n  };\n\n  getALLTask = () => {\n    return getDocs(taskCollectionRef);\n  };\n\n  printRef = () => {\n    return taskCollectionRef;\n  };\n\n  getTask = (id) => {\n    const EmployeeDoc = doc(db, \"employers\", id);\n    return getDoc(EmployeeDoc);\n  };\n}\n\nexport default new TaskDataService();\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./progressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport CreateTask from \"./createtask\";\nimport CreateSubtask from \"./createsubtask\";\nimport TaskDataService from \"./taskserver\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\n\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function OutlinedCard() {\n  window.onload = function() {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  var username;\n  var task = [];\n\n  const { user } = useAuth();\n  const [employerName, setEmployername] = useState();\n  const [errormessage, setErrormessage] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result.name;\n    setEmployername(result.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/displayTask/?\";\n    call2 = call2 + \"employerName=\" + username;\n    let result2 = await (await fetch(call2)).json();\n    console.log(result2);\n    if (result2.status == \"empty\") {\n      setErrormessage(\"There are no tasks\");\n    }\n    for (let i = 0; i < result2.body.length; i++) {\n      task[i] = result2.body[i];\n      setTasks((tasks) => [...tasks, result2.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + username;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n\n  const displayTask = async (employerName) => {\n    let call = \"https://businessaide-backend.herokuapp.com/displayTask/?\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    for (let i = 0; i < result.body.length; i++) {\n      task[i] = result.body[i];\n      setTasks((tasks) => [...tasks, result.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + employerName;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n  /* const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n */\n\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n\n  //useEffect(() => {\n  //console.log(task.length);\n  //for (let i = 0; i < task.length; i++) {\n  // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n  //}\n  //}, []);\n\n  //useEffect(()=>{\n  // console.log(tasks);\n\n  //}, [tasks]);\n\n  useEffect(() => {\n    console.log(tasks);\n    console.log(progress);\n  }, [tasks]);\n\n  /*if (tasks.length === 0) {\n    return <div>loading...</div>;\n  }*/\n  return errormessage ? (\n    <h1>{errormessage}</h1>\n  ) : tasks.length == 0 ? (\n    <div>loading...</div>\n  ) : (\n    <div>\n      <h1>Task Page</h1>\n      <Grid\n        container\n        rowSpacing={20}\n        columns={12}\n        columnSpacing={{\n          xs: 2,\n          sm: 2,\n          md: 3,\n        }}\n      >\n        {tasks.map((doc, index) => {\n          return (\n            <Grid item xs={3}>\n              <Card sx={{ maxWidth: 345 }}>\n                <CardContent>\n                  <Typography\n                    sx={{\n                      fontSize: 20,\n                    }}\n                    color=\"text.secondary\"\n                    gutterBottom\n                  >\n                    Current Task\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"div\">\n                    {doc ? doc : \"loading\"}\n                  </Typography>\n                  <Typography variant=\"body2\">\n                    {progress[index] ? (\n                      <ProgressBar\n                        bgcolor={\"#6a1b9a\"}\n                        completed={Math.round((progress[index] / 1) * 100)}\n                      />\n                    ) : (\n                      <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />\n                    )}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Link\n                    to=\"/task/singletask\"\n                    state={doc}\n                    style={{\n                      textDecoration: \"none\",\n                      color: \"blue\",\n                    }}\n                  >\n                    View Task\n                  </Link>\n                  <span\n                    style={{\n                      color: \"white\",\n                    }}\n                  >\n                    hahahaha\n                  </span>\n                </CardActions>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItem from \"@mui/material/ListItem\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Slide from \"@mui/material/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  console.log(props.feedback);\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 680,\n        }}\n      >\n        View Feedback from Employees\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar sx={{ position: \"relative\" }}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n              Feedback\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <List>\n          {props.feedback.map((doc) => {\n            return (\n              <div>\n                <ListItem button>\n                  <ListItemText\n                    primary={doc.feedback}\n                    secondary={doc.employee}\n                  />\n                </ListItem>\n                <Divider />\n              </div>\n            );\n          })}\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./progressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport handleSubmit from \"./handlesubmit\";\nimport { Divider, Grid, List, ListItem, TextField } from \"@mui/material\";\nimport CreateSubtask from \"./createsubtask\";\nimport FullScreenDialog from \"./viewfeedback\";\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function BasicCard(props) {\n  const [feedback, setFeedback] = useState([]);\n  const [subtasks, setSubTasks] = useState([]);\n  let subtasktemp = [];\n  const [employername, setEmployername] = useState();\n  const [description, setDescription] = useState([]);\n  const [mainworkers, setMainWorkers] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  const [isUpdated, setIsupdated] = useState(false);\n  var tempprogress = 0;\n  var progresstemp = [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    setEmployername(result1.name);\n    console.log(username);\n    let call = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + username;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainProgress(result.body);\n    console.log(mainprogress);\n  };\n\n  const calculateprogress = (subtasks, status, progress, goal) => {\n    var subTaskProgress = 0;\n    var subTaskCounter = 0;\n    tempprogress = mainprogress;\n    for (let i = 0; i < subtasks.length; i++) {\n      if (status[i] == \"finished\") {\n        subTaskProgress += 1;\n        subTaskCounter += 1;\n      } else {\n        subTaskProgress += progress[i] / goal[i];\n        subTaskCounter += 1;\n      }\n    }\n    tempprogress = subTaskProgress / subTaskCounter;\n    if (tempprogress === 0) {\n      tempprogress = 0;\n    }\n    setMainProgress(tempprogress);\n  };\n\n  var username;\n  const viewMainTask = async (mainTaskName, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    setEmployername(result1.name);\n    viewMainTaskFeedback(mainTaskName, result1.name);\n    let call = \"https://businessaide-backend.herokuapp.com/getMainTaskData/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + username;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainDescription(result.body.description);\n    setMainStatus(result.body.status);\n    setSubTasks(result.body.subtasks);\n    setMainWorkers(result.body.workers);\n    subtasktemp = result.body.subtasks;\n    console.log(subtasktemp);\n    setDescription([]);\n    setWorkers([]);\n    setGoal([]);\n    setStatus([]);\n    setProgress([]);\n    for (let i = 0; i < subtasktemp.length; i++) {\n      let call = \"https://businessaide-backend.herokuapp.com/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subtasktemp[i] + \"&\";\n      call = call + \"mainTaskName=\" + maintask + \"&\";\n      call = call + \"employerName=\" + result1.name;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [\n        ...description,\n        result.body.description,\n      ]);\n      setWorkers((workers) => [...workers, result.body.workers]);\n      setGoal((goal) => [...goal, result.body.goal]);\n      setProgress((progress) => [...progress, result.body.progress]);\n      setStatus((status) => [...status, result.body.status]);\n      console.log(subtasks);\n    }\n  };\n  useEffect(() => {\n    if (user) {\n      viewMainTask(maintask, user.email);\n      mainTaskProgress(maintask, user.email);\n    }\n  }, [isUpdated]);\n\n  /*useEffect(() => {\n    console.log(mainprogress);\n    console.log(mainworkers);\n  }, [mainprogress, mainworkers]);\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n*/\n  /*useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n      \n      \n    };\n   // for (let i = 0; i < subtasks.length; i++) {\n     // viewSubTask(subtasks[i],maintask,\"adam jerry\")\n      \n    //}\n    //console.log(progress);\n    \n  }, [maintask, subtasks]);*/\n\n  /*useEffect(() => {\n    //progresstemp = progress;\n    console.log(progress);\n  }, [progress]);\n*/\n  const viewMainTaskFeedback = async (mainTaskName, employerName) => {\n    let call = \"https://businessaide-backend.herokuapp.com/viewMainTaskFeedback/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setFeedback(result.body);\n\n    //setProgress(progress[index]+1);\n  };\n  const subTaskProgress = async (\n    subTaskName,\n    value,\n    mainTaskName,\n    employerName,\n    index\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    alert(result.reason);\n    //setProgress(progress[index]+1);\n  };\n\n  const completeSubTask = async (\n    subTaskName,\n    mainTaskName,\n    employerName,\n    email\n  ) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n    viewMainTask(mainTaskName, email);\n    mainTaskProgress(mainTaskName, email);\n  };\n\n  const completeMainTask = async (mainTaskName, employerName, email) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    console.log(email);\n    let call = \"https://businessaide-backend.herokuapp.com/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    viewMainTask(mainTaskName, email);\n    mainTaskProgress(mainTaskName, email);\n  };\n\n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Workers Allocated\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainworkers.length === 0\n            ? \"loading\"\n            : mainworkers.map((worker) => worker + \"  \")}\n        </Typography>\n        <ProgressBar\n          bgcolor={\"#1976d2\"}\n          completed={\n            mainprogress > 1 ? 100 : Math.round((mainprogress / 1) * 100)\n          }\n        />\n        <Button\n          onClick={() => {\n            completeMainTask(maintask, employername, user.email);\n          }}\n        >\n          Mark as Finished\n        </Button>\n        {mainworkers.length === 0 ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <List>\n              <ListItem>\n                <CreateSubtask\n                  setIsupdated={setIsupdated}\n                  isUpdated={isUpdated}\n                  maintask={maintask}\n                  people={mainworkers}\n                />\n              \n              </ListItem>\n              <ListItem>\n                <FullScreenDialog feedback={feedback} />\n              </ListItem>\n            </List>\n          </div>\n        )}\n        <div style={{ color: \"white\" }}>hahahah</div>\n        <Grid>\n          {subtasks.map((task, index) => {\n            return (\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography>{task}</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>\n                    <div>Task Description: {description[index]}</div>\n                    <div>workers allocated: {workers[index]}</div>\n                    <div>goal: {goal[index]}</div>\n\n                    <div>\n                      {\"progress\"}\n                      <ProgressBar\n                        bgcolor={\"#6a1b9a\"}\n                        completed={\n                          (progress[index] / goal[index]) * 100 >= 100\n                            ? 100\n                            : (progress[index] / goal[index]) * 100\n                        }\n                      ></ProgressBar>\n                    </div>\n                    <div>\n                      <TextField\n                        value={Number(newValue)}\n                        type=\"text\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Increase New Progress by\"\n                        autoFocus\n                        onChange={(e) => {\n                          if (!isNaN(e.target.value)) {\n                            setnewValue(e.target.value);\n                          } else {\n                            alert(\"please enter a number\");\n                          }\n                        }}\n                      />\n\n                      <Button\n                        onClick={() => {\n                          setProgress((existingItems) => {\n                            return [\n                              ...existingItems.slice(0, index),\n                              existingItems[index] + Number(newValue),\n                              ...existingItems.slice(index + 1),\n                            ];\n                          });\n                          console.log(username);\n                          subTaskProgress(\n                            task,\n                            newValue,\n                            maintask,\n                            employername,\n                            index\n                          );\n                          progresstemp = progress;\n                          progresstemp[index] += Number(newValue);\n                          {\n                            if (progresstemp[index] >= goal[index]) {\n                              setStatus((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  \"finished\",\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n                            }\n                          }\n                          calculateprogress(\n                            subtasks,\n                            status,\n                            progresstemp,\n                            goal\n                          );\n                          setMainProgress(tempprogress);\n                          console.log(tempprogress);\n\n                          // mainTaskProgress(maintask, \"adam jerry\")\n                        }}\n                      >\n                        Increase Progress\n                      </Button>\n                    </div>\n                    <div>status: {status[index]}</div>\n                  </Typography>\n                  <Button\n                    onClick={() => {\n                      completeSubTask(task, maintask, employername, user.email);\n                      setStatus((existingItems) => {\n                        return [\n                          ...existingItems.slice(0, index),\n                          \"finished\",\n                          ...existingItems.slice(index + 1),\n                        ];\n                      });\n                    }}\n                  >\n                    Mark as Finished\n                  </Button>\n                </AccordionDetails>\n              </Accordion>\n            );\n          })}\n        </Grid>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Collapse from '@mui/material/Collapse';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport DraftsIcon from '@mui/icons-material/Drafts';\nimport SendIcon from '@mui/icons-material/Send';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport StarBorder from '@mui/icons-material/StarBorder';\nimport { useEffect } from \"react\";\nimport { db } from \"../firebaseini\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport EmployeeDataService from \"../employeeserver\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {IconButton} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from '@mui/icons-material/Paid';\nimport {TextField} from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n  arrayRemove,\n} from \"firebase/firestore\";\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n    \"& .MuiDialogContent-root\": {\n      padding: theme.spacing(2),\n    },\n    \"& .MuiDialogActions-root\": {\n      padding: theme.spacing(1),\n    },\n  }));\n  \n  const BootstrapDialogTitle = (props) => {\n    const { children, onClose, ...other } = props;\n  \n    return (\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n        {children}\n        {onClose ? (\n          <IconButton\n            aria-label=\"close\"\n            onClick={onClose}\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n    );\n  };\n  \n  BootstrapDialogTitle.propTypes = {\n    children: PropTypes.node,\n    onClose: PropTypes.func.isRequired,\n  };\nconst employeeCollectionRef = collection(db, \"Employees\");\nconst Showpayroll = (props) => {\n  let [employeenames, setEmployeenames] = useState([]);\n  const [rate, setRate] = useState(0);\n  const [hourly, setHourly] = useState(0);\n  const [days, setDays] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n  const [deductions, setDeductions] = useState(0);\n  const [overall, setOverall] = useState(0);\n\n  let feedback;\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  let totalsalary = 0;\n  const [total, setTotal] = useState(0);\n  const [errormessage, setErrormessage] = useState();\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    getEmployees(props.name);\n  }, []);\n  useEffect(() => {\n    console.log(employees);\n  }, [employees]);\n  const sendPayroll = async (\n    dailySalary,\n    daysAttended,\n    overtimeHourlyRate,\n    overtimeHours,\n    deductions,\n    overallSalary,\n    employeeName,\n    employerName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendPayroll/?\";\n    call = call + \"dailySalary=\" + dailySalary + \"&\";\n    call = call + \"daysAttended=\" + daysAttended + \"&\";\n    call = call + \"overtimeHourlyRate=\" + overtimeHourlyRate + \"&\";\n    call = call + \"overtimeHours=\" + overtimeHours + \"&\";\n    call = call + \"deductions=\" + deductions + \"&\";\n    call = call + \"overallSalary=\" + overallSalary + \"&\";\n    call = call + \"employeeName=\" + employeeName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    feedback = result;\n    alert(feedback.reason);\n  };\n  const getEmployees = async (employerName) => {\n    let call = \"https://businessaide-backend.herokuapp.com/getAllEmployeeSalary/?\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    let result = await (await fetch(call)).json();\n    if (result.status == \"error\") {\n      setErrormessage(\"You currently have no employees!\");\n    }\n    console.log(result.body);\n    setEmployees(\n      result.body.map((doc) => ({\n        ...doc,\n        id: doc.name,\n      }))\n    );\n    setEmployeenames(\n      result.body.map((doc) => ({\n        ...doc.id,\n        id: doc.name,\n      }))\n    );\n  };\n\n  return (\n    <List\n      sx={{\n        width: \"100%\",\n        maxWidth: 1600,\n        bgcolor: \"background.paper\",\n      }}\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      subheader={\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n          Payroll for the Month\n        </ListSubheader>\n      }\n    >\n      <ListItemButton>\n        <ListItemIcon>\n          <SendIcon />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            employees.length === 0\n              ? \"\"\n              : \"Total salary for the month: \" +\n                employees\n                  .map((element) => Number(element.overallSalary))\n                  .reduce((a, b) => a + b, 0)\n          }\n        />\n      </ListItemButton>\n      {errormessage ? (\n        <h1>{errormessage}</h1>\n      ) : employees.length == 0 ? (\n        <div>loading...</div>\n      ) : (\n        employees.map((doc) => {\n          console.log(doc);\n          return (\n            <Link\n              to={\"/Individual/\" + doc.name}\n              style={{\n                textDecoration: \"none\",\n                color: \"black\",\n              }}\n              key={doc}\n            >\n              <ListItemButton key={doc.name}>\n                <ListItemIcon>\n                  <SendIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={doc.name}\n                  secondary={\"salary for the month: \" + doc.overallSalary}\n                />\n              </ListItemButton>\n            </Link>\n          );\n        })\n      )}\n    </List>\n  );\n};\n\nexport default Showpayroll;","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useAuth } from './useAuth';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ViewApprovedLeave() {\r\n    const [error, setError] = useState();\r\n    const [leaves, setLeaves] = useState([]);\r\n    const ViewApprovedLeaves = async (status, email)=> {\r\n        let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\r\n        call1 = call1 + \"email=\" + email;\r\n        let result1 = await (await fetch(call1)).json();\r\n        let call = \"https://businessaide-backend.herokuapp.com/getLeaveByType/?\";\r\n        call = call + \"employerName=\" + result1.name + \"&\";\r\n        call = call + \"status=\" + status;\r\n        let result = await (await fetch(call)).json();\r\n        if (result.status == \"error\") {\r\n            setError(\"There is no approved leave\");\r\n        }\r\n        setLeaves(result.body);\r\n        console.log(result.body);\r\n    }\r\n    useEffect(() => {\r\n        if (user) {\r\n         ViewApprovedLeaves(\"accepted\", user.email);\r\n        }\r\n      }, []);\r\nconst {user} = useAuth();\r\nconst [open, setOpen] = React.useState(false);\r\nconst [open2, setOpen2] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClickOpen2 = () => {\r\n    setOpen2(true);\r\n  };\r\n  const handleClose2 = () => {\r\n    setOpen2(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <TableContainer component={Paper}>\r\n    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n      <TableHead>\r\n        <TableRow>\r\n        <TableCell>Status</TableCell>\r\n          <TableCell align=\"right\">Start Date</TableCell>\r\n          <TableCell align=\"right\">End Date</TableCell>\r\n          <TableCell align=\"right\">reason</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      {error ? (<h2>{error}</h2>) :\r\n      leaves.length == 0 ? (<div>loading...</div>) :\r\n      <TableBody>\r\n        {leaves.map((leave) => (\r\n          <TableRow\r\n            key={leave.startdate}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n          >\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {leave.status}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{leave.startdate}</TableCell>\r\n            <TableCell align=\"right\">{leave.enddate}</TableCell>\r\n            <TableCell align=\"right\">{leave.reason}</TableCell>\r\n            \r\n          </TableRow>\r\n        ))}\r\n   \r\n      </TableBody>\r\n}\r\n    </Table>\r\n  </TableContainer>\r\n        <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Approve the Leave?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Please click on \"Confirm\" to approve the leave application\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Confirm</Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    <div>\r\n    <Dialog\r\n        open={open2}\r\n        onClose={handleClose2}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Reject the Leave?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Please click on \"Confirm\" to reject the leave application\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose2}>Confirm</Button>\r\n          <Button onClick={handleClose2} autoFocus>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useAuth } from './useAuth';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ViewApprovedLeave() {\r\n    const {user} = useAuth();\r\n    const [employeeName, setEmployeeName] = useState();\r\n    const [employerName, setEmployerName] = useState();\r\n    const [error, setError] = useState();\r\n    const [leaves, setLeaves] = useState([]);\r\n    const acceptLeave = async (employeeName, employerName, startdate) => {\r\n        let call = \"https://businessaide-backend.herokuapp.com/acceptLeave/?\";\r\n        call = call + \"employeeName=\" + employeeName + \"&\";\r\n        call = call + \"employerName=\" + employerName + \"&\";\r\n        call = call + \"startdate=\" + startdate;\r\n        let result = await (await fetch(call)).json();\r\n        alert (result.reason);\r\n    }\r\n    const rejectLeave = async (employeeName, employerName, startdate) => {\r\n        let call = \"https://businessaide-backend.herokuapp.com/rejectLeave/?\";\r\n        call = call + \"employeeName=\" + employeeName + \"&\";\r\n        call = call + \"employerName=\" + employerName + \"&\";\r\n        call = call + \"startdate=\" + startdate;\r\n        let result = await (await fetch(call)).json();\r\n        alert (result.reason);\r\n    }\r\n    const ViewApprovedLeaves = async (status, email)=> {\r\n        let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\r\n        call1 = call1 + \"email=\" + email;\r\n        let result1 = await (await fetch(call1)).json();\r\n        setEmployerName(result1.name);\r\n        let call = \"https://businessaide-backend.herokuapp.com/getLeaveByType/?\";\r\n        call = call + \"employerName=\" + result1.name + \"&\";\r\n        call = call + \"status=\" + status;\r\n        let result = await (await fetch(call)).json();\r\n        if (result.status == \"error\") {\r\n            setError(\"There is no pending leave\");\r\n        }\r\n        setLeaves(result.body);\r\n        console.log(result.body);\r\n    }\r\n    useEffect(() => {\r\n        if (user) {\r\n         ViewApprovedLeaves(\"pending\", user.email);\r\n        }\r\n      }, []);\r\n\r\nconst [open, setOpen] = React.useState(false);\r\nconst [open2, setOpen2] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClickOpen2 = () => {\r\n    setOpen2(true);\r\n  };\r\n  const handleClose2 = () => {\r\n    setOpen2(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <TableContainer component={Paper}>\r\n    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n      <TableHead>\r\n        <TableRow>\r\n        <TableCell>Status</TableCell>\r\n          <TableCell align=\"right\">Start Date</TableCell>\r\n          <TableCell align=\"right\">End Date</TableCell>\r\n          <TableCell align=\"right\">reason</TableCell>\r\n          <TableCell align=\"right\">Action</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      {error ? (<h2>{error}</h2>) :\r\n      leaves.length == 0 ? (<div>loading...</div>) :\r\n      <TableBody>\r\n        {leaves.map((leave) => (\r\n          <TableRow\r\n            key={leave.startdate}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n          >\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {leave.status}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{leave.startdate}</TableCell>\r\n            <TableCell align=\"right\">{leave.enddate}</TableCell>\r\n            <TableCell align=\"right\">{leave.reason}</TableCell>\r\n            <TableCell align=\"right\">\r\n<Button onClick={handleClickOpen}>Approve</Button><Button onClick={handleClickOpen2}>Reject</Button></TableCell>\r\n<div>\r\n<Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n              {\"Approve the Leave?\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Please click on \"Confirm\" to approve the leave application\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={()=>{acceptLeave(leave.employeeName,employerName,leave.startdate);handleClose()}}>Confirm</Button>\r\n              <Button onClick={handleClose} autoFocus>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          </div>\r\n          <div>\r\n    <Dialog\r\n        open={open2}\r\n        onClose={handleClose2}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Reject the Leave?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Please click on \"Confirm\" to reject the leave application\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>{rejectLeave(leave.employeeName,employerName,leave.startdate);handleClose2()}}>Confirm</Button>\r\n          <Button onClick={handleClose2} autoFocus>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n          </TableRow>\r\n         \r\n        \r\n        ))}\r\n   \r\n      </TableBody>\r\n}\r\n    </Table>\r\n  </TableContainer>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useAuth } from './useAuth';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ViewRejectedLeave() {\r\n    const [error, setError] = useState();\r\n    const [leaves, setLeaves] = useState([]);\r\n    const ViewApprovedLeaves = async (status, email)=> {\r\n        let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\r\n        call1 = call1 + \"email=\" + email;\r\n        let result1 = await (await fetch(call1)).json();\r\n        let call = \"https://businessaide-backend.herokuapp.com/getLeaveByType/?\";\r\n        call = call + \"employerName=\" + result1.name + \"&\";\r\n        call = call + \"status=\" + status;\r\n        let result = await (await fetch(call)).json();\r\n        if (result.status == \"error\") {\r\n            setError(\"There is no approved leave\");\r\n        }\r\n        setLeaves(result.body);\r\n        console.log(result.body);\r\n    }\r\n    useEffect(() => {\r\n        if (user) {\r\n         ViewApprovedLeaves(\"rejected\", user.email);\r\n        }\r\n      }, []);\r\nconst {user} = useAuth();\r\nconst [open, setOpen] = React.useState(false);\r\nconst [open2, setOpen2] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClickOpen2 = () => {\r\n    setOpen2(true);\r\n  };\r\n  const handleClose2 = () => {\r\n    setOpen2(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <TableContainer component={Paper}>\r\n    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n      <TableHead>\r\n        <TableRow>\r\n        <TableCell>Status</TableCell>\r\n          <TableCell align=\"right\">Start Date</TableCell>\r\n          <TableCell align=\"right\">End Date</TableCell>\r\n          <TableCell align=\"right\">reason</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      {error ? (<h2>{error}</h2>) :\r\n      leaves.length == 0 ? (<div>loading...</div>) :\r\n      <TableBody>\r\n        {leaves.map((leave) => (\r\n          <TableRow\r\n            key={leave.startdate}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n          >\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {leave.status}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{leave.startdate}</TableCell>\r\n            <TableCell align=\"right\">{leave.enddate}</TableCell>\r\n            <TableCell align=\"right\">{leave.reason}</TableCell>\r\n            \r\n          </TableRow>\r\n        ))}\r\n   \r\n      </TableBody>\r\n}\r\n    </Table>\r\n  </TableContainer>\r\n        <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Approve the Leave?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Please click on \"Confirm\" to approve the leave application\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Confirm</Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    <div>\r\n    <Dialog\r\n        open={open2}\r\n        onClose={handleClose2}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Reject the Leave?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Please click on \"Confirm\" to reject the leave application\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose2}>Confirm</Button>\r\n          <Button onClick={handleClose2} autoFocus>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from \"react\";\nimport { useAuth } from \"./useAuth\";\nimport {\n  Link,\n  Route,\n  Routes,\n  BrowserRouter,\n  useNavigate,\n} from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/employeesignup.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport EmployeesList from \"./viewemployees\";\nimport Welcome from \"./Welcome\";\nimport { useState, useEffect } from \"react\";\nimport Individual from \"./Individual\";\nimport EmployeeDataService from \"./employeeserver\";\nimport OutlinedCard from \"./task/displaytask\";\nimport BasicCard from \"./task/singletask\";\nimport CreateTask from \"./task/createtask\";\nimport Showpayroll from \"./payroll/payroll\";\nimport ViewApprovedLeave from \"./viewapprovedleave\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport ViewLeave from \"./viewleave\"\nimport ViewRejectedLeave from \"./viewrejectedleave\";\n\nfunction Home(props) {\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const { signOutWithGoogle } = useAuth();\n  const auth = getAuth();\n  let nav = useNavigate();\n  const [employeeId, setEmployeeId] = useState(\"\");\n\n  const getEmployeeIdHandler = (id) => {\n    console.log(\"The ID of document to be edited: \", id);\n    setEmployeeId(id);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                BusinessAide\n              </Link>\n            </Typography>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/viewapprovedleave\"\n              >\n                View Approved Leaves\n              </Link>\n              </Button>\n              <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/viewrejectedleave\"\n              >\n                View Rejected Leaves\n              </Link>\n              </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/viewleave\"\n              >\n                View Pending Leaves\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/payroll/payroll\"\n              >\n                Payroll\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/viewemployees\"\n              >\n                Employees\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/displaytask\"\n              >\n                View Tasks\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/task/createtask\"\n              >\n                Add Tasks\n              </Link>\n            </Button>\n            <Button\n              onClick={() => {\n                signOutWithGoogle();\n                nav(\"/\");\n              }}\n              variant=\"outlined\"\n              sx={{\n                color: \"yellow\",\n                backgroundColor: \"orange\",\n                borderColor: \"green\",\n              }}\n            >\n              sign out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Routes>\n        <Route path=\"/\" element={<Welcome />} />\n        <Route\n          path=\"/viewemployees/*\"\n          element={<EmployeesList getEmployeeId={getEmployeeIdHandler} />}\n        />\n         <Route\n          path=\"/viewrejectedleave\"\n          element={<ViewRejectedLeave />}\n        />\n        <Route\n          path=\"/viewleave\"\n          element={<ViewLeave />}\n        />\n        <Route\n          path=\"/viewapprovedleave\"\n          element={<ViewApprovedLeave />}\n        />\n        <Route path=\"/Individual/:id\" element={<Individual />} />\n        <Route path=\"/task/displaytask\" element={<OutlinedCard />} />\n        <Route\n          path=\"/task/singletask\"\n          element={<BasicCard employName={props.name} />}\n        />\n        <Route path=\"/task/createtask\" element={<CreateTask />} />\n        <Route\n          path=\"/payroll/payroll\"\n          element={<Showpayroll name={props.name} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default Home;\n\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nexport default function Home() {\n  return (\n    <div>\n      <h1>Welcome to BusinessAide</h1>\n      <ListItem>\n        <Card>\n          <ListItemIcon>\n            <SendIcon />\n          </ListItemIcon>\n          <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n            Please go to Login page to sign in after registration, as\n            registeration does not sign you in\n          </Typography>\n        </Card>\n      </ListItem>\n      <List>\n        <ListItem>\n          <Card>\n            <ListItemIcon>\n              <SendIcon />\n            </ListItemIcon>\n            <Typography\n              sx={{\n                fontFamily: '\"Segoe UI\"',\n              }}\n              variant=\"h6\"\n            >\n              To register as an employer, please create your secret code and\n              advise your employees to key in the same secret code when they\n              sign up\n            </Typography>\n          </Card>\n        </ListItem>\n        <ListItem>\n          <Card>\n            <ListItemIcon>\n              <SendIcon />\n            </ListItemIcon>\n            <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n              To register as an employee, please key in the secret code your\n              employer gives you\n            </Typography>\n          </Card>\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { useAuth } from \"../../useAuth\";\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../../redux/employee.feature\";\nimport { useNavigate } from \"react-router-dom\";\n\n//import { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  updateProfile,\n} from \"firebase/auth\";\nimport Joi from \"joi-browser\";\nimport styled from \"styled-components\";\nconst Styles = styled.div`\n  background: lavender;\n  padding: 20px;\n  form {\n    background: white;\n    border: 1px solid #dedede;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 500px;\n    padding: 40px 50px;\n  }\n  button {\n    background-color: #ffffff;\n\n    padding: 10px;\n    border-radius: 10px;\n    -moz-border-radius: 10px;\n    -webkit-border-radius: 10px;\n    margin: auto;\n    width: 100px;\n    height: 50px;\n  }\n`;\n\nconst theme = createTheme();\nconst Submit = () => {\n  const {user} = useAuth();\n  const { registerWithEmailAndPassword } = useAuth();\n  const { signInWithGoogle } = useAuth();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [secretcode, setSecretCode] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [workExp, setWorkExp] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [phoneNum,setphoneNum] = useState(\"\");\n  const [username, setName] = useState(\"\");\n  const [loginerror, setError] = useState(\"\");\n  const [password, setPassword] = useState(null);\n  const [retypepassword, setRetypepassword] = useState(null);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n  // const register = (e) => {\n  // e.preventDefault();\n  //if (!username) alert(\"Please enter name\");\n  //registerWithEmailAndPassword(fullname, username, password);\n  //};\n   const { signOutWithGoogle } = useAuth();\n   async function register(event) {\n     event.preventDefault();\n\n     if (firstName == \"\") {\n       return alert(\"Please enter a full name\");\n     } else if (username === \"\") {\n       alert(\"please enter an email\");\n     } else if (password !== retypepassword) {\n       alert(\"passwords do not match\");\n     } else if (password.length < 6) {\n       alert(\"password must contain at least 6 characters/digits\");\n     } else {\n       // Create a new user with Firebase\n       let call = \"https://businessaide-backend.herokuapp.com/SendEmployer/?\";\n       call = call + \"firstName=\" + firstName + \"&\";\n       call = call + \"lastName=\" + lastName + \"&\";\n       call = call + \"secretCode=\" + secretcode;\n       let result = await (await fetch(call)).json();\n       if (result.status == \"error\") {\n        alert(result.reason);\n        return 0;\n       }\n       await registerWithEmailAndPassword(\n         firstName + \" \" + lastName,\n         username,\n         password\n       )\n         .then((userAuth) => {\n           // Update the newly created user with a display name and a picture\n           updateProfile(userAuth.user, {\n             displayName: firstName + \" \" + lastName,\n           })\n             .then(\n               // Dispatch the user information for persistence in the redux state\n               dispatch(\n                 login({\n                   email: userAuth.user.email,\n                   uid: userAuth.user.uid,\n                   displayName: firstName + \" \" + lastName,\n                 })\n               )\n             )\n             .catch((error) => {\n               console.log(error);\n               setError(error);\n             });\n         })\n         .catch((err) => {\n           // alert(err);\n         })\n         .then(signOutWithGoogle);\n       navigate(\"/\");\n      \n\n     }\n   }\n\n   /* const schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  const handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  }; */\n   return (\n     <ThemeProvider theme={theme}>\n       <Container component=\"main\" maxWidth=\"xs\">\n         <CssBaseline />\n         <Box\n           sx={{\n             marginTop: 8,\n             display: \"flex\",\n             flexDirection: \"column\",\n             alignItems: \"center\",\n           }}\n         >\n           <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n             <LockOutlinedIcon />\n           </Avatar>\n           <Typography component=\"h1\" variant=\"h5\">\n             Sign up\n           </Typography>\n           <Box\n             component=\"form\"\n             onSubmit={(e) => {\n               register(e);\n             }}\n             noValidate\n             sx={{ mt: 1 }}\n           >\n             <TextField\n               value={firstName}\n               margin=\"normal\"\n               required\n               fullWidth\n               name=\"firstname\"\n               label=\"Firstname\"\n               id=\"firstname\"\n               autoComplete=\"firstname\"\n               onChange={(e) => setFirstName(e.target.value)}\n             />\n             <TextField\n               value={lastName}\n               margin=\"normal\"\n               required\n               fullWidth\n               name=\"lastname\"\n               label=\"Lastname\"\n               id=\"lastname\"\n               autoComplete=\"lastname\"\n               onChange={(e) => setLastName(e.target.value)}\n             />\n\n             <TextField\n               value={username}\n               margin=\"normal\"\n               required\n               fullWidth\n               id=\"email\"\n               label=\"Email\"\n               name=\"email\"\n               autoComplete=\"email\"\n               autoFocus\n               onChange={(e) => setName(e.target.value)}\n             />\n             <TextField\n               value={secretcode}\n               margin=\"normal\"\n               required\n               fullWidth\n               name=\"secretcode\"\n               label=\"Secretcode\"\n               id=\"secretcode\"\n               onChange={(e) => setSecretCode(e.target.value)}\n             />\n             <TextField\n               value={password}\n               margin=\"normal\"\n               required\n               fullWidth\n               name=\"password\"\n               label=\"Password\"\n               type=\"password\"\n               id=\"password\"\n               autoComplete=\"current-password\"\n               onChange={(e) => setPassword(e.target.value)}\n             />\n             <TextField\n               value={retypepassword}\n               margin=\"normal\"\n               required\n               fullWidth\n               name=\"retypepassword\"\n               label=\"Re-enter Password\"\n               type=\"password\"\n               id=\"retypepassword\"\n               autoComplete=\"current-password\"\n               onChange={(e) => setRetypepassword(e.target.value)}\n             />\n             <Typography component=\"h3\" variant=\"h5\">\n               {loginerror}\n             </Typography>\n             <Button\n               type=\"submit\"\n               fullWidth\n               variant=\"contained\"\n               sx={{ mt: 3, mb: 2 }}\n             >\n               Sign Up\n             </Button>\n\n             <Grid container>\n               <Grid item xs></Grid>\n               <Grid item></Grid>\n             </Grid>\n           </Box>\n         </Box>\n       </Container>\n     </ThemeProvider>\n   );\n};\n\nexport default function EmployerSignup() {\n  return <Submit></Submit>;\n}\n","import { Link, Route, Routes, BrowserRouter } from \"react-router-dom\";\nimport SignInUser from \"./components/signin/signin.js\";\nimport CreateForm from \"./components/signup/employeesignup.js\";\nimport Home from \"./Home.js\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport \"./NavBar.css\";\nimport EmployerSignup from \"./components/signup/employersignup.js\";\n\nexport default function ButtonAppBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n              BusinessAide\n            </Link>\n          </Typography>\n          <Button color=\"inherit\"></Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/employersignup\"\n            >\n              Employer Register\n            </Link>\n          </Button>\n          <Button color=\"inherit\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signup/employeesignup\"\n            >\n              Employee Register\n            </Link>\n          </Button>\n          <Button\n            variant=\"outlined\"\n            sx={{\n              color: \"yellow\",\n              backgroundColor: \"orange\",\n              borderColor: \"green\",\n            }}\n          >\n            {\" \"}\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to=\"components/signin/signin\"\n            >\n              Login\n            </Link>\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Routes>\n        <Route\n          path=\"/components/signup/employersignup\"\n          element={<EmployerSignup />}\n        />\n        <Route path=\"/\" element={<Home />} />\n        <Route\n          path=\"components/signup/employeesignup\"\n          element={<CreateForm />}\n        />\n        <Route path=\"components/signin/signin\" element={<SignInUser />} />\n      </Routes>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    height: 20,\n    width: \"100%\",\n    backgroundColor: \"#e0e0de\",\n    borderRadius: 20,\n    margin: 5,\n  };\n\n  const fillerStyles = {\n    height: \"100%\",\n    width: `${completed}%`,\n    backgroundColor: bgcolor,\n    borderRadius: \"inherit\",\n    textAlign: \"right\",\n  };\n\n  const labelStyles = {\n    padding: 5,\n    color: \"white\",\n    fontWeight: \"bold\",\n  };\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{`${completed}%`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useEffect } from \"react\";\nimport Radio from \"@mui/material/Radio\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport FormLabel from \"@mui/material/FormLabel\";\n//import subtaskSubmit from \"./subtasksubmit\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function CreateFeedback(props) {\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  const [feedback, setFeedback] = React.useState();\n\n  const theme = useTheme();\n  function getStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let localerror = -2;\n\n  const [returned, setReturned] = useState(-2);\n  const [open, setOpen] = React.useState(false);\n  const [anonymousCheck, setAnonymousCheck] = useState(true);\n  const handleChange = (event) => {\n    setAnonymousCheck(event.target.value);\n  };\n  const feedbackSubmit = async (\n    employeeName,\n    employerName,\n    feedback,\n    anonymousCheck,\n    mainTaskName\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/sendFeedback/?\";\n    call = call + \"employeeName=\" + employeeName + \"&\"; // do this for each parameter you want to send\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"feedback=\" + feedback + \"&\";\n    call = call + \"anonymousCheck=\" + anonymousCheck + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName;\n    let result = await (await fetch(call)).json();\n    alert(result.reason);\n    setReturned(result.body);\n  };\n  //useEffect(()=>{\n  //console.log(props.people)\n  //setNames(props.people);\n  // },[])\n  return (\n    <div>\n      <span style={{ color: \"white\" }}> hahahahahahaa </span>\n      <Button\n        variant=\"outlined\"\n        onClick={handleClickOpen}\n        style={{\n          position: \"absolute\",\n          left: 617,\n        }}\n      >\n        Create Feedback\n      </Button>\n      <BootstrapDialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        fullWidth={true}\n      >\n        <BootstrapDialogTitle\n          id=\"customized-dialog-title\"\n          onClose={handleClose}\n        >\n          Create a Feedback\n        </BootstrapDialogTitle>\n        <DialogContent dividers>\n          <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n            <TextField\n              value={feedback}\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"feedback\"\n              label=\"Feedback\"\n              name=\"feedback\"\n              autoComplete=\"feedback\"\n              autoFocus\n              onChange={(e) => setFeedback(e.target.value)}\n            />\n          </Box>\n          <FormControl>\n            <FormLabel id=\"demo-controlled-radio-buttons-group\">\n              Anonymity\n            </FormLabel>\n            <RadioGroup\n              aria-labelledby=\"demo-controlled-radio-buttons-group\"\n              name=\"controlled-radio-buttons-group\"\n              value={anonymousCheck}\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value={true}\n                control={<Radio />}\n                label=\"Anonymous\"\n              />\n              <FormControlLabel\n                value={false}\n                control={<Radio />}\n                label=\"Non-anonymous\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => {\n              feedback === undefined ||\n              anonymousCheck === undefined ||\n              props.employeeName === undefined ||\n              props.employerName === [] ||\n              props.mainTaskName === undefined\n                ? alert(\"please complete all required fields\")\n                : feedbackSubmit(\n                    props.employeeName,\n                    props.employerName,\n                    feedback,\n                    anonymousCheck,\n                    props.mainTaskName\n                  );\n              //console.log(returned);\n              //</DialogActions>returned === -1\n              //</BootstrapDialog>? alert(\"the employee is not found\")\n              //: console.log(\"subtask added\");\n              handleClose();\n              console.log(anonymousCheck);\n            }}\n          >\n            Create Feedback\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport ProgressBar from \"./employeeprogressbar\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAuth } from \"firebase/auth\";\nimport { getDisplayName } from \"@mui/utils\";\nimport { Grid, ListItem, TextField } from \"@mui/material\";\nimport CreateSubtask from \"../task/createsubtask\";\nimport CreateFeedback from \"./employeefeedback\";\nimport { List } from \"@mui/material\";\n\nconst auth = getAuth();\nconst user = auth.currentUser;\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n\nexport default function Employeesingletask(props) {\n  const [subtasks, setSubTasks] = useState([]);\n  let subtasktemp = [];\n  const [description, setDescription] = useState([]);\n  const [mainworkers, setMainWorkers] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [goal, setGoal] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [mainprogress, setMainProgress] = useState(0);\n  const [localProgress, setLocalProgress] = useState([]);\n  const [status, setStatus] = useState([]);\n  const [mainstatus, setMainStatus] = useState([]);\n  const [maindescription, setMainDescription] = useState([]);\n  const location = useLocation();\n  const maintask = location.state;\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const name = user.fullname;\n  var employer;\n  var username;\n  var tempprogress = 0;\n  var progresstemp = [];\n  let temp = 0;\n  const [newValue, setnewValue] = useState(0);\n  const [employerName, setEmployername] = useState();\n  const [employeeName, setEmployeename] = useState();\n  const [isUpdated, setIsupdated] = useState(false);\n  var value = 0;\n  console.log(user);\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  const mainTaskProgress = async (tasks, email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    //setEmployeename(result1.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n    call2 = call2 + \"employeeName=\" + result1.name;\n    let result2 = await (await fetch(call2)).json();\n    employer = result2.employerName;\n    let call = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n    call = call + \"tasks=\" + tasks + \"&\";\n    call = call + \"employerName=\" + employer;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setMainProgress(result.body);\n    console.log(mainprogress);\n  };\n\n  const calculateprogress = (subtasks, status, progress, goal) => {\n    var subTaskProgress = 0;\n    var subTaskCounter = 0;\n    tempprogress = mainprogress;\n    for (let i = 0; i < subtasks.length; i++) {\n      if (status[i] == \"finished\") {\n        subTaskProgress += 1;\n        subTaskCounter += 1;\n      } else {\n        subTaskProgress += progress[i] / goal[i];\n        subTaskCounter += 1;\n      }\n    }\n    tempprogress = subTaskProgress / subTaskCounter;\n    if (tempprogress === 0) {\n      tempprogress = 0;\n    }\n    setMainProgress(tempprogress);\n  };\n\n  useEffect(() => {\n    const viewMainTask = async (mainTaskName, email) => {\n      /* let call1 = \"/findUserType/?\";\n      call1 = call1 + \"email=\" + email;\n      let result1 = await (await fetch(call1)).json();\n      console.log(result1);\n      //setUsertype(result.body);\n      //setUsername(result.name);\n      username = result1.name;\n      setEmployeename(result1.name);*/\n      let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n      call1 = call1 + \"email=\" + email;\n      let result1 = await (await fetch(call1)).json();\n      console.log(result1);\n      //setUsertype(result.body);\n      //setUsername(result.name);\n      username = result1.name;\n      setEmployeename(result1.name);\n      //setEmployeename(result1.name);\n      let call2 = \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n      call2 = call2 + \"employeeName=\" + result1.name;\n      let result2 = await (await fetch(call2)).json();\n      employer = result2.employerName;\n      setEmployername(result2.employerName);\n      console.log(employer);\n      let call = \"https://businessaide-backend.herokuapp.com/getMainTaskData/?\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employer;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      setMainDescription(result.body.description);\n      setMainStatus(result.body.status);\n      setSubTasks(result.body.subtasks);\n      setMainWorkers(result.body.workers);\n      subtasktemp = result.body.subtasks;\n      console.log(subtasktemp);\n      setDescription([]);\n      setWorkers([]);\n      setGoal([]);\n      setStatus([]);\n      setProgress([]);\n      for (let i = 0; i < subtasktemp.length; i++) {\n        let call = \"https://businessaide-backend.herokuapp.com/getSubTaskData/?\";\n        call = call + \"subTaskName=\" + subtasktemp[i] + \"&\";\n        call = call + \"mainTaskName=\" + maintask + \"&\";\n        call = call + \"employerName=\" + employer;\n        let result = await (await fetch(call)).json();\n        console.log(result);\n        //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n        setDescription((description) => [\n          ...description,\n          result.body.description,\n        ]);\n        setWorkers((workers) => [...workers, result.body.workers]);\n        setGoal((goal) => [...goal, result.body.goal]);\n        setProgress((progress) => [...progress, result.body.progress]);\n        setStatus((status) => [...status, result.body.status]);\n        console.log(subtasks);\n      }\n    };\n    if (user) {\n      viewMainTask(maintask, user.email);\n      mainTaskProgress(maintask, user.email);\n    }\n  }, [isUpdated]);\n\n  useEffect(() => {\n    console.log(mainprogress);\n    console.log(mainworkers);\n  }, [mainprogress, mainworkers]);\n\n  useEffect(() => {\n    console.log(goal);\n  }, [goal]);\n\n  /*useEffect(() => {\n    const viewSubTask = async (subTaskName, mainTaskName, employerName) => {\n      let call = \"/getSubTaskData/?\";\n      call = call + \"subTaskName=\" + subTaskName + \"&\";\n      call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n      call = call + \"employerName=\" + employerName;\n      let result = await (await fetch(call)).json();\n      console.log(result);\n      //setSubTasks((subtasks) => [...subtasks, result.subTaskName]);\n      setDescription((description) => [...description, result.description]);\n      setWorkers((workers) => [...workers, result.workers]);\n      setGoal((goal) => [...goal, result.goal]);\n      setProgress((progress) => [...progress, result.progress]);\n      setStatus((status) => [...status, result.status]);\n      \n    };\n   // for (let i = 0; i < subtasks.length; i++) {\n     // viewSubTask(subtasks[i],maintask,\"adam jerry\")\n      \n    //}\n    //console.log(progress);\n    \n  }, [maintask, subtasks]);*/\n\n  useEffect(() => {\n    //progresstemp = progress;\n    console.log(progress);\n  }, [progress]);\n  const subTaskProgress = async (\n    subTaskName,\n    value,\n    mainTaskName,\n    employerName,\n    index\n  ) => {\n    let call = \"https://businessaide-backend.herokuapp.com/subTaskProgress/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"value=\" + value + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n    alert(result.reason);\n\n    //setProgress(progress[index]+1);\n  };\n\n  const completeSubTask = async (subTaskName, mainTaskName, employerName) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeSubTask/?\";\n    call = call + \"subTaskName=\" + subTaskName + \"&\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let result = await (await fetch(call)).json();\n  };\n\n  const completeMainTask = async (mainTaskName, employerName) => {\n    if (!isUpdated) {\n      setIsupdated(true);\n    } else {\n      setIsupdated(false);\n    }\n    let call = \"https://businessaide-backend.herokuapp.com/completeMainTask/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    await (await fetch(call)).json();\n  };\n\n  //subTaskProgress(\"hahahah\",3, maintask, \"adam jerry\")\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Name\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maintask}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Description\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {maindescription}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Task Status\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainstatus}\n        </Typography>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          Workers Allocated\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {mainworkers.length === 0\n            ? \"loading\"\n            : mainworkers.map((worker) => worker + \"  \")}\n        </Typography>\n        <ProgressBar\n          bgcolor={\"#1976d2\"}\n          completed={\n            mainprogress > 1 ? 100 : Math.round((mainprogress / 1) * 100)\n          }\n        />\n        <Button\n          onClick={() => {\n            completeMainTask(maintask, employerName);\n          }}\n        >\n          Mark as Finished\n        </Button>\n        {mainworkers.length === 0 ? (\n          <div>loading...</div>\n        ) : (\n          <div>\n            <List>\n              <ListItem></ListItem>\n              <ListItem>\n                <CreateFeedback\n                  employerName={employerName}\n                  employeeName={employeeName}\n                  mainTaskName={maintask}\n                />\n              </ListItem>\n            </List>\n          </div>\n        )}\n        <div style={{ color: \"white\" }}>hahahah</div>\n        <Grid>\n          {workers.length !== 0 ? (\n            subtasks.map((task, index) => {\n              let choose = false;\n              console.log(index);\n              console.log(workers[index]);\n              if (Array.isArray(workers[index])) {\n                for (let i = 0; i < workers[index].length; i++) {\n                  if (workers[index][i] == employeeName) {\n                    choose = true;\n                  }\n                }\n              } else {\n                if (workers[index] === employeeName) {\n                  choose = true;\n                }\n              }\n\n              console.log(choose);\n              return (\n                <Accordion>\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Typography>{task}</Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Typography>\n                      {console.log(workers)}\n                      <div>Task Description: {description[index]}</div>\n                      <div>workers allocated: {workers[index]}</div>\n                      <div>goal: {goal[index]}</div>\n                      <div>status: {status[index]}</div>\n                      <div>\n                        {\"progress\"}\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={\n                            (progress[index] / goal[index]) * 100 >= 100\n                              ? 100\n                              : (progress[index] / goal[index]) * 100\n                          }\n                        ></ProgressBar>\n                      </div>\n                    </Typography>\n                    <div>\n                      {choose ? (\n                        <div>\n                          <TextField\n                            value={Number(newValue)}\n                            type=\"text\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            label=\"Increase New Progress by\"\n                            autoFocus\n                            onChange={(e) => {\n                              if (!isNaN(e.target.value)) {\n                                setnewValue(e.target.value);\n                              } else {\n                                alert(\"please enter a number\");\n                              }\n                              \n                            }}\n                          />\n\n                          <Button\n                            onClick={() => {\n                              setProgress((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  existingItems[index] + Number(newValue),\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n\n                              subTaskProgress(\n                                task,\n                                newValue,\n                                maintask,\n                                employerName,\n                                index\n                              );\n                              progresstemp = progress;\n                              progresstemp[index] += Number(newValue);\n                              {\n                                if (progresstemp[index] >= goal[index]) {\n                                  setStatus((existingItems) => {\n                                    return [\n                                      ...existingItems.slice(0, index),\n                                      \"finished\",\n                                      ...existingItems.slice(index + 1),\n                                    ];\n                                  });\n                                }\n                              }\n                              calculateprogress(\n                                subtasks,\n                                status,\n                                progresstemp,\n                                goal\n                              );\n                              setMainProgress(tempprogress);\n                              console.log(tempprogress);\n\n                              // mainTaskProgress(maintask, \"adam jerry\")\n                            }}\n                          >\n                            Increase Progress\n                          </Button>\n                          <Button\n                            onClick={() => {\n                              completeSubTask(task, maintask, employerName);\n\n                              setStatus((existingItems) => {\n                                return [\n                                  ...existingItems.slice(0, index),\n                                  \"finished\",\n                                  ...existingItems.slice(index + 1),\n                                ];\n                              });\n                            }}\n                          >\n                            Mark as Finished\n                          </Button>\n                        </div>\n                      ) : (\n                        <div>cannot edit this task</div>\n                      )}\n                    </div>\n                  </AccordionDetails>\n                </Accordion>\n              );\n            })\n          ) : (\n            <div></div>\n          )}\n        </Grid>\n      </CardContent>\n      <CardActions></CardActions>\n    </Card>\n  );\n}\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport ProgressBar from \"./employeeprogressbar\";\nimport { Grid } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport Icon from \"@mui/material/Icon\";\nimport AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useAuth } from \"../useAuth\";\nvar username;\n//const [employeeName, setEmployeename] = useState();\n//const [employerName, setEmployerName] = useState();\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: \"inline-block\", mx: \"2px\", transform: \"scale(0.8)\" }}\n  ></Box>\n);\n//const { user } = useAuth();\nexport default function Employeetasklist() {\n  window.onload = function() {\n    if (!window.location.hash) {\n      window.location = window.location + \"#loaded\";\n      window.location.reload();\n    }\n  };\n  const { user } = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [progress, setProgress] = useState([]);\n  const [errormessage, setErrormessage] = useState();\n  const refreshPage = () => {\n    window.location.reload();\n  };\n\n  var task = [];\n  var employer;\n  const displayTask = async (email) => {\n    let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call1 = call1 + \"email=\" + email;\n    let result1 = await (await fetch(call1)).json();\n    console.log(result1);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    username = result1.name;\n    //setEmployeename(result1.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n    call2 = call2 + \"employeeName=\" + result1.name;\n    let result2 = await (await fetch(call2)).json();\n    employer = result2.employerName;\n    console.log(employer);\n    //setEmployerName(result2);\n    let call = \"https://businessaide-backend.herokuapp.com/displayEmployeeTask/?\";\n    call = call + \"employeeName=\" + result1.name;\n    let result = await (await fetch(call)).json();\n    if (result.status == \"empty\") {\n      setErrormessage(\"There are no tasks\");\n    }\n    for (let i = 0; i < result.body.length; i++) {\n      task[i] = result.body[i];\n      setTasks((tasks) => [...tasks, result.body[i]]);\n\n      //try {mainTaskProgress(task[i], \"adam jerry\" )\n      //} catch (err) {\n      //console.error(err)\n    }\n    for (let i = 0; i < task.length; i++) {\n      let calltask = \"https://businessaide-backend.herokuapp.com/mainTaskProgress/?\";\n      calltask = calltask + \"tasks=\" + task[i] + \"&\";\n      calltask = calltask + \"employerName=\" + result2.employerName;\n      let resulttask = await (await fetch(calltask)).json();\n      setProgress((progress) => [...progress, resulttask.body]);\n    }\n    console.log(progress);\n  };\n  /* const mainTaskProgress = async (mainTaskName, employerName) => {\n    let call = \"/mainTaskProgress/?\";\n    call = call + \"mainTaskName=\" + mainTaskName + \"&\";\n    call = call + \"employerName=\" + employerName;\n    let  result = await (await fetch(call)).json();\n    setProgress((progress) => [...progress, result]);\n  };\n */\n\n  useEffect(() => {\n    if (user) {\n      displayTask(user.email);\n    }\n  }, []);\n\n  //useEffect(() => {\n  //console.log(task.length);\n  //for (let i = 0; i < task.length; i++) {\n  // mainTaskProgress(\"Cook Lunch\", \"adam jerry\");\n  //}\n  //}, []);\n\n  //useEffect(()=>{\n  // console.log(tasks);\n\n  //}, [tasks]);\n\n  useEffect(() => {\n    console.log(tasks);\n    console.log(progress);\n  }, [tasks]);\n\n  return (\n    <div>\n      <h1>Task Page</h1>\n      {errormessage ? (\n        <h2>There are no tasks!</h2>\n      ) : tasks.length === 0 ? (\n        <div>loading...</div>\n      ) : (\n        <Grid\n          container\n          rowSpacing={20}\n          columns={12}\n          columnSpacing={{ xs: 2, sm: 2, md: 3 }}\n        >\n          {tasks.map((doc, index) => {\n            return (\n              <Grid item xs={3}>\n                <Card sx={{ maxWidth: 345 }}>\n                  <CardContent>\n                    <Typography\n                      sx={{ fontSize: 20 }}\n                      color=\"text.secondary\"\n                      gutterBottom\n                    >\n                      Current Task\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"div\">\n                      {doc ? doc : \"loading\"}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {progress[index] ? (\n                        <ProgressBar\n                          bgcolor={\"#6a1b9a\"}\n                          completed={Math.round((progress[index] / 1) * 100)}\n                        />\n                      ) : (\n                        <ProgressBar bgcolor={\"#6a1b9a\"} completed={0} />\n                      )}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Link\n                      to=\"/employees/employeesingletask\"\n                      state={doc}\n                      style={{ textDecoration: \"none\", color: \"blue\" }}\n                    >\n                      View Task\n                    </Link>\n                    <span style={{ color: \"white\" }}>hahahaha</span>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { getAuth } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { Card, List, ListItem, Paper } from \"@mui/material\";\nimport { createTheme } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Typography } from \"@mui/material\";\n\nexport default function EmployeeWelcome() {\n  const theme = createTheme({\n    typography: {\n      fontFamily: [\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n    },\n  });\n\n  const auth = getAuth();\n  const user = auth.currentUser;\n  //const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n  // const docs = await getDocs(q);\n  const [username, setUsername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n  };\n  useEffect(() => {\n    FindUserType(user.email);\n  }, []);\n  //console.log(user.uid);\n  return username ? (\n    <ThemeProvider theme={theme}>\n      <div>\n        <h1>Welcome {username}!</h1>\n        <List>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography\n                sx={{\n                  fontFamily: '\"Segoe UI\"',\n                }}\n                variant=\"h6\"\n              >\n                To view, please go to the \"payroll\" page\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To view each individual task, please to go to \"view task\" page\n                and click on each of the task\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To increase the task progress, enter a number and click on\n                \"increase progress by\"\n              </Typography>\n            </Card>\n          </ListItem>\n          <ListItem>\n            <Card>\n              <ListItemIcon>\n                <SendIcon />\n              </ListItemIcon>\n              <Typography fontFamily={'\"Segoe UI\"'} variant=\"h6\">\n                To complete a main task/subtask, click on \"mark as complete\n                under the task\"\n              </Typography>\n            </Card>\n          </ListItem>\n        </List>\n      </div>\n    </ThemeProvider>\n  ) : (\n    <div>loading...</div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EmployeeDataService from \"../employeeserver\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport AddLocationIcon from \"@mui/icons-material/AddLocation\";\nimport TextField from \"@mui/material/TextField\";\nimport {\n  collection,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport AddIcCallIcon from \"@mui/icons-material/AddIcCall\";\nimport CakeIcon from \"@mui/icons-material/Cake\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { IconButton } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport PaidIcon from \"@mui/icons-material/Paid\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function Salary(props) {\n  const [employees, setEmployees] = useState([]);\n\n  const [open, setOpen] = React.useState(false);\n\n  let feedback;\n\n  useEffect(() => {\n    console.log(props.name);\n    getEmployees(props.name);\n  }, []);\n\n  const getEmployees = async (id) => {\n    const data = await EmployeeDataService.getEmployee(id);\n    console.log(\n      data._document.data.value.mapValue.fields.firstName.stringValue\n    );\n    setEmployees(data);\n  };\n\n  console.log(employees);\n\n  if (employees.length === 0) {\n    return (\n      <div>\n        <p>loading...</p>\n      </div>\n    );\n  } else {\n    const employeename =\n      employees._document.data.value.mapValue.fields.firstName.stringValue +\n      \" \" +\n      employees._document.data.value.mapValue.fields.lastName.stringValue;\n    console.log(employeename + \" hello\" + employeename);\n    return (\n      <div className=\"list\" rowspacing={3}>\n        <div\n          style={{\n            backgroundImage: `url(\"https://thingscareerrelated.files.wordpress.com/2018/03/lake2b.jpg\")`,\n          }}\n        >\n          <img\n            src=\"https://cdn-icons-png.flaticon.com/512/476/476844.png\"\n            alt=\"\"\n            height={200}\n            width={200}\n          />\n          <h1>\n            {\n              employees._document.data.value.mapValue.fields.firstName\n                .stringValue\n            }{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.lastName\n                .stringValue\n            }\n          </h1>\n        </div>\n        <div>\n          <h3>\n            Daily Salary:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.dailySalary\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Days Attended:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.daysAttended\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Overtime Hourly Rate:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overtimeHourlyRate\n                .stringValue\n            }\n          </h3>\n\n          <h3>\n            Overtime Hours:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overtimeHours\n                .stringValue\n            }\n          </h3>\n          <h3>\n            Salary for the Month:{\" \"}\n            {\n              employees._document.data.value.mapValue.fields.overallSalary\n                .stringValue\n            }\n          </h3>\n        </div>\n      </div>\n    );\n  }\n\n  //console.log(employees);\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Input from \"@mui/material/Input\";\nimport FilledInput from \"@mui/material/FilledInput\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Typography from \"@mui/material/Typography\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useEffect } from \"react\";\nimport EmployeeDataService from \"../employeeserver\";\nimport { useAuth } from \"../useAuth\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\n\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialogContent-root\": {\n    padding: theme.spacing(2),\n  },\n  \"& .MuiDialogActions-root\": {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: \"absolute\",\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default function ApplyLeave() {\n  const [employeename, setEmployeename] = useState([]);\n  const theme = useTheme();\n  const [employername, setEmployername] = useState();\n  const { user } = useAuth();\n  const [leaves, setLeave] = useState();\n // const SendLeave = async (employername, employeename, start, end , reason) {\n    \n  //}\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setEmployeename(result.name);\n    let call2 = \"https://businessaide-backend.herokuapp.com/getEmployerName/?\";\n    call2 = call2 + \"employeeName=\" + result.name;\n    let result2 = await (await fetch(call2)).json();\n    setEmployername(result2.employerName);\n    const data = await EmployeeDataService.getEmployee(result.name);\n    console.log(data);\n    setLeave(data._document.data.value.mapValue.fields.leaveQuota.stringValue);\n  };\n\n\n  \n   \n   \n\n  \n\n  const applyForLeave = async (employeeName, employerName, startdate, enddate, duration, reason, leaves) =>{\n    if (Number(duration) > leaves ) {\nalert(\"You do not have enough leaves available!\")\n    }\n    else {\n    let call = \"https://businessaide-backend.herokuapp.com/applyForLeave/?\";\n    call = call + \"employeeName=\" + employeeName + \"&\";\n    call = call + \"employerName=\" + employerName + \"&\";\n    call = call + \"startdate=\" + startdate + \"&\";\n    call = call + \"enddate=\" + enddate + \"&\";\n    call = call + \"duration=\" + duration + \"&\";\n    call = call + \"reason=\" + reason;\n    let result = await (await fetch(call)).json();\n    alert (result.reason);\n    }\n  }\n  useEffect(() => {\n    if (user) {\n      FindUserType(user.email);\n    }\n  }, []);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n  const [remaining, setRemaining] = useState(20);\n  const [personName, setPersonName] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [task, setTask] = useState();\n  const [reason, setReason] = useState();\n  const [start, setStart] = useState();\n  const [end, setEnd] = useState();\n  const [duration, setDuration] = useState();\n  const [employer, setEmployer] = useState([]);\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPersonName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardContent>\n          <Typography sx={{ fontSize: 20 }} color=\"text.secondary\" gutterBottom>\n            Apply Leave\n          </Typography>\n          <Typography variant=\"body2\">\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n              New Leave\n            </Button>\n            <BootstrapDialog\n              onClose={handleClose}\n              aria-labelledby=\"customized-dialog-title\"\n              open={open}\n            >\n              <BootstrapDialogTitle\n                id=\"customized-dialog-title\"\n                onClose={handleClose}\n              >\n                Apply for Leave\n              </BootstrapDialogTitle>\n              <DialogContent dividers>\n                <Box component=\"form\" onSubmit noValidate sx={{ mt: 1 }}>\n                  \n                <TextField\n                    value={leaves ? leaves:\"loading...\"}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"remaining\"\n                    label=\"Available Leaves\"\n                    name=\"remaining\"\n                    autoComplete=\"remaining\"\n                    autoFocus\n                    disabled\n                  />\n                  <TextField\n                    value={reason}\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"leave reason\"\n                    label=\"Leave reason\"\n                    name=\"leave reason\"\n                    autoComplete=\"leave reason\"\n                    autoFocus\n                    onChange={(e) => setReason(e.target.value)}\n                  />\n                  <TextField\n                    value={start}\n                    InputLabelProps={{ shrink: true }}\n                    margin=\"normal\"\n                    type=\"date\"\n                    required\n                    fullWidth\n                    id=\"leave start date\"\n                    label=\"Leave Start Date\"\n                    name=\"leave start date\"\n                    autoComplete=\"leave starting date\"\n                    autoFocus\n                    onChange={(e) => setStart(e.target.value)}\n                  />\n                  <TextField\n                    value={end}\n                    InputLabelProps={{ shrink: true }}\n                    margin=\"normal\"\n                    type=\"date\"\n                    required\n                    fullWidth\n                    id=\"leave end date\"\n                    label=\"Leave End Date\"\n                    name=\"leave end date\"\n                    autoComplete=\"leave end date\"\n                    autoFocus\n                    onChange={(e) => setEnd(e.target.value)}\n                  />\n                  <TextField\n                    value={duration}\n                    margin=\"normal\"\n                    type=\"duration\"\n                    required\n                    fullWidth\n                    id=\"duration\"\n                    label=\"duration\"\n                    name=\"duration\"\n                    autoComplete=\"duration\"\n                    autoFocus\n                    onChange={(e) => setDuration(e.target.value)}\n                  />\n                </Box>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  autoFocus\n                  onClick={() => {\n                    start === undefined ||\n                    end === undefined ||\n                    employeename === undefined ||\n                    employeename === undefined ||\n                    \n                    reason === undefined \n                      ? alert(\"please complete all required fields\")\n                      : leaves === undefined ? alert(\"please wait for available leaves information to load\"): applyForLeave(employeename, employername, start, end, duration, reason,leaves)\n                      \n                    handleClose();\n                  }}\n                >\n                 Apply Leave\n                </Button>\n              </DialogActions>\n            </BootstrapDialog>\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useEffect } from 'react';\r\nimport { useAuth } from '../useAuth';\r\nimport { useState } from 'react';\r\n\r\nexport default function EmployeeLeave() {\r\n    const [error, setError] = useState();\r\n    const {user} = useAuth();\r\n    const [leaves, setLeaves] = useState([]);\r\n    const ViewPendingLeaves = async (status, email)=> {\r\n        let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\r\n        call1 = call1 + \"email=\" + email;\r\n        let result1 = await (await fetch(call1)).json();\r\n        let call = \"https://businessaide-backend.herokuapp.com/viewLeaveRequestsByType/?\";\r\n        call = call + \"employeeName=\" + result1.name + \"&\";\r\n        call = call + \"status=\" + status;\r\n        let result = await (await fetch(call)).json();\r\n        if (result.status == \"error\") {\r\n            setError(\"You do not have any pending leave\");\r\n        }\r\n        setLeaves(result.body);\r\n        console.log(result.body);\r\n    }\r\n    useEffect(() => {\r\n        if (user) {\r\n         ViewPendingLeaves(\"pending\", user.email);\r\n        }\r\n      }, []);\r\n    \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          <TableCell>Status</TableCell>\r\n            <TableCell align=\"right\">Start Date</TableCell>\r\n            <TableCell align=\"right\">End Date</TableCell>\r\n            <TableCell align=\"right\">reason</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {error ? (<h2>{error}</h2>) :\r\n        leaves.length == 0 ? (<div>loading...</div>) :\r\n        <TableBody>\r\n        \r\n          {leaves.map((leave) => (\r\n            <TableRow\r\n              key={leave.startdate}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {leave.status}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{leave.startdate}</TableCell>\r\n              <TableCell align=\"right\">{leave.enddate}</TableCell>\r\n              <TableCell align=\"right\">{leave.reason}</TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useEffect } from 'react';\r\nimport { useAuth } from '../useAuth';\r\nimport { useState } from 'react';\r\n\r\nexport default function EmployeeApprovedLeave() {\r\n    const [error, setError] = useState();\r\n    const {user} = useAuth();\r\n    const [leaves, setLeaves] = useState([]);\r\n    const ViewPendingLeaves = async (status, email)=> {\r\n        let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\r\n        call1 = call1 + \"email=\" + email;\r\n        let result1 = await (await fetch(call1)).json();\r\n        let call = \"https://businessaide-backend.herokuapp.com/viewLeaveRequestsByType/?\";\r\n        call = call + \"employeeName=\" + result1.name + \"&\";\r\n        call = call + \"status=\" + status;\r\n        let result = await (await fetch(call)).json();\r\n        console.log(result);\r\n        if (result.status == \"error\") {\r\n            setError(\"You do not have any apporved leave\");\r\n        }\r\n        setLeaves(result.body);\r\n        console.log(result.body);\r\n    }\r\n    useEffect(() => {\r\n        if (user) {\r\n         ViewPendingLeaves(\"accepted\", user.email);\r\n        }\r\n      }, []);\r\n    \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          <TableCell>Status</TableCell>\r\n            <TableCell align=\"right\">Start Date</TableCell>\r\n            <TableCell align=\"right\">End Date</TableCell>\r\n            <TableCell align=\"right\">reason</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {error ? (<h2>{error}</h2>) :\r\n        leaves.length == 0 ? (<div>loading...</div>) :\r\n        <TableBody>\r\n          {leaves.map((leave) => (\r\n            <TableRow\r\n              key={leave.startdate}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {leave.status}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{leave.startdate}</TableCell>\r\n              <TableCell align=\"right\">{leave.enddate}</TableCell>\r\n              <TableCell align=\"right\">{leave.reason}</TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n     \r\n        </TableBody>\r\n}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useEffect } from 'react';\r\nimport { useAuth } from '../useAuth';\r\nimport { useState } from 'react';\r\n\r\nexport default function EmployeeRejectedLeave() {\r\n    const [error, setError] = useState();\r\n    const {user} = useAuth();\r\n    const [leaves, setLeaves] = useState([]);\r\n    const ViewPendingLeaves = async (status, email)=> {\r\n        let call1 = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\r\n        call1 = call1 + \"email=\" + email;\r\n        let result1 = await (await fetch(call1)).json();\r\n        let call = \"https://businessaide-backend.herokuapp.com/viewLeaveRequestsByType/?\";\r\n        call = call + \"employeeName=\" + result1.name + \"&\";\r\n        call = call + \"status=\" + status;\r\n        let result = await (await fetch(call)).json();\r\n        console.log(result);\r\n        if (result.status == \"error\") {\r\n            setError(\"You do not have any apporved leave\");\r\n        }\r\n        setLeaves(result.body);\r\n        console.log(result.body);\r\n    }\r\n    useEffect(() => {\r\n        if (user) {\r\n         ViewPendingLeaves(\"rejected\", user.email);\r\n        }\r\n      }, []);\r\n    \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          <TableCell>Status</TableCell>\r\n            <TableCell align=\"right\">Start Date</TableCell>\r\n            <TableCell align=\"right\">End Date</TableCell>\r\n            <TableCell align=\"right\">reason</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        {error ? (<h2>{error}</h2>) :\r\n        leaves.length == 0 ? (<div>loading...</div>) :\r\n        <TableBody>\r\n          {leaves.map((leave) => (\r\n            <TableRow\r\n              key={leave.startdate}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {leave.status}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{leave.startdate}</TableCell>\r\n              <TableCell align=\"right\">{leave.enddate}</TableCell>\r\n              <TableCell align=\"right\">{leave.reason}</TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n     \r\n        </TableBody>\r\n}\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { Component } from \"react\";\nimport { useAuth } from \"../useAuth\";\nimport {\n  Link,\n  Route,\n  Routes,\n  BrowserRouter,\n  useNavigate,\n} from \"react-router-dom\";\nimport * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Welcome from \"../Welcome\";\nimport { useState, useEffect } from \"react\";\nimport Employeesingletask from \"./employeesingletask\";\nimport Employeetasklist from \"./employeedisplaytask\";\nimport EmployeeWelcome from \"./employeewelcome\";\nimport Salary from \"./salary\";\nimport ApplyLeave from \"./employeesapplyleave\";\nimport EmployeeLeave from \"./employeeviewleave\";\nimport EmployeeApprovedLeave from \"./employeeviewapprovedleave\";\nimport EmployeeRejectedLeave from \"./employeeviewrejectedleave\";\nimport {\n  getAuth,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nfunction EmployeeBar(props) {\n  console.log(props.name);\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  const { signOutWithGoogle } = useAuth();\n  const auth = getAuth();\n  let nav = useNavigate();\n  const [employeeId, setEmployeeId] = useState(\"\");\n  const [username, setUsername] = useState();\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    //setUsertype(result.body);\n    //setUsername(result.name);\n    setUsername(result.name);\n  };\n\n  const getEmployeeIdHandler = (id) => {\n    console.log(\"The ID of document to be edited: \", id);\n    setEmployeeId(id);\n  };\n\n  return (\n    <div>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              <Link style={{ textDecoration: \"none\", color: \"white\" }} to=\"/\">\n                BusinessAide\n              </Link>\n            </Typography>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/employeeviewapprovedleave\"\n              >\n                View Approved Leaves\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/employeeviewrejectedleave\"\n              >\n                View Rejected Leaves\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/employeeviewleave\"\n              >\n                View Pending Leaves\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/employeeapplyleave\"\n              >\n                Apply for Leave\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/salary\"\n              >\n                Payroll\n              </Link>\n            </Button>\n            <Button>\n              <Link\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                to=\"/employees/employeedisplaytask\"\n              >\n                View Tasks\n              </Link>\n            </Button>\n            <Button\n              onClick={() => {\n                signOutWithGoogle();\n                nav(\"/\");\n              }}\n              color=\"inherit\"\n            >\n              sign out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Routes>\n        <Route path=\"/\" element={<EmployeeWelcome />} />\n        <Route\n          path=\"/employees/employeeapplyleave\"\n          element={<ApplyLeave />}\n        />\n         <Route\n          path=\"/employees/employeeviewrejectedleave\"\n          element={<EmployeeRejectedLeave />}\n        />\n        <Route\n          path=\"/employees/employeeviewapprovedleave\"\n          element={<EmployeeApprovedLeave />}\n        />\n         <Route\n          path=\"/employees/employeeviewleave\"\n          element={<EmployeeLeave />}\n        />\n        <Route\n          path=\"/employees/employeedisplaytask\"\n          element={<Employeetasklist />}\n        />\n        <Route\n          path=\"/employees/employeesingletask\"\n          element={<Employeesingletask />}\n        />\n        <Route\n          path=\"/employees/salary\"\n          element={<Salary name={props.name} />}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default EmployeeBar;\n","import \"./App.css\";\nimport { useAuth } from \"./useAuth\";\nimport Home from \"./display\";\nimport ButtonAppBar from \"./NavBar\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./redux/employee.feature\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { config as firebaseConfig } from \"./config\";\nimport userEvent from \"@testing-library/user-event\";\nimport { useState } from \"react\";\n\n//import HomePage from \"./components/signin/mainpage\";\nimport EmployeeBar from \"./employees/employeenavbar\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function App() {\n  const FindUserType = async (email) => {\n    let call = \"https://businessaide-backend.herokuapp.com/findUserType/?\";\n    call = call + \"email=\" + email;\n    let result = await (await fetch(call)).json();\n    console.log(result);\n    setUsertype(result.body);\n    setUsername(result.name);\n  };\n\n  const { user } = useAuth();\n  const [usertype, setUsertype] = useState();\n  const [username, setUsername] = useState();\n  if (user) {\n    console.log(user.email);\n    FindUserType(user.email);\n  } else {\n  }\n  return (\n    <div className=\"App\">\n      {user ? (\n        usertype == \"employer\" ? (\n          <Home name={username} />\n        ) : (\n          <div>\n            <EmployeeBar name={username} />\n          </div>\n        )\n      ) : (\n        <ButtonAppBar />\n      )}\n    </div>\n  );\n}\n\n//(docs&&docs.docs[0].metadata._document.data.value.mapValue.fields.position.stringValue===\"employee\"? <div>hello</div>:\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./rootreducer\";\nimport userReducer from \"./employee.feature\";\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ProvideAuth } from \"./useAuth\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { getFirestore } from \"redux-firestore\";\nimport { getFirebase } from \"react-redux-firebase\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter basename={window.location.pathname}>\n    <ProvideAuth>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ProvideAuth>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}